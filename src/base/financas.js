let list = document.querySelectorAll('.list');
let menuToggle = document.querySelector('.toggle');
let card2 = document.querySelector('.card2');
let title = document.querySelector('.title');
const body = document.getElementById('body');
const totalEstoqueew = localStorage.getItem('totalEstoqueew');
const saldoCaixa = localStorage.getItem('saldoCaixa');
const saldoBanco = localStorage.getItem('saldoBanco');
const contrudo = document.getElementById('contrudo');

const resultadoLiquidoGuardar1 = localStorage.getItem('resultadoLiquidoGuardar');
let nada = '';
for (let i = 0; i < list.length; i++) {
    list[i].onclick = function () {
        let j = 0;
        while (j < list.length) {
            list[j++].className = 'list';
        }
        list[i].className = 'list active';
    }
}

menuToggle.onclick = function () {
    console.log('ok')
    menuToggle.classList.toggle('active');
    card2.classList.toggle('active');
}

body.addEventListener('click', (e) => {
    e.preventDefault();
    nada = '';

    if (e.target.id == "planoDeContas") {
        function planoDeContas() {
            nada = '';
            nada = ` 
        <div class="animate__animated animate__pulse card3 text-center mr-4">
        <div class="row align-items-center">
            <div class="col-md-6">
              <h1 class="mb-4 text-black"><span class="text-black">Plano de Contas</span></h1>
              <h3 class="mb-4 text-black">...</h3>
            </div>
            <div class="col-md-6 d-none d-sm-none d-md-block">
              <img src="pics/Stocks2.png" alt="tours pics" class="img-fluid">
            </div>
          </div>
        </div>
        <div class="butoes m-4">
        
    </div>
      <div id="cargos"></div>
      <div id="parametro"></div>
          
                  <div class="col-md m-4 text-center">              
                    <button type="button" class="btn btn-outline-dark ml-4" id="addVaga">Adicionar Conta</button>              
                    <button type="button" class="btn btn-outline-dark ml-4" id="eddSubConta">Adicionar Sub-Conta</button>
                  </div>
  
                  <hr>
                  <div class="text-center cardTab animate__animated animate__pulse">
                  <table class="table m-2" id="tabbb">
                  <thead>
                              <tr class="bg-gradient-primary text-center text-black">
                                <th scope="col">Operação</th>
                                <th scope="col">Número da Conta</th>
                                <th scope="col">Tipo da Conta</th>
                                <th scope="col">Valor</th>
                                <th scope="col">Data</th>
                                <th scope="col">Histórico</th>
                              </tr>
                            </thead>
                            <tbody id="myRecruta" class="tt text-center text-black">                     
                            </tbody>
              </table>
                  </div>
  
                  <!-- Modal -->
      <div class="modal fade" style="overflow: auto" id="modelRecrutamento3" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
          <div class="modal-dialog modal-dialog-centered" role="document">
          <div class="modal-content">
              <div class="modal-header">
              <h5 class="modal-title" id="modelTitle3"></h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
              </button>
              </div>
              <div class="modal-body">
                  <input type="text" class="form-control mb-4" id="treinamentoText1">
              </div>
              <div class="modal-footer">
              <button type="button" class="btn btn-primary" id="treinamentoOk13">Confirmar</button>
              </div>
          </div>
          </div>
      </div>
      <!-- Modal -->
      <div class="modal fade" style="overflow: auto" id="modelrecrutamento" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
          <div class="modal-dialog modal-dialog-centered" role="document">
          <div class="modal-content">
              <div class="modal-header">
              <h5 class="modal-title" id="modelTitle"></h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
              </button>
              </div>
              <div class="modal-body" id="recrutamentoLista">
                  
              </div>
              <!-- <div class="modal-footer">
              <button type="button" class="btn btn-primary" id="treinamentoOk">Confirmar</button>
              </div> -->
          </div>
          </div>
      </div>


      <!-- Modal -->
        <div class="modal fade" style="overflow: auto" id="gruposResultados" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
          <div class="modal-dialog modal-dialog-centered" role="document">
          <div class="modal-content">
              <div class="modal-header">
              <h5 class="modal-title" id="novoTrin">Resultados</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
              </button>
              </div>
              <div class="modal-body">
                <form class="edit-post-form">
                    <div class="form-group">
                        <select name="grupo9" id="grupo9" class="form-control mb-4">                            
                        </select>
                            <p>8.5. Imposto Sobre o Rendimento</p> 
                            <select name="grupo56" id="grupo56" class="form-control mb-4">                            
                            </select>                       
                    </div>                            
                    <button type="submit" class="btn btn-dark" id="adicionarAAResultados">Adicionar</button>
                </form>                 
              </div>
            </div>
            </div>
        </div>
        <!-- Modal -->
        <div class="modal fade" style="overflow: auto" id="novaSeleccao" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
          <div class="modal-dialog modal-dialog-centered" role="document">
          <div class="modal-content">
              <div class="modal-header">
              <h5 class="modal-title" id="novoTrinc">Nova Conta</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
              </button>
              </div>
              <div class="modal-body">
                <form class="edit-post-form">
                    <div class="form-group">
                        <h5 class="modal-title" id="novoTrinc">Tipo da Conta</h5>
                        <select name="debitoOuCredito" id="debitoOuCredito" class="form-control mb-4">
                            <option>Débito</option>       
                            <option>Crédito</option>                   
                        </select>
                        <h5 class="modal-title" id="novoTrinc">Valor</h5>
                        <input type="number" id="valorConta" class="form-control mb-4">
                        
                        <h5 class="modal-title" id="novoTrinc">Histórico</h5>
                        <textarea rows="4" cols="50" id="historicoConta" class="form-control mb-4">
                        </textarea>                        
                        <h5 class="modal-title" id="novoTrinc">Classes</h5>
                        <select name="grupo1" id="grupo1" class="form-control mb-4">                            
                        </select>                                     
                    </div>                            
                    <button type="submit" class="btn btn-dark" id="adicionarAA">Ok</button>
                </form>                 
              </div>
            </div>
            </div>
        </div>
        <!-- Modal -->
        <div class="modal fade" style="overflow: auto" id="novaSeleccaoSubConta" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
          <div class="modal-dialog modal-dialog-centered" role="document">
          <div class="modal-content">
              <div class="modal-header">
              <h5 class="modal-title" id="novoTrinc1">Nova Sub-Conta</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
              </button>
              </div>
              <div class="modal-body">
                <form class="edit-post-form">
                    <div class="form-group">
                        <h5 class="modal-title" id="novoTrinc2">Tipo da Conta</h5>
                        <select name="debitoOuCredito" id="debitoOuCredito1" class="form-control mb-4">
                            <option>Débito</option>       
                            <option>Crédito</option>                   
                        </select>
                        <h5 class="modal-title" id="novoTrinc3">Valor</h5>
                        <input type="number" id="valorConta1" class="form-control mb-4">
                        <h5 class="modal-title" id="novoTrinc7">Número de Conta</h5>
                        <input type="text" id="numeroConta" class="form-control mb-4">
                        <h5 class="modal-title" id="novoTrinc4">Histórico</h5>
                        <textarea rows="4" cols="50" id="historicoConta1" class="form-control mb-4">
                        </textarea>                        
                        <h5 class="modal-title" id="novoTrinc5">Nome da Sub-Conta</h5>
                        <input type="text" id="nomeSubConta1" class="form-control mb-4">                          
                        </select>                                     
                    </div>                            
                    <button type="submit" class="btn btn-dark" id="adicionarAASubConta">Ok</button>
                </form>                 
              </div>
            </div>
            </div>
        </div>
        <!-- Modal -->
        <div class="modal fade" style="overflow: auto" id="novaSeleccaoFinanceiros" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
          <div class="modal-dialog modal-dialog-centered" role="document">
          <div class="modal-content">
              <div class="modal-header">
              <h5 class="modal-title" id="novoTrin">Meios Financeiros</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
              </button>
              </div>
              <div class="modal-body">
                <form class="edit-post-form">
                    <div class="form-group">
                        <select name="grupo2" id="grupo2" class="form-control mb-4">                            
                        </select>
                        <p>1.2. Bancos</p> 
                        <select name="grupo10" id="grupo10" class="form-control mb-4">                            
                        </select>
                        <p>1.3. Outros Instrumentos Financeiros</p> 
                        <select name="grupo11" id="grupo11" class="form-control mb-4">                            
                        </select>                                             
                    </div>                            
                    <button type="submit" class="btn btn-dark" id="adicionarAAFinanceiros">Ok</button>
                </form>                 
              </div>
            </div>
            </div>
        </div>
        <!-- Modal -->
        <div class="modal" style="overflow: auto" id="novaSeleccaoActivos" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
          <div class="modal-dialog modal-dialog-centered" role="document">
          <div class="modal-content">
              <div class="modal-header">
              <h5 class="modal-title" id="novoTrin">Inventário e Activos Biológicos</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
              </button>
              </div>
              <div class="modal-body">
                <form class="edit-post-form">
                    <div class="form-group">
                        <select name="grupo3" id="grupo3" class="form-control mb-4">                            
                        </select>
                            <p>2.1. Compras</p> 
                            <select name="grupo12" id="grupo12" class="form-control mb-4">                            
                            </select>
                                <p>2.1.2 Matérias Primas, Auxiliares e Materiais</p> 
                                <select name="grupo57" id="grupo57" class="form-control mb-4">                            
                                </select>
                                <p>2.1.2.3. Materiais</p> 
                                <select name="grupo58" id="grupo58" class="form-control mb-4">                            
                                </select>
                            <p>2.2. Mercadorias</p> 
                            <select name="grupo13" id="grupo13" class="form-control mb-4">                            
                            </select>
                            <p>2.3. Produtos Acabados e Intermédios</p> 
                            <select name="grupo14" id="grupo14" class="form-control mb-4">                            
                            </select>
                            <p>2.4. Subprodutos, Desperdícios, Resíduo e Refugos</p> 
                            <select name="grupo15" id="grupo15" class="form-control mb-4">                            
                            </select>
                            <p>2.6. Matérias Primas, Auxiliares e Materiais</p> 
                            <select name="grupo16" id="grupo16" class="form-control mb-4">                            
                            </select>
                                <p>2.6.3. Materiais</p> 
                                <select name="grupo59" id="grupo59" class="form-control mb-4">                            
                                </select>
                            <p>2.7. Activos Biológicos</p> 
                            <select name="grupo17" id="grupo17" class="form-control mb-4">                            
                            </select>
                                <p>2.7.1. De Produção</p> 
                                <select name="grupo60" id="grupo60" class="form-control mb-4">                            
                                </select>
                                <p>2.7.2. Consumíveis</p> 
                                <select name="grupo61" id="grupo61" class="form-control mb-4">                            
                                </select>
                            <p>2.8. Regularização de Inventários</p> 
                            <select name="grupo18" id="grupo18" class="form-control mb-4">                            
                            </select>
                            <p>2.9. Ajustamentos Para o Valor Realizável Líquido</p> 
                            <select name="grupo19" id="grupo19" class="form-control mb-4">                            
                            </select> 
                            </div>                        
                        <button type="submit" class="btn btn-dark" id="adicionarAAActivos">Ok</button>
                </form>                 
              </div>
            </div>
            </div>
        </div>
        <!-- Modal -->
        <div class="modal fade" style="overflow: auto" id="novaSeleccaoInvestimentos" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
          <div class="modal-dialog modal-dialog-centered" role="document">
          <div class="modal-content">
              <div class="modal-header">
              <h5 class="modal-title" id="novoTrin">Investimentos de Capital</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
              </button>
              </div>
              <div class="modal-body">
                <form class="edit-post-form">
                    <div class="form-group">
                        <select name="grupo4" id="grupo4" class="form-control mb-4">                            
                        </select>
                            <p>3.1. Investimentos Financeiros</p> 
                            <select name="grupo20" id="grupo20" class="form-control mb-4">                            
                            </select>
                            <p>3.2. Activos Tangíveis</p> 
                            <select name="grupo21" id="grupo21" class="form-control mb-4">                            
                            </select>
                                <p>3.2.1 Construções</p> 
                                <select name="grupo62" id="grupo62" class="form-control mb-4">                            
                                </select>
                            <p>3.3. Activos Intangíveis</p> 
                            <select name="grupo22" id="grupo22" class="form-control mb-4">                            
                            </select>
                            <p>3.4. Investimentos em Cruso</p> 
                            <select name="grupo23" id="grupo23" class="form-control mb-4">                            
                            </select>
                            <p>3.8. Amortizações Acumuladas</p> 
                            <select name="grupo24" id="grupo24" class="form-control mb-4">                            
                            </select>
                            <p>3.9. Imparidade Acumulada de Investimentos de Capital</p> 
                            <select name="grupo25" id="grupo25" class="form-control mb-4">                            
                            </select>   
                            </div>                    
                    <button type="submit" class="btn btn-dark" id="adicionarAAInvestimentos">Ok</button>
                </form>                 
              </div>
            </div>
            </div>
        </div>
        <!-- Modal -->
        <div class="modal fade" style="overflow: auto" id="novaSeleccaoContas" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
          <div class="modal-dialog modal-dialog-centered" role="document">
          <div class="modal-content">
              <div class="modal-header">
              <h5 class="modal-title" id="novoTrin">Contas a Receber, Contas a Pagar, Acréscimos e Diferimentos</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
              </button>
              </div>
              <div class="modal-body">
                <form class="edit-post-form">
                    <div class="form-group">
                        <select name="grupo5" id="grupo5" class="form-control mb-4">                            
                        </select>
                            <p>4.1. Clientes</p> 
                            <select name="grupo26" id="grupo26" class="form-control mb-4">                            
                            </select>
                            <p>4.2. Fornecedores</p> 
                            <select name="grupo27" id="grupo27" class="form-control mb-4">                            
                            </select>
                            <p>4.3. Empréstimo Obtidos</p> 
                            <select name="grupo28" id="grupo28" class="form-control mb-4">                            
                            </select>
                                <p>4.3.1. Empréstimos Bancários</p> 
                                <select name="grupo63" id="grupo63" class="form-control mb-4">                            
                                </select>
                                <p>4.3.2. Empréstimos Por Obrigações</p> 
                                <select name="grupo64" id="grupo64" class="form-control mb-4">                            
                                </select>
                            <p>4.4. Estado</p> 
                            <select name="grupo29" id="grupo29" class="form-control mb-4">                            
                            </select>
                                <p>4.4.1. Imposto Sobre o Rendimento</p> 
                                <select name="grupo65" id="grupo65" class="form-control mb-4">                            
                                </select>
                                <p>4.4.2. Impostos Retidos Na Fonte</p> 
                                <select name="grupo66" id="grupo66" class="form-control mb-4">                            
                                </select>
                                <p>4.4.3. Imposto Sobre o Valor Acrescentado</p> 
                                <select name="grupo67" id="grupo67" class="form-control mb-4">                            
                                </select>
                                    <p>4.4.3.1 IVA Suportado</p> 
                                    <select name="grupo68" id="grupo68" class="form-control mb-4">                            
                                    </select>
                                    <p>4.4.3.2 IVA Redutível</p> 
                                    <select name="grupo69" id="grupo69" class="form-control mb-4">                            
                                    </select>
                                    <p>4.4.3.3 IVA Liquido</p> 
                                    <select name="grupo70" id="grupo70" class="form-control mb-4">                            
                                    </select>
                                    <p>4.4.3.4 IVA Regularizações</p> 
                                    <select name="grupo71" id="grupo71" class="form-control mb-4">                            
                                    </select>
                                <p>4.4.4. Restantes Impostos</p> 
                                <select name="grupo72" id="grupo72" class="form-control mb-4">                            
                                </select>
                                <p>4.4.6. Impostos Diferidos</p> 
                                <select name="grupo73" id="grupo73" class="form-control mb-4">                            
                                </select>
                            <p>4.5. Outros Devedores</p> 
                            <select name="grupo30" id="grupo30" class="form-control mb-4">                            
                            </select>
                                <p>4.5.1. Pessoal</p> 
                                <select name="grupo74" id="grupo74" class="form-control mb-4">                            
                                </select>
                                <p>4.5.2. Subscritores de Capital</p> 
                                <select name="grupo75" id="grupo75" class="form-control mb-4">                            
                                </select>
                                <p>4.5.4. Devedores - Sócios, Accionistas ou Proprietários</p> 
                                <select name="grupo76" id="grupo76" class="form-control mb-4">                            
                                </select>
                                <p>4.5.5. Subsídios a Receber</p> 
                                <select name="grupo77" id="grupo77" class="form-control mb-4">                            
                                </select>
                            <p>4.6. Outros Credores</p> 
                            <select name="grupo31" id="grupo31" class="form-control mb-4">                            
                            </select>
                                <p>4.6.1. Fornecedores de Investimentos de Capital</p> 
                                <select name="grupo78" id="grupo78" class="form-control mb-4">                            
                                </select>
                                <p>4.6.2. Pessoal</p> 
                                <select name="grupo79" id="grupo79" class="form-control mb-4">                            
                                </select>
                                <p>4.6.7. Credores - Sócios, Accionistas ou Proprietários</p> 
                                <select name="grupo80" id="grupo80" class="form-control mb-4">                            
                                </select>
                            <p>4.7. Perdas Por Imparidade Acumuladas de Contas a Receber</p> 
                            <select name="grupo32" id="grupo32" class="form-control mb-4">                            
                            </select>
                            <p>4.8. Provisões</p> 
                            <select name="grupo33" id="grupo33" class="form-control mb-4">                            
                            </select>
                            <p>4.9. Acréscimos e Diferimentos</p> 
                            <select name="grupo34" id="grupo34" class="form-control mb-4">                            
                            </select>
                                <p>4.9.1. Acréscimos de Gastos</p> 
                                <select name="grupo81" id="grupo81" class="form-control mb-4">                            
                                </select>
                                <p>4.9.2. Rendimentos Diferidos</p> 
                                <select name="grupo82" id="grupo82" class="form-control mb-4">                            
                                </select>
                                <p>4.9.3. Acréscimos de Rendimentos</p> 
                                <select name="grupo83" id="grupo83" class="form-control mb-4">                            
                                </select>
                                <p>4.9.4. Gastos Diferidos</p> 
                                <select name="grupo84" id="grupo84" class="form-control mb-4">                            
                                </select>  
                                </div>                  
                    <button type="submit" class="btn btn-dark" id="adicionarAAContas">Ok</button>
                </form>                 
              </div>
            </div>
            </div>
        </div>
        <!-- Modal -->
        <div class="modal fade" style="overflow: auto" id="novaSeleccaoCapitalww" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
          <div class="modal-dialog modal-dialog-centered" role="document">
          <div class="modal-content">
              <div class="modal-header">
              <h5 class="modal-title" id="novoTrin">Capital Própria</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
              </button>
              </div>
              <div class="modal-body">
                <form class="edit-post-form">
                    <div class="form-group">
                    <select name="grupo6" id="grupo6" class="form-control mb-4">                            
                    </select>
                        <p>5.2. Acções ou Quotas Próprias</p> 
                        <select name="grupo35" id="grupo35" class="form-control mb-4">                            
                        </select>
                        <p>5.5. Reservas</p> 
                        <select name="grupo36" id="grupo36" class="form-control mb-4">                            
                        </select>
                        <p>5.6. Excedentes de Revalorização de Activos Tangíveis e Intangíveis</p> 
                        <select name="grupo37" id="grupo37" class="form-control mb-4">                            
                        </select>
                            <p>5.6.1. Revalorizações Legais</p> 
                            <select name="grupo85" id="grupo85" class="form-control mb-4">                            
                            </select>
                            <p>5.6.2. Outros Excessos</p> 
                            <select name="grupo86" id="grupo86" class="form-control mb-4">                            
                            </select>
                        <p>5.8. Outras Variações no Capital Próprios</p> 
                        <select name="grupo38" id="grupo38" class="form-control mb-4">                            
                        </select>
                        </div>
                    <button type="submit" class="btn btn-dark" id="adicionarAACapital">Ok</button>
                </form>                 
              </div>
            </div>
            </div>
        </div>
        <!-- Modal -->
        <div class="modal fade" style="overflow: auto" id="novaSeleccaoGastos" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
          <div class="modal-dialog modal-dialog-centered" role="document">
          <div class="modal-content">
              <div class="modal-header">
              <h5 class="modal-title" id="novoTrin">Gastos e Perdas</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
              </button>
              </div>
              <div class="modal-body">
                <form class="edit-post-form">
                    <div class="form-group">
                    <select name="grupo7" id="grupo7" class="form-control mb-4">                            
                    </select>
                    <p>6.1. Custo dos Inventários</p> 
                    <select name="grupo39" id="grupo39" class="form-control mb-4">                            
                    </select>
                        <p>6.1.1. Custo dos Inventários Vendidos ou Consumidos</p> 
                        <select name="grupo87" id="grupo87" class="form-control mb-4">                            
                        </select>
                            <p>6.1.1.6. De Matérias Primas, Auxiliares e Materiais</p> 
                            <select name="grupo88" id="grupo88" class="form-control mb-4">                            
                            </select>
                        <p>6.1.2. Variação da Produção</p> 
                        <select name="grupo89" id="grupo89" class="form-control mb-4">                            
                        </select>
                    <p>6.2. Gastos com Pessoal</p> 
                    <select name="grupo40" id="grupo40" class="form-control mb-4">                            
                    </select>
                        <p>6.2.5. Ajudas de Custo</p> 
                        <select name="grupo90" id="grupo90" class="form-control mb-4">                            
                        </select>
                        <p>6.2.6. Indemnizações</p> 
                        <select name="grupo91" id="grupo91" class="form-control mb-4">                            
                        </select>
                    <p>6.3. Fornecimentos e Serviços de Terceiros</p> 
                    <select name="grupo41" id="grupo41" class="form-control mb-4">                            
                    </select>
                        <p>6.3.2. Fornecimentos e Serviços</p> 
                        <select name="grupo92" id="grupo92" class="form-control mb-4">                            
                        </select>
                            <p>6.3.2.1.3. Combustíveis</p> 
                            <select name="grupo93" id="grupo93" class="form-control mb-4">                            
                            </select>
                                <p>6.3.2.1.3.1. Gasóleo</p> 
                                <select name="grupo94" id="grupo94" class="form-control mb-4">                            
                                </select>
                                <p>6.3.2.1.3.2. Restantes Combustíveis</p> 
                                <select name="grupo95" id="grupo95" class="form-control mb-4">                            
                                </select>
                                <p>6.3.2.1.3.3. Lubrificantes</p> 
                                <select name="grupo96" id="grupo96" class="form-control mb-4">                            
                                </select>
                            <p>6.3.2.1.5. Material de Manutanção e Reparação</p> 
                            <select name="grupo97" id="grupo97" class="form-control mb-4"> 
                            </select>
                            <p>6.3.2.2.7. Publicidade e Propaganda</p> 
                            <select name="grupo98" id="grupo98" class="form-control mb-4"> 
                            </select>
                            <p>6.3.2.2.8. Deslocações e Estadias</p> 
                            <select name="grupo99" id="grupo99" class="form-control mb-4"> 
                            </select>
                            <p>6.3.2.3.3. Seguros</p> 
                            <select name="grupo100" id="grupo100" class="form-control mb-4">
                            </select>
                    <p>6.4. Perdas por Imparidade do Período</p> 
                    <select name="grupo42" id="grupo42" class="form-control mb-4">                            
                    </select>
                        <p>6.4.8. Contas a Receber</p> 
                        <select name="grupo101" id="grupo101" class="form-control mb-4">                            
                        </select>
                    <p>6.5. Amortizações do Período</p> 
                    <select name="grupo43" id="grupo43" class="form-control mb-4">                            
                    </select>
                    <p>6.6. Provisões do Período</p> 
                    <select name="grupo44" id="grupo44" class="form-control mb-4">                            
                    </select>
                    <p>6.7. Perdas por Redução do Justo Valor</p> 
                    <select name="grupo45" id="grupo45" class="form-control mb-4">                            
                    </select>
                    <p>6.8. Outros Gastos e Perdas Operacionais</p> 
                    <select name="grupo46" id="grupo46" class="form-control mb-4">                            
                    </select>
                        <p>6.8.2. Impostos e Taxas</p> 
                        <select name="grupo102" id="grupo102" class="form-control mb-4">                            
                        </select>
                        <p>6.8.3. Perdas em Investimentos de Capital</p> 
                        <select name="grupo103" id="grupo103" class="form-control mb-4">                            
                        </select>
                        <p>6.8.4. Perdas em Investimentos e Actos Biológicos</p> 
                        <select name="grupo104" id="grupo104" class="form-control mb-4">                            
                        </select>
                        <p>6.8.9. Outros Gastos Operacionais</p> 
                        <select name="grupo105" id="grupo105" class="form-control mb-4">                            
                        </select>
                    <p>6.9. Gastos e Perdas Financeiras</p> 
                    <select name="grupo47" id="grupo47" class="form-control mb-4">                            
                    </select>
                        <p>6.9.1. Juros Suportados</p> 
                        <select name="grupo106" id="grupo106" class="form-control mb-4">                            
                        </select>
                            <p>6.9.1.6 Juros de Mora e Compensatórios</p> 
                            <select name="grupo107" id="grupo107" class="form-control mb-4">                            
                            </select>
                        <p>6.9.4. Diferenças de Câmbio Desfavoráveis</p> 
                        <select name="grupo108" id="grupo108" class="form-control mb-4">                            
                        </select>
                        <p>6.9.8. Outros Gastos e Perdas Financeiros</p> 
                        <select name="grupo109" id="grupo109" class="form-control mb-4">                            
                        </select>
                        </div>
                    <button type="submit" class="btn btn-dark" id="adicionarAAGastos">Ok</button>
                </form>                 
              </div>
            </div>
            </div>
        </div>
        <!-- Modal -->
        <div class="modal fade" style="overflow: auto" id="rendimentosSeleccao" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
          <div class="modal-dialog modal-dialog-centered" role="document">
          <div class="modal-content">
              <div class="modal-header">
              <h5 class="modal-title">Rendimentos e Ganhos</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
              </button>
              </div>
              <div class="modal-body">
                <form class="edit-post-form">
                    <div class="form-group">
                        <select name="grupo8" id="grupo8" class="form-control mb-4">                            
                        </select>
                            <p>7.1. Vendas</p> 
                            <select name="grupo48" id="grupo48" class="form-control mb-4">                            
                            </select>
                            <p>7.2. Prestação de Serviços</p> 
                            <select name="grupo49" id="grupo49" class="form-control mb-4">                            
                            </select>
                            <p>7.3. Investimentos Realizados Pela Própria Empresao</p> 
                            <select name="grupo50" id="grupo50" class="form-control mb-4">                            
                            </select>
                            <p>7.4. Prestação de Período</p> 
                            <select name="grupo51" id="grupo51" class="form-control mb-4">                            
                            </select>
                                <p>7.4.1. De Perdas por Imparidade</p> 
                                <select name="grupo110" id="grupo110" class="form-control mb-4">                            
                                </select>
                                <p>7.4.2. De Amortizações</p> 
                                <select name="grupo111" id="grupo111" class="form-control mb-4">                            
                                </select>
                                <p>7.4.3. De Provisões</p> 
                                <select name="grupo112" id="grupo112" class="form-control mb-4">                            
                                </select>
                            <p>7.5. Rendimentos Suplementares</p> 
                            <select name="grupo52" id="grupo52" class="form-control mb-4">                            
                            </select>
                            <p>7.6. Outros Rendimentos e Ganhos Operacionais</p> 
                            <select name="grupo53" id="grupo53" class="form-control mb-4">                            
                            </select>
                                <p>7.6.1. Subsídios Para Investimentos</p> 
                                <select name="grupo113" id="grupo113" class="form-control mb-4">                            
                                </select>
                                <p>7.6.2. Subsídios à Exploração</p> 
                                <select name="grupo114" id="grupo114" class="form-control mb-4">                            
                                </select>
                                <p>7.6.3. Ganhos em Investimentos de Capital</p> 
                                <select name="grupo115" id="grupo115" class="form-control mb-4">                            
                                </select>
                                <p>7.6.4. Ganhos em Inventários e Activos Biológicos</p> 
                                <select name="grupo116" id="grupo116" class="form-control mb-4">                            
                                </select>
                                <p>7.6.9. Outros Rendimentos Alheios ao Valor Acrescentado</p> 
                                <select name="grupo117" id="grupo117" class="form-control mb-4">                            
                                </select>
                            <p>7.8. Rendimentos e Ganhos Financeiros</p> 
                            <select name="grupo54" id="grupo54" class="form-control mb-4">                            
                            </select>
                                <p>7.8.1 Juros Obtidos</p> 
                                <select name="grupo118" id="grupo118" class="form-control mb-4">                            
                                </select>
                                <p>7.8.4 Diferenças de Câmbio Favoráveis</p> 
                                <select name="grupo119" id="grupo119" class="form-control mb-4">                            
                                </select>
                            <p>7.9. Ganhos por Aumento do Justo Valor</p> 
                            <select name="grupo55" id="grupo55" class="form-control mb-4">                            
                            </select>
                            </div>
                    <button type="submit" class="btn btn-dark" data-dismiss="modal" id="adicionarAARendimentos">Ok</button>
                </form>                 
              </div>
            </div>
            </div>
        </div>
        `;
            contrudo.innerHTML = nada;

            const treinamentoOk1 = document.getElementById('treinamentoOk1');
            const grupo1 = document.getElementById('grupo1');
            const grupo2 = document.getElementById('grupo2');
            const grupo3 = document.getElementById('grupo3');
            const grupo4 = document.getElementById('grupo4');
            const grupo5 = document.getElementById('grupo5');
            const grupo6 = document.getElementById('grupo6');
            const grupo7 = document.getElementById('grupo7');
            const grupo8 = document.getElementById('grupo8');
            const grupo9 = document.getElementById('grupo9');
            const grupo101 = document.getElementById('grupo10');
            const grupo11 = document.getElementById('grupo11');
            const grupo12 = document.getElementById('grupo12');
            const grupo13 = document.getElementById('grupo13');
            const grupo14 = document.getElementById('grupo14');
            const grupo15 = document.getElementById('grupo15');
            const grupo16 = document.getElementById('grupo16');
            const grupo17 = document.getElementById('grupo17');
            const grupo18 = document.getElementById('grupo18');
            const grupo19 = document.getElementById('grupo19');
            const grupo20 = document.getElementById('grupo20');
            const grupo21 = document.getElementById('grupo21');
            const grupo22 = document.getElementById('grupo22');
            const grupo23 = document.getElementById('grupo23');
            const grupo24 = document.getElementById('grupo24');
            const grupo25 = document.getElementById('grupo25');
            const grupo26 = document.getElementById('grupo26');
            const grupo27 = document.getElementById('grupo27');
            const grupo28 = document.getElementById('grupo28');
            const grupo29 = document.getElementById('grupo29');
            const grupo30 = document.getElementById('grupo30');
            const grupo31 = document.getElementById('grupo31');
            const grupo32 = document.getElementById('grupo32');
            const grupo33 = document.getElementById('grupo33');
            const grupo34 = document.getElementById('grupo34');
            const grupo35 = document.getElementById('grupo35');
            const grupo36 = document.getElementById('grupo36');
            const grupo37 = document.getElementById('grupo37');
            const grupo38 = document.getElementById('grupo38');
            const grupo39 = document.getElementById('grupo39');
            const grupo40 = document.getElementById('grupo40');
            const grupo41 = document.getElementById('grupo41');
            const grupo42 = document.getElementById('grupo42');
            const grupo43 = document.getElementById('grupo43');
            const grupo44 = document.getElementById('grupo44');
            const grupo45 = document.getElementById('grupo45');
            const grupo46 = document.getElementById('grupo46');
            const grupo47 = document.getElementById('grupo47');
            const grupo48 = document.getElementById('grupo48');
            const grupo49 = document.getElementById('grupo49');
            const grupo50 = document.getElementById('grupo50');
            const grupo51 = document.getElementById('grupo51');
            const grupo52 = document.getElementById('grupo52');
            const grupo53 = document.getElementById('grupo53');
            const grupo54 = document.getElementById('grupo54');
            const grupo55 = document.getElementById('grupo55');
            const grupo56 = document.getElementById('grupo56');
            const grupo57 = document.getElementById('grupo57');
            const grupo58 = document.getElementById('grupo58');
            const grupo59 = document.getElementById('grupo59');
            const grupo60 = document.getElementById('grupo60');
            const grupo61 = document.getElementById('grupo61');
            const grupo62 = document.getElementById('grupo62');
            const grupo63 = document.getElementById('grupo63');
            const grupo64 = document.getElementById('grupo64');
            const grupo65 = document.getElementById('grupo65');
            const grupo66 = document.getElementById('grupo66');
            const grupo67 = document.getElementById('grupo67');
            const grupo68 = document.getElementById('grupo68');
            const grupo69 = document.getElementById('grupo69');
            const grupo70 = document.getElementById('grupo70');
            const grupo71 = document.getElementById('grupo71');
            const grupo72 = document.getElementById('grupo72');
            const grupo73 = document.getElementById('grupo73');
            const grupo74 = document.getElementById('grupo74');
            const grupo75 = document.getElementById('grupo75');
            const grupo76 = document.getElementById('grupo76');
            const grupo77 = document.getElementById('grupo77');
            const grupo78 = document.getElementById('grupo78');
            const grupo79 = document.getElementById('grupo79');
            const grupo80 = document.getElementById('grupo80');
            const grupo81 = document.getElementById('grupo81');
            const grupo82 = document.getElementById('grupo82');
            const grupo83 = document.getElementById('grupo83');
            const grupo84 = document.getElementById('grupo84');
            const grupo85 = document.getElementById('grupo85');
            const grupo86 = document.getElementById('grupo86');
            const grupo87 = document.getElementById('grupo87');
            const grupo88 = document.getElementById('grupo88');
            const grupo89 = document.getElementById('grupo89');
            const grupo90 = document.getElementById('grupo90');
            const grupo91 = document.getElementById('grupo91');
            const grupo92 = document.getElementById('grupo92');
            const grupo93 = document.getElementById('grupo93');
            const grupo94 = document.getElementById('grupo94');
            const grupo95 = document.getElementById('grupo95');
            const grupo96 = document.getElementById('grupo96');
            const grupo97 = document.getElementById('grupo97');
            const grupo98 = document.getElementById('grupo98');
            const grupo99 = document.getElementById('grupo99');
            const grupo100 = document.getElementById('grupo100');
            const grupo1011 = document.getElementById('grupo101');
            const grupo102 = document.getElementById('grupo102');
            const grupo103 = document.getElementById('grupo103');
            const grupo104 = document.getElementById('grupo104');
            const grupo105 = document.getElementById('grupo105');
            const grupo106 = document.getElementById('grupo106');
            const grupo107 = document.getElementById('grupo107');
            const grupo108 = document.getElementById('grupo108');
            const grupo109 = document.getElementById('grupo109');
            const grupo110 = document.getElementById('grupo110');
            const grupo111 = document.getElementById('grupo111');
            const grupo112 = document.getElementById('grupo112');
            const grupo113 = document.getElementById('grupo113');
            const grupo114 = document.getElementById('grupo114');
            const grupo115 = document.getElementById('grupo115');
            const grupo116 = document.getElementById('grupo116');
            const grupo117 = document.getElementById('grupo117');
            const grupo118 = document.getElementById('grupo118');
            const grupo119 = document.getElementById('grupo119');
            const myRecruta = document.getElementById('myRecruta');
            const edtForm = document.getElementById('adicionarAA');
            const empresa2 = localStorage.getItem('empresa');
            const addVaga = document.getElementById('addVaga');
            const data = document.getElementById('data');
            const tipoDocumento = document.getElementById('tipoDocumento');
            const tipoConta = document.getElementById('tipoConta');
            const conta = document.getElementById('conta');
            const descricao = document.getElementById('descricao');
            const clienteEmpresa = document.getElementById('clienteEmpresa');
            const dataVencimento = document.getElementById('dataVencimento');
            const satus = document.getElementById('satus');
            const url3 = `https://stocksmanager1.herokuapp.com/getAllDataPequenas/${empresa2}`;
            const token = localStorage.getItem('token');
            let h = { 'authorization': `Bearer ${token}`, 'Content-Type': 'application/json' };
            let iDd = '';
            let listaGrupo1 = '';
            let listaGrupo2 = '';
            let listaGrupo3 = '';
            let listaGrupo4 = '';
            let listaGrupo5 = '';
            let listaGrupo6 = '';
            let listaGrupo7 = '';
            let listaGrupo8 = '';
            let listaGrupo9 = '';
            let listaGrupo10 = '';
            let listaGrupo11 = '';
            let listaGrupo12 = '';
            let listaGrupo13 = '';
            let listaGrupo14 = '';
            let listaGrupo15 = '';
            let listaGrupo16 = '';
            let listaGrupo17 = '';
            let listaGrupo18 = '';
            let listaGrupo19 = '';
            let listaGrupo20 = '';
            let listaGrupo21 = '';
            let listaGrupo22 = '';
            let listaGrupo23 = '';
            let listaGrupo24 = '';
            let listaGrupo25 = '';
            let listaGrupo26 = '';
            let listaGrupo27 = '';
            let listaGrupo28 = '';
            let listaGrupo29 = '';
            let listaGrupo30 = '';
            let listaGrupo31 = '';
            let listaGrupo32 = '';
            let listaGrupo33 = '';
            let listaGrupo34 = '';
            let listaGrupo36 = '';
            let listaGrupo35 = '';
            let listaGrupo37 = '';
            let listaGrupo38 = '';
            let listaGrupo39 = '';
            let listaGrupo40 = '';
            let listaGrupo41 = '';
            let listaGrupo42 = '';
            let listaGrupo43 = '';
            let listaGrupo44 = '';
            let listaGrupo45 = '';
            let listaGrupo46 = '';
            let listaGrupo47 = '';
            let listaGrupo48 = '';
            let listaGrupo49 = '';
            let listaGrupo50 = '';
            let listaGrupo51 = '';
            let listaGrupo52 = '';
            let listaGrupo53 = '';
            let listaGrupo54 = '';
            let listaGrupo55 = '';
            let listaGrupo56 = '';
            let listaGrupo57 = '';
            let listaGrupo58 = '';
            let listaGrupo59 = '';
            let listaGrupo60 = '';
            let listaGrupo61 = '';
            let listaGrupo62 = '';
            let listaGrupo63 = '';
            let listaGrupo64 = '';
            let listaGrupo65 = '';
            let listaGrupo66 = '';
            let listaGrupo67 = '';
            let listaGrupo68 = '';
            let listaGrupo69 = '';
            let listaGrupo70 = '';
            let listaGrupo71 = '';
            let listaGrupo72 = '';
            let listaGrupo73 = '';
            let listaGrupo74 = '';
            let listaGrupo75 = '';
            let listaGrupo76 = '';
            let listaGrupo77 = '';
            let listaGrupo78 = '';
            let listaGrupo79 = '';
            let listaGrupo80 = '';
            let listaGrupo81 = '';
            let listaGrupo82 = '';
            let listaGrupo83 = '';
            let listaGrupo84 = '';
            let listaGrupo85 = '';
            let listaGrupo86 = '';
            let listaGrupo87 = '';
            let listaGrupo88 = '';
            let listaGrupo89 = '';
            let listaGrupo90 = '';
            let listaGrupo91 = '';
            let listaGrupo92 = '';
            let listaGrupo93 = '';
            let listaGrupo94 = '';
            let listaGrupo95 = '';
            let listaGrupo96 = '';
            let listaGrupo97 = '';
            let listaGrupo98 = '';
            let listaGrupo99 = '';
            let listaGrupo100 = '';
            let listaGrupo101 = '';
            let listaGrupo102 = '';
            let listaGrupo103 = '';
            let listaGrupo104 = '';
            let listaGrupo105 = '';
            let listaGrupo106 = '';
            let listaGrupo107 = '';
            let listaGrupo108 = '';
            let listaGrupo109 = '';
            let listaGrupo110 = '';
            let listaGrupo111 = '';
            let listaGrupo112 = '';
            let listaGrupo113 = '';
            let listaGrupo114 = '';
            let listaGrupo115 = '';
            let listaGrupo116 = '';
            let listaGrupo117 = '';
            let listaGrupo118 = '';
            let listaGrupo119 = '';
            function currencyFormat(num) {
                return num.toFixed(2).replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,')
            }
            fetch(url3)
                .then(res => res.json())
                .then(content => {
                    const data = content[0]['planoDeContas'];
                    console.log(content[0]);
                    for (var i = 0; i < data.length; i++) {

                        var newRow = myRecruta.insertRow();
                        var newCell1 = newRow.insertCell(0);
                        var newCell2 = newRow.insertCell(1);
                        var newCell3 = newRow.insertCell(2);
                        var newCell4 = newRow.insertCell(3);
                        var newCell5 = newRow.insertCell(4);
                        var newCell6 = newRow.insertCell(5);

                        newCell1.innerHTML = `<div class="operacao">${content[0]['planoDeContas'][i]['operacao']}</div>`;
                        newCell2.innerHTML = `<div class="numeroConta">${content[0]['planoDeContas'][i]['numeroConta']}</div>`;
                        newCell3.innerHTML = `<div class="tipoConta">${content[0]['planoDeContas'][i]['tipoConta']}</div>`;;
                        newCell4.innerHTML = `<div class="valor">${currencyFormat(parseInt(content[0]['planoDeContas'][i]['valor']))}</div>`;
                        newCell5.innerHTML = `<div class="data">${content[0]['planoDeContas'][i]['data']}</div>`;
                        newCell6.innerHTML = `<div class="historico">${content[0]['planoDeContas'][i]['historico']}</div>`;
                    }
                    // Classes
                    const grupo1Lista = ['', 'Meios Financeiros', 'Inventário e Activos Biológicos',
                        'Investimentos de Capital', 'Contas a Receber, Contas a Pagar, Acréscimos e Diferimentos', 'Capital Própria',
                        'Gastos e Perdas', 'Rendimentos e Ganhos', 'Resultados']
                    grupo1Lista.forEach(rec => {
                        listaGrupo1 += `
                            <option>${rec}</option>         
                        `;
                    })
                    grupo1.innerHTML = listaGrupo1;

                    // Meios Financeiros
                    const grupo1Lista1 = ['', 'Caixa', 'Bancos', 'Outros Instrumentos Financeiros']
                    grupo1Lista1.forEach(rec => {
                        listaGrupo2 += `
                            <option>${rec}</option>         
                        `;
                    })
                    grupo2.innerHTML = listaGrupo2;

                    // Inventário e Activos Biológicos
                    const grupo1Lista2 = ['', 'Compras', 'Mercadorias', 'Produtos Acabados e Intermédio',
                        'Subprodutos, Desperdícios, Resíduo e Refugos', 'Produtos ou Serviços em Curso', 'Matérias Primas, Auxiliares e Materiais',
                        'Activos Biológicos', 'Regularização de Inventários', 'Ajustamentos Para o Valor Realizável Líquido']
                    grupo1Lista2.forEach(rec => {
                        listaGrupo3 += `
                            <option>${rec}</option>         
                        `;
                    })
                    grupo3.innerHTML = listaGrupo3;

                    // Investimentos de Capital
                    const grupo1Lista3 = ['', 'Investimentos Financeiros', 'Activos Tangíveis',
                        'Activos Intangíveis', 'Investimentos em Cruso', 'Activos Não Correntes Detidos Para Venda',
                        'Activos Tangíveis de Investimentos', 'Amortizações Acumuladas', 'Imparidade Acumulada de Investimentos de Capital']
                    grupo1Lista3.forEach(rec => {
                        listaGrupo4 += `
                            <option>${rec}</option>         
                        `;
                    })
                    grupo4.innerHTML = listaGrupo4;

                    // Contas a Receber, Contas a Pagar, Acréscimos e Diferimentos
                    const grupo1Lista4 = ['', 'Clientes', 'Fornecedores', ' Empréstimos Obtidos', 'Estado', 'Outros Devedores',
                        'Outros Credores', 'Perdas por Imparidade Acumuladas de Contas a Receber', 'Provisões', 'Acréscimos e Diferimentos']
                    grupo1Lista4.forEach(rec => {
                        listaGrupo5 += `
                            <option>${rec}</option>         
                        `;
                    })
                    grupo5.innerHTML = listaGrupo5;

                    // Capital Própria
                    const grupo1Lista5 = ['', 'Capital', 'Acções ou Quotas Próprias', 'Prestações Suplementares', 'Prémios de Emissão de Acções ou Quotas',
                        'Reservas', ' Excedentes de Revalorização de Activos Tangíveis e Intangíveis', 'Outras Variações no Capital Próprio', 'Resultados Transitados']
                    grupo1Lista5.forEach(rec => {
                        listaGrupo6 += `
                            <option>${rec}</option>         
                        `;
                    })
                    grupo6.innerHTML = listaGrupo6;

                    // Gastos e Perdas
                    const grupo1Lista6 = ['', 'Custo dos Inventários', 'Gastos com o Pessoal', 'Fornecimentos e Serviços de Terceiros',
                        'Perdas por Imparidade do Período', 'Amortizações do Período', 'Provisões do Período', 'Perdas por Redução do Justo Valor',
                        'Outros Gastos e Perdas Operacionais', 'Gastos e Perdas Financeiros']
                    grupo1Lista6.forEach(rec => {
                        listaGrupo7 += `
                            <option>${rec}</option>         
                        `;
                    })
                    grupo7.innerHTML = listaGrupo7;

                    // Rendimentos e Ganhos
                    const grupo1Lista7 = ['', 'Vendas', 'Prestação de Serviços', 'Investimentos Realizados Pela Própria Empresa', 'Reversões do Periodo',
                        'Rendimentos Suplementares', 'Outros Rendimentos e Ganhos Operacionais', 'Rendimentos e Ganhos Financeiros', 'Ganhos por Aumento do Justo Valor']
                    grupo1Lista7.forEach(rec => {
                        listaGrupo8 += `
                            <option>${rec}</option>         
                        `;
                    })
                    grupo8.innerHTML = listaGrupo8;

                    // Resultados
                    const grupo1Lista8 = ['', 'Resultados Operacionais', 'Resultados Financeiros', 'Resultados Correntes', 'Imposto Sobre o Rendimento',
                        'Resultado Liquido do Período', 'Dividendos Antecipados']
                    grupo1Lista8.forEach(rec => {
                        listaGrupo9 += `
                            <option>${rec}</option>         
                        `;
                    })
                    grupo9.innerHTML = listaGrupo9;

                    // Bancos
                    const grupo1Lista9 = ['', 'Depósitos à Ordem', 'Depósitos com Pré-Aviso', 'Depósitos a Prazo']
                    grupo1Lista9.forEach(rec => {
                        listaGrupo10 += `
                            <option>${rec}</option>         
                        `;
                    })
                    grupo101.innerHTML = listaGrupo10;

                    // Outros Instrumentos Financeiros
                    const grupo1Lista10 = ['', 'Derivados', 'Detidos Para Negociação', 'Outros Instrumentos Financeiros ao Justo Valor Através dos Resultados']
                    grupo1Lista10.forEach(rec => {
                        listaGrupo11 += `
                            <option>${rec}</option>         
                        `;
                    })
                    grupo11.innerHTML = listaGrupo11;

                    // Compras
                    const grupo1Lista11 = ['', 'Mercadorias', 'Matérias Primas, Auxiliares e Materiais',
                        'Devoluções de Compras', 'Descontos e Abatimentos em Compras']
                    grupo1Lista11.forEach(rec => {
                        listaGrupo12 += `
                            <option>${rec}</option>         
                        `;
                    })
                    grupo12.innerHTML = listaGrupo12;

                    // Mercadorias
                    const grupo1Lista12 = ['', 'Mercadorias em Trânsito', 'Mercadorias em Poder de Terceiros']
                    grupo1Lista12.forEach(rec => {
                        listaGrupo13 += `
                            <option>${rec}</option>         
                        `;
                    })
                    grupo13.innerHTML = listaGrupo13;

                    // Produtos Acabados e Intermédios
                    const grupo1Lista13 = ['', 'Produtos Acabados em Poder de Terceiros']
                    grupo1Lista13.forEach(rec => {
                        listaGrupo14 += `
                            <option>${rec}</option>         
                        `;
                    })
                    grupo14.innerHTML = listaGrupo14;

                    // Subprodutos, Desperdícios, Resíduo e Refugos
                    const grupo1Lista14 = ['', 'Subprodutos', 'Desperdícios, Resíduos e Refugos']
                    grupo1Lista14.forEach(rec => {
                        listaGrupo15 += `
                            <option>${rec}</option>         
                        `;
                    })
                    grupo15.innerHTML = listaGrupo15;

                    // Matérias Primas, Auxiliares e Materiais
                    const grupo1Lista15 = ['', 'Matérias Primas', 'Matérias Auxiliares', 'Materiais', 'Matérias Primas, Auxiliares e Materiais em Trânsito']
                    grupo1Lista15.forEach(rec => {
                        listaGrupo16 += `
                            <option>${rec}</option>         
                        `;
                    })
                    grupo16.innerHTML = listaGrupo16;

                    // Activos Biológicos
                    const grupo1Lista16 = ['', 'De Produção', 'Consumíveis']
                    grupo1Lista16.forEach(rec => {
                        listaGrupo17 += `
                            <option>${rec}</option>         
                        `;
                    })
                    grupo17.innerHTML = listaGrupo17;

                    // Regularização de Inventários
                    const grupo1Lista17 = ['', 'Mercadorias', 'Produtos Acabados e Intermédios', 'Subprodutos, Desperdícios, Resíduos e Refugos',
                        'Produtos ou Serviços em Curso', 'Matérias Primas, Auxiliares e Materiais', 'Activos Biológicos']
                    grupo1Lista17.forEach(rec => {
                        listaGrupo18 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo18.innerHTML = listaGrupo18;

                    // Ajustamentos Para o Valor Realizável Líquido
                    const grupo1Lista18 = ['', 'Mercadorias', 'Produtos Acabados e Intermédios', 'Subprodutos, Desperdícios, Resíduos e Refugos',
                        'Produtos ou Serviços em Curso', 'Matérias Primas, Auxiliares e Materiais']
                    grupo1Lista18.forEach(rec => {
                        listaGrupo19 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo19.innerHTML = listaGrupo19;

                    // Investimentos Financeiros
                    const grupo1Lista19 = ['', 'Investimentos em Subsidiárias', 'Investimentos em Associadas',
                        'Investimentos em Entidades Conjuntamente Controladas', 'Outros Envestimentos Financeiros', 'Investimentos Detidos Até à Maturidade',
                        'Outros Investimentos Disponíveis Para Venda']
                    grupo1Lista19.forEach(rec => {
                        listaGrupo20 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo20.innerHTML = listaGrupo20;

                    // Activos Tangíveis
                    const grupo1Lista20 = ['', 'Construções', 'Equipamento Básico', 'Mobiliário e Equipamento Administrativo Social', 'Equipamento de Transporte',
                        'Taras e Vasilhame', 'Ferramentas e Utensílios', 'Activos de Exploração e Avaliação de Recursos Minerais', 'Outros Activos Tangíveis']
                    grupo1Lista20.forEach(rec => {
                        listaGrupo21 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo21.innerHTML = listaGrupo21;

                    // Activos Intangíveis
                    const grupo1Lista21 = ['', 'Despesas de Desenvolvimento', 'Propriedade Industrial e Outros Direitos', 'GoodWill', ' Activos de Exploração e Avaliação de Recursos Minerais']
                    grupo1Lista21.forEach(rec => {
                        listaGrupo22 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo22.innerHTML = listaGrupo22;

                    // Investimentos em Cruso
                    const grupo1Lista22 = ['', 'Activos Tangíveis', 'Activos Intagíveis']
                    grupo1Lista22.forEach(rec => {
                        listaGrupo23 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo23.innerHTML = listaGrupo23;

                    // Amortizações Acumuladas
                    const grupo1Lista23 = ['', 'Activos Tangíveis', 'Activos Intagíveis', 'Activos Tangíveis de Investimentos',
                        'Activos de Exploração e Avaliação de Recursos Minerais']
                    grupo1Lista23.forEach(rec => {
                        listaGrupo24 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo24.innerHTML = listaGrupo24;

                    // Imparidade Acumulada de Investimentos de Capital
                    const grupo1Lista24 = ['', 'Investimentos Financeiros', 'Activos Tangíveis', 'Activos Intagíveis', 'Activos Não Correntes Detidos Para Venda',
                        'Activos Tangíveis de Investimento', ' Activos de Exploração e Avaliação de Recursos Minerais']
                    grupo1Lista24.forEach(rec => {
                        listaGrupo25 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo25.innerHTML = listaGrupo25;

                    // Clientes
                    const grupo1Lista25 = ['', 'Clientes c/c', 'Clientes - Títulos a Receber', 'Clientes de Cobrança Duvidosa', 'Adiamentos a Fornecedores']
                    grupo1Lista25.forEach(rec => {
                        listaGrupo26 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo26.innerHTML = listaGrupo26;

                    // Fornecedores
                    const grupo1Lista26 = ['', 'Fornecedores c/c', 'Fornecedores - Títulos a Pagar', 'Adiamentos a Fornecedores']
                    grupo1Lista26.forEach(rec => {
                        listaGrupo27 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo27.innerHTML = listaGrupo27;

                    // Empréstimos Obtidos
                    const grupo1Lista27 = ['', 'Empréstimos Bancários', 'Empréstimos Por Obrigações', 'Empréstimos Por Títulos de Participação', 'Outros Empréstimos Obtidos']
                    grupo1Lista27.forEach(rec => {
                        listaGrupo28 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo28.innerHTML = listaGrupo28;

                    // Estado
                    const grupo1Lista28 = ['', 'Imposto Sobre o Rendimento', 'Impostos Retidos na Fonte', 'Imposto Sobre o Valor Acrescentado',
                        'Restantes Impostos', 'Rectificação de Impostos, Contribuições e Outros Tributos', 'Impostos Diferidos', 'Contribuições para o INSS']
                    grupo1Lista28.forEach(rec => {
                        listaGrupo29 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo29.innerHTML = listaGrupo29;

                    // Outros Devedores
                    const grupo1Lista29 = ['', 'Pessoal', 'Subcritores de Capital', 'Obrigacionistas', 'Devedores - Sócios, Accionistas ou Proprietarios',
                        'Subsídios a Receber', 'Devedores Diversos']
                    grupo1Lista29.forEach(rec => {
                        listaGrupo30 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo30.innerHTML = listaGrupo30;

                    // Outros Credores
                    const grupo1Lista30 = ['', 'Fornecedores de Investimentos de Capital', 'Pessoal', 'Sindicatos', 'Credores Por Subscrições não Liberadas',
                        'Obrigacionistas', 'Consultores, Assessores e Intermediários', 'Credores - Sócios, Accionistas ou Proprietários', 'Credores Diversos']
                    grupo1Lista30.forEach(rec => {
                        listaGrupo31 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo31.innerHTML = listaGrupo31;

                    // Perdas Por Imparidade Acumuladas de Contas a Receber
                    const grupo1Lista31 = ['', 'Clientes', 'Outros Devedores']
                    grupo1Lista31.forEach(rec => {
                        listaGrupo32 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo32.innerHTML = listaGrupo32;

                    // Provisoes
                    const grupo1Lista32 = ['', 'Processos Judiciais em Curso', 'Acidentes no Trabalho e Doenças Profissionais', 'Impostos',
                        'Reestruturação de Negócios', 'Contratos Onerosos', 'Garantias a Clintes', 'Perdas em Contratos de Construção', 'Outras Provisões']
                    grupo1Lista32.forEach(rec => {
                        listaGrupo33 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo33.innerHTML = listaGrupo33;

                    // Acrescimos e Diferimentos
                    const grupo1Lista33 = ['', 'Créscimos de Gastos', 'Rendimentos Diferidos', 'Créscimos de Rendimentos', 'Gastos Diferidos']
                    grupo1Lista33.forEach(rec => {
                        listaGrupo34 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo34.innerHTML = listaGrupo34;

                    // Accoes ou Quotas Proprias
                    const grupo1Lista34 = ['', 'Valor Nominas', 'Descontos e Prémios']
                    grupo1Lista34.forEach(rec => {
                        listaGrupo35 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo35.innerHTML = listaGrupo35;

                    // 5.5.Reservas
                    const grupo1Lista35 = ['', 'Reservas Legais', 'Reservas Estatutárias', 'Reservas Livres']
                    grupo1Lista35.forEach(rec => {
                        listaGrupo36 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo36.innerHTML = listaGrupo36;

                    // 5.6.Excedentes de revalorizacao de activos tangiveis e intagiveis
                    const grupo1Lista36 = ['', 'Revalorizações Legais', 'Outros Excessos']
                    grupo1Lista36.forEach(rec => {
                        listaGrupo37 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo37.innerHTML = listaGrupo37;

                    // 5.8.Outras Variacoes no Capital Proprio
                    const grupo1Lista37 = ['', 'Variações no Justo Valor de Instrumentos Financeiros Disponiveis Para Venda', 'Ajustamentos por Impostos Diferidos', 'Outras Variações']
                    grupo1Lista37.forEach(rec => {
                        listaGrupo38 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo38.innerHTML = listaGrupo38;

                    // 6.1.Custo dos Inventarios
                    const grupo1Lista38 = ['', 'Custo dos Inventários Vendidos ou Consumidos', 'Variação da Produção']
                    grupo1Lista38.forEach(rec => {
                        listaGrupo39 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo39.innerHTML = listaGrupo39;

                    // 6.2.Gastos com Pessoal
                    const grupo1Lista39 = ['', 'Remunarações dos Órgãos Sociais', 'Remunarações dos Trabalhadores', 'Encargos Sobre Remunarações',
                        'Beneficios Pós-Emprego', 'Ajudas de Custo', 'Indemnizações', 'Segurosde de Acidentes no Trabalho e Doenças Profissionais',
                        'Gastos de Acção Social', 'Outros Gastos Com Pessoal']
                    grupo1Lista39.forEach(rec => {
                        listaGrupo40 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo40.innerHTML = listaGrupo40;

                    // 6.3.Fornecimentos e Servicos de Terceiros
                    const grupo1Lista40 = ['', 'Subcontratos', 'Fornecimentos e Serviços']
                    grupo1Lista40.forEach(rec => {
                        listaGrupo41 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo41.innerHTML = listaGrupo41;

                    // 6.4.Perdas por Imparidade do Periodo
                    const grupo1Lista41 = ['', 'Justamentos de Inventário Para o Valor Realizável Liquido', 'Investimentos Financeiros', 'Activos Tangíveis', 'Activos Intagíveis',
                        'Activos Não Correntes Detidos Para Venda', 'Activos Tangíveis de Investimento', 'Activos de Exploração e Avaliação de Recursos Minerais',
                        'Contas a Receber']
                    grupo1Lista41.forEach(rec => {
                        listaGrupo42 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo42.innerHTML = listaGrupo42;

                    // 6.5.Amortizacoes do Periodo
                    const grupo1Lista42 = ['', 'Activos Tangíveis', 'Activos Intagíveis', 'Activos Tangíveis de Investimento',
                        'Activos de Exploração e Avaliação de Recursos Minerais']
                    grupo1Lista42.forEach(rec => {
                        listaGrupo43 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo43.innerHTML = listaGrupo43;

                    // 6.6.Provisoes do Periodo
                    const grupo1Lista43 = ['', 'Processo Juridiciais em Curso', 'Acidentes no Trabalho e Doenças Profissionais',
                        'Impostos', 'Reestruturação de Negócios', 'Contratos Onerosos', 'Garantias a Clientes', 'Perdas em Contratos de Construção',
                        'Outras Provisões']
                    grupo1Lista43.forEach(rec => {
                        listaGrupo44 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo44.innerHTML = listaGrupo44;

                    // 6.7.Perdas por Reducao do Justo Valor
                    const grupo1Lista44 = ['', 'Instrumentos Financeiros', 'Activos Tangíveis de Investimento', 'Activos Biológicos']
                    grupo1Lista44.forEach(rec => {
                        listaGrupo45 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo45.innerHTML = listaGrupo45;

                    // 6.8.Outros Gastos e Perdas Operacionais
                    const grupo1Lista45 = ['', 'Despesas de Investigação e Pesquisas', 'Impostos e Taxas', 'Perdas em Investimentos de Capital',
                        'Perdas em Inventário e Activos Biológicos', 'Outros Gastos Operacionais']
                    grupo1Lista45.forEach(rec => {
                        listaGrupo46 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo46.innerHTML = listaGrupo46;

                    // 6.9.Gastos e Perdas Financeiros
                    const grupo1Lista46 = ['', 'Juros Suportados', 'Diferenças de Câmbio Desfavoráveis', 'Descontos de Pronto Pagamento Concedidos',
                        'Outros Gastos e Perdas Financeiras']
                    grupo1Lista46.forEach(rec => {
                        listaGrupo47 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo47.innerHTML = listaGrupo47;

                    // 7.1.Vendas
                    const grupo1Lista47 = ['', 'Mercadorias', 'Produtos Acabados e Intermédios', 'Subprodutos, Desperdicios, Resíduos e Refugos',
                        'Activos Biológicos', 'IVA das Vendas com Imposto Incluido', 'Devoluções de Vendas', 'Descontos e Abatimentos']
                    grupo1Lista47.forEach(rec => {
                        listaGrupo48 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo48.innerHTML = listaGrupo48;

                    // 7.2.Prestacao de Servicos
                    const grupo1Lista48 = ['', 'IVA das Vendas com Imposto Incluido', 'Descontos e Abatimentos']
                    grupo1Lista48.forEach(rec => {
                        listaGrupo49 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo49.innerHTML = listaGrupo49;

                    // 7.3.Investimentos realizados pela propria empresa
                    const grupo1Lista49 = ['', 'Investimentos Financeiros', 'Activos Tangiveis', 'Activos Intangiveis', 'Investimentos em Curso']
                    grupo1Lista49.forEach(rec => {
                        listaGrupo50 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo50.innerHTML = listaGrupo50;

                    // 7.4.Reversoes do Periodo
                    const grupo1Lista50 = ['', 'De Perdas Por Imparidade', 'De Amortizações', 'De Provisões']
                    grupo1Lista50.forEach(rec => {
                        listaGrupo51 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo51.innerHTML = listaGrupo51;

                    // 7.5.Rendimentos Suplementares
                    const grupo1Lista51 = ['', 'Serviços Sociais', 'Aluguer de Equipamento', 'Venda de Energia', 'Estudos, Projectos, Pesquisas e Investigações',
                        'Assistência Técnica', 'Royalities', 'Cargos Sociais Exercidos Noutras Empresas', 'Outros Rendimentos Suplementares Inerentes ao Valor Acrescentado']
                    grupo1Lista51.forEach(rec => {
                        listaGrupo52 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo52.innerHTML = listaGrupo52;

                    // 7.6.Outros Rendimentos e Ganhos Operacionais
                    const grupo1Lista52 = ['', 'Subsídios Para Investimentos', 'Subsídios à Exploração', 'Ganhos em Investimentos de Capital', 'Ganhos em Investarias e Activos Biológicos',
                        'Ganhos em Inventarios e Activos Biologicos', 'Outros Rendimentos Alheios ao Valor Acrescentado']
                    grupo1Lista52.forEach(rec => {
                        listaGrupo53 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo53.innerHTML = listaGrupo53;

                    // 7.8.Rendimentos e Ganhos Financeiros
                    const grupo1Lista53 = ['', 'Juros Obtidos', 'Rendimentos de Activos Tangíveis de Investimento', 'Rendimento de Instrumentos Financeiros', 'Diferenças de Câmbio Favoráveis',
                        'Descontos de Pronto Pagamento Obtidos', 'Outros Rendimentos e Ganhos Finaceiros']
                    grupo1Lista53.forEach(rec => {
                        listaGrupo54 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo54.innerHTML = listaGrupo54;

                    // 7.9. Ganhos Por Aumento do Justo Valor
                    const grupo1Lista54 = ['', 'Instrumentos Financeiros', 'Activos Tangíveis de Investimentos', 'Activos Biológicos']
                    grupo1Lista54.forEach(rec => {
                        listaGrupo55 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo55.innerHTML = listaGrupo55;

                    // 8.5.Imposto Sobre o Rendimento
                    const grupo1Lista55 = ['', 'Imposto Corrente', 'Imposto Diferido']
                    grupo1Lista55.forEach(rec => {
                        listaGrupo56 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo56.innerHTML = listaGrupo56;

                    // 2.1.2.Materias Primas, Auxiliares e Materiais
                    const grupo1Lista56 = ['', 'Matérias Primas', 'Matérias Auxiliares', 'Materiais']
                    grupo1Lista56.forEach(rec => {
                        listaGrupo57 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo57.innerHTML = listaGrupo57;

                    // 2.1.2.3.Materiais
                    const grupo1Lista57 = ['', 'Combustíveis e Lubrificantes', 'Embalagens Comerciais', 'Peças e Sobressalentes',
                        'Materiais Diversos']
                    grupo1Lista57.forEach(rec => {
                        listaGrupo58 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo58.innerHTML = listaGrupo58;

                    // 2.6.3.Materiais
                    const grupo1Lista58 = ['', 'Combustíveis e Lubrificantes', 'Embalagens Comerciais', 'Peças e Sobressalentes',
                        'Materiais Diversos']
                    grupo1Lista58.forEach(rec => {
                        listaGrupo59 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo59.innerHTML = listaGrupo59;

                    // 2.7.1.De Producao
                    const grupo1Lista59 = ['', 'Animais', 'Plantas']
                    grupo1Lista59.forEach(rec => {
                        listaGrupo60 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo60.innerHTML = listaGrupo60;

                    // 2.7.2.Consumiveis
                    const grupo1Lista60 = ['', 'Animais', 'Plantas']
                    grupo1Lista60.forEach(rec => {
                        listaGrupo60 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo61.innerHTML = listaGrupo61;

                    // 3.2.1.Construções
                    const grupo1Lista61 = ['', 'Edifícios Industriais', 'Edifícios Administrativos e Comerciais',
                        'Edifícios Para Habitação e Outros Fins Sociais', 'Vias de Comunicação e Construções Afins']
                    grupo1Lista61.forEach(rec => {
                        listaGrupo62 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo62.innerHTML = listaGrupo62;

                    // 4.3.1. Empréstimos Bancários
                    const grupo1Lista62 = ['', 'De Curto Prazo', 'De Médio e Longo Prazo']
                    grupo1Lista62.forEach(rec => {
                        listaGrupo63 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo63.innerHTML = listaGrupo63;

                    // 4.3.2. Empréstimos Obtidos
                    const grupo1Lista63 = ['', 'Convertíveis', 'Não Convertíveis']
                    grupo1Lista63.forEach(rec => {
                        listaGrupo64 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo64.innerHTML = listaGrupo64;

                    // 4.4.1. Imposto Sobre o Rendimento
                    const grupo1Lista64 = ['', 'Estimativa de Imposto', 'Pagamentos Por Conta', 'Pagamento Especial Por Conta']
                    grupo1Lista64.forEach(rec => {
                        listaGrupo65 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo65.innerHTML = listaGrupo65;

                    // 4.4.2. Impostos Retidos Na Fonte
                    const grupo1Lista65 = ['', 'Rendimentos de Trabalho Dependente', 'Rendimentos Profissionais', 'Rendimentos do Capitais',
                        'Rendimentos Prediais', 'Outros Rendimentos']
                    grupo1Lista65.forEach(rec => {
                        listaGrupo66 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo66.innerHTML = listaGrupo66;

                    // 4.4.3. Imposto Sobre o Valor Acrescentado
                    const grupo1Lista66 = ['', 'IVA Suportado', 'IVA Redutível', 'IVA Liquido', 'IVA Regularizações', 'IVA Apuramento',
                        'IVA Liquidações Oficiosas', 'IVA a Pagar', 'IVA a Recuparar', 'IVA Reembolsos Pedidos']
                    grupo1Lista66.forEach(rec => {
                        listaGrupo67 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo67.innerHTML = listaGrupo67;

                    // 4.4.3.1 IVA Suportado
                    const grupo1Lista67 = ['', 'Inventários', 'Activos Tangíveis e Intangíveis', 'Outros Bens e Serviços']
                    grupo1Lista67.forEach(rec => {
                        listaGrupo68 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo68.innerHTML = listaGrupo68;

                    // 4.4.3.2 IVA Redutível
                    const grupo1Lista68 = ['', 'Inventários', 'Activos Tangíveis e Intangíveis', 'Outros Bens e Serviços']
                    grupo1Lista68.forEach(rec => {
                        listaGrupo69 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo69.innerHTML = listaGrupo69;

                    // 4.4.3.3 IVA Liquido
                    const grupo1Lista69 = ['', 'Operações Gerais', 'Autoconsumos e Operações Gratuitas', 'Operações Especiais']
                    grupo1Lista69.forEach(rec => {
                        listaGrupo70 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo70.innerHTML = listaGrupo70;

                    // 4.4.3.4 IVA Regularizações
                    const grupo1Lista70 = ['', 'Mensais a Favor do Sujeito Passivo', 'Mensais a Favor do Estado', 'Anuais Por Cálculo do Pro Rota Definitivo']
                    grupo1Lista70.forEach(rec => {
                        listaGrupo71 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo71.innerHTML = listaGrupo71;

                    // 4.4.4. Restantes Impostos
                    const grupo1Lista71 = ['', 'Imposto de Selo', 'Impostos Autárquicos']
                    grupo1Lista71.forEach(rec => {
                        listaGrupo72 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo72.innerHTML = listaGrupo72;

                    // 4.4.6. Impostos Diferidos
                    const grupo1Lista72 = ['', 'Activos Por Impostos Diferidos', 'Passivos Por Impostos Diferidos']
                    grupo1Lista72.forEach(rec => {
                        listaGrupo73 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo73.innerHTML = listaGrupo73;

                    // 4.5.1. Pessoal
                    const grupo1Lista73 = ['', 'Adintamentos aos Órgãos Sociais', 'Adintamentos aos Trabalhadores', 'Benefícios Pós-Emprego',
                        'Outras Operações com Órgãos Sociais', 'Outras Operações com Trabalhadores']
                    grupo1Lista73.forEach(rec => {
                        listaGrupo74 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo74.innerHTML = listaGrupo74;

                    // 4.5.2. Subscritores de Capital
                    const grupo1Lista74 = ['', 'Estado e Outros Organismos Públicos', 'Entidades Privadas', 'Outras Entidades']
                    grupo1Lista74.forEach(rec => {
                        listaGrupo75 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo75.innerHTML = listaGrupo75;

                    // 4.5.4. Devedores - Sócios, Accionistas ou Proprietários
                    const grupo1Lista75 = ['', 'Empréstimos Concedidos', 'Adiantamento por Conta de Lucros', 'Resultados Atribuídos',
                        'Lucros Disponíveis', 'Outras Operações']
                    grupo1Lista75.forEach(rec => {
                        listaGrupo76 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo76.innerHTML = listaGrupo76;

                    // 4.5.5. Subsídios a Receber
                    const grupo1Lista76 = ['', 'Estado e Outros Organismos Públicos', 'Entidades Privadas']
                    grupo1Lista76.forEach(rec => {
                        listaGrupo77 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo77.innerHTML = listaGrupo77;

                    // 4.6.1. Fornecedores de Investimentos de Capital
                    const grupo1Lista77 = ['', 'Fornecedores de Investimentos de Capital c/c', 'Fornecedores de Investimentos de Capital - Títulos a Pagar',
                        'Fornecedores de Investimentos de Capital - Adiantamentos', 'Fornecedores de Investimentos de Capital - Locação Financeira', 'Outras Operações']
                    grupo1Lista77.forEach(rec => {
                        listaGrupo78 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo78.innerHTML = listaGrupo78;

                    // 4.6.2. Pessoal
                    const grupo1Lista78 = ['', 'Remunarações a Pagar aos Órgãos Sociais', 'Remunarações a Pagar aos Trabalhadores',
                        'Benefícios Pós-Emprego', 'Outras Operações Com os Órgãos Sociais', 'Outras Operações Com os Trabalhadores']
                    grupo1Lista78.forEach(rec => {
                        listaGrupo79 += `
                                 <option>${rec}</option>
                             `;
                    })
                    grupo79.innerHTML = listaGrupo79;

                    // 4.6.7. Credores - Sócios, Accionistas ou Proprietários
                    const grupo1Lista79 = ['', 'Empréstimos Obtidos', 'Resultados Atribuídos', 'Lucros Disponíveis']
                    grupo1Lista79.forEach(rec => {
                        listaGrupo80 += `
                                 <option>${rec}</option>
                             `;
                    })
                    grupo80.innerHTML = listaGrupo80;

                    // 4.9.1. Acréscimos de Gastos
                    const grupo1Lista80 = ['', 'Juros a Pagar', 'Remunerações a Pagar', 'Outros Acréscimos de Gastos']
                    grupo1Lista80.forEach(rec => {
                        listaGrupo81 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo81.innerHTML = listaGrupo81;

                    // 4.9.2. Rendimentos Diferidos
                    const grupo1Lista81 = ['', 'Prémios de Emissão de Obrigações', 'Prémios de Emissão de Títulos de Participação', 'Réditos de Contratos de Construção',
                        'Subsídios para Investimentos', 'Outros Rendimentos Diferidos']
                    grupo1Lista81.forEach(rec => {
                        listaGrupo82 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo82.innerHTML = listaGrupo82;

                    // 4.9.3. Acréscimos de Rendimentos
                    const grupo1Lista82 = ['', 'Juros a Receber', 'Réditos de Contratos de Construção', 'Outros Acréscimos de Rendimentos']
                    grupo1Lista82.forEach(rec => {
                        listaGrupo83 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo83.innerHTML = listaGrupo83;

                    // 4.9.4. Gastos Diferidos
                    const grupo1Lista83 = ['', 'Desconto de Emissão de Obrigações', 'Desconto de Emissão de Títulos de Participação', 'Outros Gastos Diferidos']
                    grupo1Lista83.forEach(rec => {
                        listaGrupo84 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo84.innerHTML = listaGrupo84;

                    // 5.6.1. Revalorizações Legais
                    const grupo1Lista84 = ['', 'Antes de Impostos Diferidos', 'Impostos Diferidos']
                    grupo1Lista84.forEach(rec => {
                        listaGrupo85 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo85.innerHTML = listaGrupo85;

                    // 5.6.2. Outros Excessos
                    const grupo1Lista85 = ['', 'Antes de Impostos Diferidos', 'Impostos Diferidos']
                    grupo1Lista85.forEach(rec => {
                        listaGrupo86 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo86.innerHTML = listaGrupo86;

                    // 6.1.1. Custo dos Inventários Vendidos ou Consumidos
                    const grupo1Lista86 = ['', 'De Mercadorias', 'De Matérias Primas, Auxiliares e Materias', 'Activos Biológicos']
                    grupo1Lista86.forEach(rec => {
                        listaGrupo87 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo87.innerHTML = listaGrupo87;

                    // 6.1.1.6. De Matérias Primas, Auxiliares e Materiais
                    const grupo1Lista87 = ['', 'Matérias Primas', 'Matérias Auxiliares', 'Materiais']
                    grupo1Lista87.forEach(rec => {
                        listaGrupo88 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo88.innerHTML = listaGrupo88;

                    // 6.1.2. Variação da Produção
                    const grupo1Lista88 = ['', 'Produtos Acabados e Intérmedios', 'Subprodutos, Desperdícios, Resíduos e Refugos', 'Produtos e Serviços em Curso']
                    grupo1Lista88.forEach(rec => {
                        listaGrupo89 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo89.innerHTML = listaGrupo89;

                    // 6.2.5. Ajudas de Custo
                    const grupo1Lista89 = ['', 'Ajuda de Custos Tributáveis', 'Ajuda de Custos Não Tributáveis']
                    grupo1Lista89.forEach(rec => {
                        listaGrupo90 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo90.innerHTML = listaGrupo90;

                    // 6.2.6. Indemnizações
                    const grupo1Lista90 = ['', 'Indemnizações - Risco Segurável', 'Indemnizações - Outras']
                    grupo1Lista90.forEach(rec => {
                        listaGrupo91 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo91.innerHTML = listaGrupo91;

                    // 6.3.2. Fornecimentos e Serviços
                    const grupo1Lista91 = ['', 'Água', 'Electricidade', 'Combustiveis', 'Ferramentas e Utensílios de Desgaste Rápido',
                        'Material de Manutenção e Reparação', 'Material de Escritório', 'Livros e Documentação Técnica', 'Artigos Para Oferta',
                        'Manutenção e Reparação', 'Trasnporte de Carga', 'Transporte de Pessoal', 'Comunicações', 'Honorários', 'Comissões a Intermediários',
                        'Publicidade e Propaganda', 'Deslocações e Estadias', 'Despesas de Reparação', 'Contencioso e Notariado', 'Rendas e Alugueres', 'Seguros',
                        'Royalties', 'Limpeza, Higiene e Conforto', 'Vigilância e Segurança', 'Trabalhos Especializados', 'Outros Fornecimentos e Serviços']
                    grupo1Lista91.forEach(rec => {
                        listaGrupo92 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo92.innerHTML = listaGrupo92;

                    // 6.3.2.1.3. Combustíveis
                    const grupo1Lista92 = ['', 'Gasóleo', 'Restantes Combustíveis', 'Lubrificantes']
                    grupo1Lista92.forEach(rec => {
                        listaGrupo93 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo93.innerHTML = listaGrupo93;

                    // 6.3.2.1.3.1. Gasóleo
                    const grupo1Lista93 = ['', 'Gasóleo - Viaturas Ligeiras de Passageiros', 'Gasóleo - Outros']
                    grupo1Lista93.forEach(rec => {
                        listaGrupo94 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo94.innerHTML = listaGrupo94;

                    // 6.3.2.1.3.2. Restantes Combustíveis
                    const grupo1Lista94 = ['', 'Restantes Combustíveis - Viaturas Ligeiras de Passageiros', 'Restantes Combustíveis - Outros']
                    grupo1Lista94.forEach(rec => {
                        listaGrupo95 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo95.innerHTML = listaGrupo95;

                    // 6.3.2.1.3.3. Lubrificantes
                    const grupo1Lista95 = ['', 'Lubrificantes - Viaturas Ligeiras de Passageiros', 'Lubrificantes - Outros']
                    grupo1Lista95.forEach(rec => {
                        listaGrupo96 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo96.innerHTML = listaGrupo96;

                    // 6.3.2.1.5. Material de Manutanção e Reparação
                    const grupo1Lista96 = ['', 'Material de Manutanção e Reparação - Viaturas Ligeiras de Passageiros', 'Material de Manutanção e Reparação - Outros']
                    grupo1Lista96.forEach(rec => {
                        listaGrupo97 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo97.innerHTML = listaGrupo97;

                    // 6.3.2.2.7. Publicidade e Propaganda
                    const grupo1Lista97 = ['', 'Publicidade e Propaganda - Campanhas Publicitárias', 'Publicidade e Propaganda - Outros']
                    grupo1Lista97.forEach(rec => {
                        listaGrupo98 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo98.innerHTML = listaGrupo98;

                    // 6.3.2.2.8. Deslocações e Estadias
                    const grupo1Lista98 = ['', 'Deslocações e Estadias - Em Serviço', 'Deslocações e Estadias - Outras Deslocações']
                    grupo1Lista98.forEach(rec => {
                        listaGrupo99 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo99.innerHTML = listaGrupo99;

                    // 6.3.2.2.8. Seguros
                    const grupo1Lista99 = ['', 'Seguro de Vida, Acidentes Pessoais e Doenças']
                    grupo1Lista99.forEach(rec => {
                        listaGrupo100 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo100.innerHTML = listaGrupo100;

                    // 6.4.8. Contas a Receber
                    const grupo1Lista100 = ['', 'Contas a Receber - Ajustamentos Dentros dos Limites Fiscais', 'Contas a Receber - Ajustamentos Para Além dos Limites Fiscais']
                    grupo1Lista100.forEach(rec => {
                        listaGrupo101 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo1011.innerHTML = listaGrupo101;

                    // 6.8.2. Impostos e Taxas
                    const grupo1Lista101 = ['', 'Direitos Aduaneiros', 'Imposto Sobre o Valor Acrescentado', 'Imposto de Selo', 'Impostos Sobre Veículos', 'Impostos Autárquicos']
                    grupo1Lista101.forEach(rec => {
                        listaGrupo102 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo102.innerHTML = listaGrupo102;

                    // 6.8.3. Perdas em Investimentos de Capital
                    const grupo1Lista102 = ['', 'Alienação', 'Abates', 'Sinistros']
                    grupo1Lista102.forEach(rec => {
                        listaGrupo103 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo103.innerHTML = listaGrupo103;

                    // 6.8.4. Perdas em Investimentos e Actos Biológicos
                    const grupo1Lista103 = ['', 'Sinistros', 'Quebras', 'Outras']
                    grupo1Lista103.forEach(rec => {
                        listaGrupo104 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo104.innerHTML = listaGrupo104;

                    // 6.8.9. Outros Gastos Operacionais
                    const grupo1Lista104 = ['', 'Quantizações', 'Despesas Confidenciais', 'Ofertas e Amostras de Inventários',
                        'Programas de Responsabilidade Social', 'Donativos', 'Donativos ao Estado', 'Outros Donativos no Âmbito do Mecenato',
                        'Multas e Penalidades', 'Outros']
                    grupo1Lista104.forEach(rec => {
                        listaGrupo105 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo105.innerHTML = listaGrupo105;

                    // 6.9.1. Juros Suportados
                    const grupo1Lista105 = ['', 'Empréstimos Bancários', 'Empréstimos Obrigacionistas e Títulos de Participação', 'Empréstimos de Sócios, Accionistas ou Proprietários',
                        'Outros Empréstimos', 'Descontos de Títulos', 'Juros de Mora e Compensatórios', 'Outros Juros']
                    grupo1Lista105.forEach(rec => {
                        listaGrupo106 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo106.innerHTML = listaGrupo106;

                    // 6.9.1.6 Juros de Mora e Compensatórios
                    const grupo1Lista106 = ['', 'Juros de Mora', 'Juros Compensatórios']
                    grupo1Lista106.forEach(rec => {
                        listaGrupo107 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo107.innerHTML = listaGrupo107;

                    // 6.9.4. Diferenças de Câmbio Desfavoráveis
                    const grupo1Lista107 = ['', 'Realizadas', 'Não Realizadas']
                    grupo1Lista107.forEach(rec => {
                        listaGrupo108 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo108.innerHTML = listaGrupo108;

                    // 6.9.8. Outros Gastos e Perdas Financeiros
                    const grupo1Lista108 = ['', 'Serviços Bancários', 'Diversos Não Especificados']
                    grupo1Lista108.forEach(rec => {
                        listaGrupo109 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo109.innerHTML = listaGrupo109;

                    // 7.4.1. De Perdas por Imparidade
                    const grupo1Lista109 = ['', 'Ajustamento de Inventários Para o Valor Realizável Líquido', 'Investimentos Finaceiros', 'Activos Tangíveis',
                        'Activos Intangíveis', 'Activos Não Correntes Detidos Para Venda', 'Activos Tangíveis de Investimentos', 'Activos de Exploração e Avaliação de Recursos Minerais',
                        'Contas a Receber']
                    grupo1Lista109.forEach(rec => {
                        listaGrupo110 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo110.innerHTML = listaGrupo110;

                    // 7.4.2. De Amortizações
                    const grupo1Lista110 = ['', 'Activos Tangíveis', 'Activos Intangíveis', 'Activos Tangíveis de Investimento',
                        'Activos de Exploração e Avaliação de Recursos Minerais']
                    grupo1Lista110.forEach(rec => {
                        listaGrupo111 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo111.innerHTML = listaGrupo111;

                    // 7.4.3. De Provisões
                    const grupo1Lista111 = ['', 'Processos Judiciais em Curso', 'Acidentes no Trabalho e Doenças Profissionais', 'Impostos',
                        'Reestruturação de Negócios', 'Contratos Onorosos', 'Garantias a Clientes', 'Perdas em Contratos de Construção', 'Outras Provisões']
                    grupo1Lista111.forEach(rec => {
                        listaGrupo112 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo112.innerHTML = listaGrupo112;

                    // 7.6.1. Subsídios Para Investimentos
                    const grupo1Lista112 = ['', 'Do Estado e Outros Organismos Públicos', 'De Outras Entidades']
                    grupo1Lista112.forEach(rec => {
                        listaGrupo113 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo113.innerHTML = listaGrupo113;

                    // 7.6.2. Subsídios à Exploração
                    const grupo1Lista113 = ['', 'Do Estado e Outros Organismos Públicos', 'De Outras Entidades']
                    grupo1Lista113.forEach(rec => {
                        listaGrupo114 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo114.innerHTML = listaGrupo114;

                    // 7.6.3. Ganhos em Investimentos de Capital
                    const grupo1Lista114 = ['', 'Alienação', 'Sinistros']
                    grupo1Lista114.forEach(rec => {
                        listaGrupo115 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo115.innerHTML = listaGrupo115;

                    // 7.6.4. Ganhos em Inventários e Activos Biológicos
                    const grupo1Lista115 = ['', 'Sinistros', 'Sobras', 'Outros']
                    grupo1Lista115.forEach(rec => {
                        listaGrupo116 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo116.innerHTML = listaGrupo116;

                    // 7.6.9. Outros Rendimentos Alheios ao Valor Acrescentado
                    const grupo1Lista116 = ['', 'Restituição de Impostos', 'Beneficios de Penalidades Contratuais', 'Excesso de Estimativa para Impostos', 'Outros']
                    grupo1Lista116.forEach(rec => {
                        listaGrupo117 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo117.innerHTML = listaGrupo117;

                    // 7.8.1 Juros Obtidos
                    const grupo1Lista117 = ['', 'Depósito Bancários', 'Emprestimos', 'Obrigações e Títulos de Participação', 'Outras Aplicações de Tesouraria', 'Outros Juros']
                    grupo1Lista117.forEach(rec => {
                        listaGrupo118 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo118.innerHTML = listaGrupo118;

                    // 7.8.4 Diferenças de Câmbio Favoráveis
                    const grupo1Lista118 = ['', 'Realizadas', 'Não Realizadas']
                    grupo1Lista118.forEach(rec => {
                        listaGrupo119 += `
                            <option>${rec}</option>
                        `;
                    })
                    grupo119.innerHTML = listaGrupo119;

                    const gruposResultados = document.getElementById('gruposResultados');
                    const adicionarAAResultados = document.getElementById('adicionarAAResultados');
                    const novaSeleccaoFinanceiros = document.getElementById('novaSeleccaoFinanceiros');
                    const adicionarAAFinanceiros = document.getElementById('adicionarAAFinanceiros');
                    const novaSeleccaoActivos = document.getElementById('novaSeleccaoActivos');
                    const adicionarAAActivos = document.getElementById('adicionarAAActivos');
                    const novaSeleccaoInvestimentos = document.getElementById('novaSeleccaoInvestimentos');

                    const adicionarAAInvestimentos = document.getElementById('adicionarAAInvestimentos');
                    const adicionarAASubConta = document.getElementById('adicionarAASubConta');
                    const historicoConta = document.getElementById('historicoConta');
                    const adicionarAAContas = document.getElementById('adicionarAAContas');
                    const valorConta = document.getElementById('valorConta');
                    const adicionarAACapital = document.getElementById('adicionarAACapital');
                    const debitoOuCredito = document.getElementById('debitoOuCredito');
                    const eddSubConta = document.getElementById('eddSubConta');
                    const adicionarAAGastos = document.getElementById('adicionarAAGastos');
                    const adicionarAARendimentos = document.getElementById('adicionarAARendimentos');

                    const nomeSubConta1 = document.getElementById('nomeSubConta1');
                    const historicoConta1 = document.getElementById('historicoConta1');
                    const valorConta1 = document.getElementById('valorConta1');
                    const debitoOuCredito1 = document.getElementById('debitoOuCredito1');
                    const numeroConta = document.getElementById('numeroConta');
                    let d = Date.now();;
                    let ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(d);
                    let mo = new Intl.DateTimeFormat('en', { month: 'short' }).format(d);
                    let da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(d);
                    let diaHoje = `${da}/${mo}/${ye}`;
                    const url3 = `https://stocksmanager1.herokuapp.com/getAllDataPequenas/${empresa2}`;
                    const token = localStorage.getItem('token');
                    let h = { 'authorization': `Bearer ${token}`, 'Content-Type': 'application/json' };


                    addVaga.addEventListener('click', (e) => {
                        e.preventDefault();
                        $('#novaSeleccao').modal('show');
                    })
                    eddSubConta.addEventListener('click', (e) => {
                        e.preventDefault();
                        $('#novaSeleccaoSubConta').modal('show');
                    })
                    adicionarAASubConta.addEventListener('click', (e) => {
                        e.preventDefault();
                        console.log(nomeSubConta1.value)
                        console.log(historicoConta1.value)
                        console.log(valorConta1.value)
                        console.log(debitoOuCredito1.value)
                        console.log(numeroConta.value)
                        console.log(diaHoje)
                        const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                        let pora = new Request(urlLogIn, {
                            method: 'PATCH',
                            headers: h,
                            body: JSON.stringify({
                                "operacao": `${debitoOuCredito1.value}`,
                                "numeroConta": `${numeroConta.value}`,
                                "tipoConta": `${nomeSubConta1.value}`,
                                "valor": `${valorConta1.value}`,
                                "data": `${diaHoje}`,
                                "historico": `${historicoConta1.value}`
                            })
                        });
                        fetch(pora)
                            .then(ress => ress.json())
                            .then(data5 => {
                                console.log(data5);
                                $('#novaSeleccaoSubConta').modal('hide');
                                var m = new Date();
                                var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                const usuarioLogs = localStorage.getItem('usuario');
                                const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                let logs = new Request(urlLogs, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "nomeFuncionario": `${usuarioLogs}`,
                                        "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                        "data": `${dateString}`
                                    })
                                });
                                fetch(logs)
                                    .then(ress => ress.json())
                                    .then(data5Logs => {
                                        console.log(data5Logs)
                                    });
                                planoDeContas();
                            })

                    })
                    adicionarAAResultados.addEventListener('click', (e) => {
                        if (grupo9.value == 'Resultados Operacionais') {
                            console.log(grupo1.value)
                            console.log(grupo9.value)
                            console.log(debitoOuCredito.value)
                            console.log(valorConta.value)
                            console.log(historicoConta.value)
                            console.log(diaHoje)
                            console.log('81')
                            const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                            let pora = new Request(urlLogIn, {
                                method: 'PATCH',
                                headers: h,
                                body: JSON.stringify({
                                    "operacao": `${debitoOuCredito.value}`,
                                    "numeroConta": "81",
                                    "tipoConta": "Resultados Operacionais",
                                    "valor": `${valorConta.value}`,
                                    "data": `${diaHoje}`,
                                    "historico": `${historicoConta.value}`
                                })
                            });
                            fetch(pora)
                                .then(ress => ress.json())
                                .then(data5 => {
                                    console.log(data5);
                                    $('#gruposResultados').modal('hide');
                                    var m = new Date();
                                    var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                    const usuarioLogs = localStorage.getItem('usuario');
                                    const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                    let logs = new Request(urlLogs, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "nomeFuncionario": `${usuarioLogs}`,
                                            "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                            "data": `${dateString}`
                                        })
                                    });
                                    fetch(logs)
                                        .then(ress => ress.json())
                                        .then(data5Logs => {
                                            console.log(data5Logs)
                                        });
                                    planoDeContas();
                                })
                        }
                        if (grupo9.value == 'Resultados Financeiros') {
                            console.log(grupo1.value)
                            console.log(grupo9.value)
                            console.log(debitoOuCredito.value)
                            console.log(valorConta.value)
                            console.log(historicoConta.value)
                            console.log(diaHoje)
                            console.log('82')
                            const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                            let pora = new Request(urlLogIn, {
                                method: 'PATCH',
                                headers: h,
                                body: JSON.stringify({
                                    "operacao": `${debitoOuCredito.value}`,
                                    "numeroConta": "82",
                                    "tipoConta": "Resultados Financeiros",
                                    "valor": `${valorConta.value}`,
                                    "data": `${diaHoje}`,
                                    "historico": `${historicoConta.value}`
                                })
                            });
                            fetch(pora)
                                .then(ress => ress.json())
                                .then(data5 => {
                                    console.log(data5);
                                    $('#gruposResultados').modal('hide');
                                    var m = new Date();
                                    var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                    const usuarioLogs = localStorage.getItem('usuario');
                                    const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                    let logs = new Request(urlLogs, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "nomeFuncionario": `${usuarioLogs}`,
                                            "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                            "data": `${dateString}`
                                        })
                                    });
                                    fetch(logs)
                                        .then(ress => ress.json())
                                        .then(data5Logs => {
                                            console.log(data5Logs)
                                        });
                                    planoDeContas();
                                })
                        }
                        if (grupo9.value == 'Resultados Correntes') {
                            console.log(grupo1.value)
                            console.log(grupo9.value)
                            console.log(debitoOuCredito.value)
                            console.log(valorConta.value)
                            console.log(historicoConta.value)
                            console.log(diaHoje)
                            console.log('8.3')
                            const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                            let pora = new Request(urlLogIn, {
                                method: 'PATCH',
                                headers: h,
                                body: JSON.stringify({
                                    "operacao": `${debitoOuCredito.value}`,
                                    "numeroConta": "83",
                                    "tipoConta": "Resultados Correntes",
                                    "valor": `${valorConta.value}`,
                                    "data": `${diaHoje}`,
                                    "historico": `${historicoConta.value}`
                                })
                            });
                            fetch(pora)
                                .then(ress => ress.json())
                                .then(data5 => {
                                    console.log(data5);
                                    $('#gruposResultados').modal('hide');
                                    var m = new Date();
                                    var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                    const usuarioLogs = localStorage.getItem('usuario');
                                    const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                    let logs = new Request(urlLogs, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "nomeFuncionario": `${usuarioLogs}`,
                                            "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                            "data": `${dateString}`
                                        })
                                    });
                                    fetch(logs)
                                        .then(ress => ress.json())
                                        .then(data5Logs => {
                                            console.log(data5Logs)
                                        });
                                    planoDeContas();
                                })
                        }
                        if (grupo9.value == 'Imposto Sobre o Rendimento') {
                            if (grupo56.value == 'Imposto Corrente') {
                                console.log(grupo1.value)
                                console.log(grupo9.value)
                                console.log(grupo56.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('8.5.1')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "851",
                                        "tipoConta": "Imposto Corrente",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#gruposResultados').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo56.value == 'Imposto Diferido') {
                                console.log(grupo1.value)
                                console.log(grupo9.value)
                                console.log(grupo56.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('8.5.2')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "852",
                                        "tipoConta": "Imposto Diferido",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#gruposResultados').modal('hide');
                                        planoDeContas();
                                    })
                            }
                        }
                        if (grupo9.value == 'Resultado Liquido do Período') {
                            console.log(grupo1.value)
                            console.log(grupo9.value)
                            console.log(debitoOuCredito.value)
                            console.log(valorConta.value)
                            console.log(historicoConta.value)
                            console.log(diaHoje)
                            console.log('8.8')
                            const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                            let pora = new Request(urlLogIn, {
                                method: 'PATCH',
                                headers: h,
                                body: JSON.stringify({
                                    "operacao": `${debitoOuCredito.value}`,
                                    "numeroConta": "88",
                                    "tipoConta": "Resultado Liquido do Período",
                                    "valor": `${valorConta.value}`,
                                    "data": `${diaHoje}`,
                                    "historico": `${historicoConta.value}`
                                })
                            });
                            fetch(pora)
                                .then(ress => ress.json())
                                .then(data5 => {
                                    console.log(data5);
                                    $('#gruposResultados').modal('hide');
                                    var m = new Date();
                                    var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                    const usuarioLogs = localStorage.getItem('usuario');
                                    const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                    let logs = new Request(urlLogs, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "nomeFuncionario": `${usuarioLogs}`,
                                            "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                            "data": `${dateString}`
                                        })
                                    });
                                    fetch(logs)
                                        .then(ress => ress.json())
                                        .then(data5Logs => {
                                            console.log(data5Logs)
                                        });
                                    planoDeContas();
                                })
                        }
                        if (grupo9.value == 'Dividendos Antecipados') {
                            console.log(grupo1.value)
                            console.log(grupo9.value)
                            console.log(debitoOuCredito.value)
                            console.log(valorConta.value)
                            console.log(historicoConta.value)
                            console.log(diaHoje)
                            console.log('8.9')
                            const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                            let pora = new Request(urlLogIn, {
                                method: 'PATCH',
                                headers: h,
                                body: JSON.stringify({
                                    "operacao": `${debitoOuCredito.value}`,
                                    "numeroConta": "89",
                                    "tipoConta": "Dividendos Antecipados",
                                    "valor": `${valorConta.value}`,
                                    "data": `${diaHoje}`,
                                    "historico": `${historicoConta.value}`
                                })
                            });
                            fetch(pora)
                                .then(ress => ress.json())
                                .then(data5 => {
                                    console.log(data5);
                                    $('#gruposResultados').modal('hide');
                                    var m = new Date();
                                    var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                    const usuarioLogs = localStorage.getItem('usuario');
                                    const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                    let logs = new Request(urlLogs, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "nomeFuncionario": `${usuarioLogs}`,
                                            "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                            "data": `${dateString}`
                                        })
                                    });
                                    fetch(logs)
                                        .then(ress => ress.json())
                                        .then(data5Logs => {
                                            console.log(data5Logs)
                                        });
                                    planoDeContas();
                                })
                        }
                    });
                    adicionarAARendimentos.addEventListener('click', (e) => {
                        if (grupo8.value == 'Vendas') {
                            if (grupo48.value == 'Mercadorias') {
                                console.log(grupo1.value)
                                console.log(grupo8.value)
                                console.log(grupo48.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('7.1.1')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "711",
                                        "tipoConta": "Mercadorias",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#rendimentosSeleccao').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo48.value == 'Produtos Acabados e Intermédios') {
                                console.log(grupo1.value)
                                console.log(grupo8.value)
                                console.log(grupo48.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('7.1.2')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "712",
                                        "tipoConta": "Produtos Acabados e Intermédios",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#rendimentosSeleccao').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo48.value == 'Subprodutos, Desperdicios, Resíduos e Refugos') {
                                console.log(grupo1.value)
                                console.log(grupo8.value)
                                console.log(grupo48.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('7.1.3')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "713",
                                        "tipoConta": "Subprodutos, Desperdicios, Resíduos e Refugos",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#rendimentosSeleccao').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo48.value == 'Activos Biológicos') {
                                console.log(grupo1.value)
                                console.log(grupo8.value)
                                console.log(grupo48.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('7.1.4')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "714",
                                        "tipoConta": "Activos Biológicos",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#rendimentosSeleccao').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo48.value == 'IVA das Vendas com Imposto Incluido') {
                                console.log(grupo1.value)
                                console.log(grupo8.value)
                                console.log(grupo48.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('7.1.5')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "715",
                                        "tipoConta": "IVA das Vendas com Imposto Incluido",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#rendimentosSeleccao').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo48.value == 'Devoluções de Vendas') {
                                console.log(grupo1.value)
                                console.log(grupo8.value)
                                console.log(grupo48.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('7.1.6')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "716",
                                        "tipoConta": "Devoluções de Vendas",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#rendimentosSeleccao').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo48.value == 'Descontos e Abatimentos') {
                                console.log(grupo1.value)
                                console.log(grupo8.value)
                                console.log(grupo48.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('7.1.7')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "717",
                                        "tipoConta": "Descontos e Abatimentos",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#rendimentosSeleccao').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                        }
                        if (grupo8.value == 'Prestação de Serviços') {
                            if (grupo49.value == 'IVA das Vendas com Imposto Incluido') {
                                console.log(grupo1.value)
                                console.log(grupo8.value)
                                console.log(grupo49.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('7.2.1')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "721",
                                        "tipoConta": "IVA das Vendas com Imposto Incluido",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#rendimentosSeleccao').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo49.value == 'Descontos e Abatimentos') {
                                console.log(grupo1.value)
                                console.log(grupo8.value)
                                console.log(grupo49.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('7.2.6')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "726",
                                        "tipoConta": "Descontos e Abatimentos",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#rendimentosSeleccao').modal('hide');
                                        planoDeContas();
                                    })
                            }
                        }

                        if (grupo8.value == 'Investimentos Realizados Pela Própria Empresa') {
                            if (grupo50.value == 'Investimentos Financeiros') {
                                console.log(grupo1.value)
                                console.log(grupo8.value)
                                console.log(grupo50.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('7.3.1')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "731",
                                        "tipoConta": "Investimentos Financeiros",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#rendimentosSeleccao').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo50.value == 'Activos Tangiveis') {
                                console.log(grupo1.value)
                                console.log(grupo8.value)
                                console.log(grupo50.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('7.3.2')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "732",
                                        "tipoConta": "Activos Tangiveis",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#rendimentosSeleccao').modal('hide');
                                        planoDeContas();
                                    })
                            }
                            if (grupo50.value == 'Activos Intangiveis') {
                                console.log(grupo1.value)
                                console.log(grupo8.value)
                                console.log(grupo50.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('7.3.3')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "733",
                                        "tipoConta": "Activos Intangiveis",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#rendimentosSeleccao').modal('hide');
                                        planoDeContas();
                                    })
                            }
                            if (grupo50.value == 'Investimentos em Curso') {
                                console.log(grupo1.value)
                                console.log(grupo8.value)
                                console.log(grupo50.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('7.3.4')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "734",
                                        "tipoConta": "Investimentos em Curso",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#rendimentosSeleccao').modal('hide');
                                        planoDeContas();
                                    })
                            }
                        }
                        if (grupo8.value == 'Reversões do Periodo') {
                            if (grupo51.value == 'De Perdas Por Imparidade') {
                                if (grupo110.value == 'Ajustamento de Inventários Para o Valor Realizável Líquido') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo51.value)
                                    console.log(grupo110.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.4.1.1')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7411",
                                            "tipoConta": "Ajustamento de Inventários Para o Valor Realizável Líquido",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo110.value == 'Investimentos Finaceiros') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo51.value)
                                    console.log(grupo110.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.4.1.2')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7412",
                                            "tipoConta": "Investimentos Finaceiros",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                                if (grupo110.value == 'Activos Tangíveis') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo51.value)
                                    console.log(grupo110.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.4.1.3')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7413",
                                            "tipoConta": "Activos Tangíveis",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                                if (grupo110.value == 'Activos Intangíveis') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo51.value)
                                    console.log(grupo110.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.4.1.4')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7414",
                                            "tipoConta": "Activos Intangíveis",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                                if (grupo110.value == 'Activos Não Correntes Detidos Para Venda') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo51.value)
                                    console.log(grupo110.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.4.1.5')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7415",
                                            "tipoConta": "Activos Não Correntes Detidos Para Venda",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                                if (grupo110.value == 'Activos Tangíveis de Investimentos') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo51.value)
                                    console.log(grupo110.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.4.1.6')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7416",
                                            "tipoConta": "Activos Tangíveis de Investimentos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                                if (grupo110.value == 'Activos de Exploração e Avaliação de Recursos Minerais') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo51.value)
                                    console.log(grupo110.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.4.1.7')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7417",
                                            "tipoConta": "Activos de Exploração e Avaliação de Recursos Minerais",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                                if (grupo110.value == 'Contas a Receber') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo51.value)
                                    console.log(grupo110.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.4.1.8')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7418",
                                            "tipoConta": "Contas a Receber",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo51.value == 'De Amortizações') {
                                if (grupo111.value == 'Activos Tangíveis') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo51.value)
                                    console.log(grupo111.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.4.2.1')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7421",
                                            "tipoConta": "Activos Tangíveis",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                                if (grupo111.value == 'Activos Intangíveis') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo51.value)
                                    console.log(grupo111.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.4.2.2')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7422",
                                            "tipoConta": "Activos Intangíveis",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                                if (grupo111.value == 'Activos Tangíveis de Investimento') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo51.value)
                                    console.log(grupo111.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.4.2.3')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7423",
                                            "tipoConta": "Activos Tangíveis de Investimento",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                                if (grupo111.value == 'Activos de Exploração e Avaliação de Recursos Minerais') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo51.value)
                                    console.log(grupo111.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.4.2.4')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7424",
                                            "tipoConta": "Activos de Exploração e Avaliação de Recursos Minerais",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo51.value == 'De Provisões') {
                                if (grupo112.value == 'Processos Judiciais em Curso') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo51.value)
                                    console.log(grupo112.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.4.3.1')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7431",
                                            "tipoConta": "Processos Judiciais em Curso",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                                if (grupo112.value == 'Acidentes no Trabalho e Doenças Profissionais') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo51.value)
                                    console.log(grupo112.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.4.3.2')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7432",
                                            "tipoConta": "Acidentes no Trabalho e Doenças Profissionais",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                                if (grupo112.value == 'Impostos') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo51.value)
                                    console.log(grupo112.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.4.3.3')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7433",
                                            "tipoConta": "Impostos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                                if (grupo112.value == 'Reestruturação de Negócios') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo51.value)
                                    console.log(grupo112.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.4.3.4')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7434",
                                            "tipoConta": "Reestruturação de Negócios",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                                if (grupo112.value == 'Contratos Onorosos') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo51.value)
                                    console.log(grupo112.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.4.3.5')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7435",
                                            "tipoConta": "Contratos Onorosos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                                if (grupo112.value == 'Garantias a Clientes') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo51.value)
                                    console.log(grupo112.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.4.3.6')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7436",
                                            "tipoConta": "Garantias a Clientes",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                                if (grupo112.value == 'Perdas em Contratos de Construção') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo51.value)
                                    console.log(grupo112.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.4.3.7')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7437",
                                            "tipoConta": "Perdas em Contratos de Construção",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                                if (grupo112.value == 'Outras Provisões') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo51.value)
                                    console.log(grupo112.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.4.3.9')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7439",
                                            "tipoConta": "Outras Provisões",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                            }
                        }
                        if (grupo8.value == 'Rendimentos Suplementares') {
                            if (grupo52.value == 'Serviços Sociais') {
                                console.log(grupo1.value)
                                console.log(grupo8.value)
                                console.log(grupo52.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('7.5.1')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "751",
                                        "tipoConta": "Serviços Sociais",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#rendimentosSeleccao').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo52.value == 'Aluguer de Equipamento') {
                                console.log(grupo1.value)
                                console.log(grupo8.value)
                                console.log(grupo52.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('7.5.2')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "752",
                                        "tipoConta": "Aluguer de Equipamento",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#rendimentosSeleccao').modal('hide');
                                        planoDeContas();
                                    })
                            }
                            if (grupo52.value == 'Venda de Energia') {
                                console.log(grupo1.value)
                                console.log(grupo8.value)
                                console.log(grupo52.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('7.5.3')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "753",
                                        "tipoConta": "Venda de Energia",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#rendimentosSeleccao').modal('hide');
                                        planoDeContas();
                                    })

                            }
                            if (grupo52.value == 'Estudos, Projectos, Pesquisas e Investigações') {
                                console.log(grupo1.value)
                                console.log(grupo8.value)
                                console.log(grupo52.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('7.5.4')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "754",
                                        "tipoConta": "Estudos, Projectos, Pesquisas e Investigações",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#rendimentosSeleccao').modal('hide');
                                        planoDeContas();
                                    })
                            }
                            if (grupo52.value == 'Assistência Técnica') {
                                console.log(grupo1.value)
                                console.log(grupo8.value)
                                console.log(grupo52.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('7.5.5')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "755",
                                        "tipoConta": "Assistência Técnica",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#rendimentosSeleccao').modal('hide');
                                        planoDeContas();
                                    })
                            }
                            if (grupo52.value == 'Royalities') {
                                console.log(grupo1.value)
                                console.log(grupo8.value)
                                console.log(grupo52.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('7.5.6')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "756",
                                        "tipoConta": "Royalities",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#rendimentosSeleccao').modal('hide');
                                        planoDeContas();
                                    })
                            }
                            if (grupo52.value == 'Cargos Sociais Exercidos Noutras Empresas') {
                                console.log(grupo1.value)
                                console.log(grupo8.value)
                                console.log(grupo52.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('7.5.7')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "757",
                                        "tipoConta": "Cargos Sociais Exercidos Noutras Empresas",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#rendimentosSeleccao').modal('hide');
                                        planoDeContas();
                                    })
                            }
                            if (grupo52.value == 'Outros Rendimentos Suplementares Inerentes ao Valor Acrescentado') {
                                console.log(grupo1.value)
                                console.log(grupo8.value)
                                console.log(grupo52.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('7.5.9')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "759",
                                        "tipoConta": "Outros Rendimentos Suplementares Inerentes ao Valor Acrescentado",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#rendimentosSeleccao').modal('hide');
                                        planoDeContas();
                                    })
                            }
                        }
                        if (grupo8.value == 'Outros Rendimentos e Ganhos Operacionais') {
                            if (grupo53.value == 'Subsídios Para Investimentos') {
                                if (grupo113.value == 'Do Estado e Outros Organismos Públicos') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo53.value)
                                    console.log(grupo113.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.6.1.1')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7611",
                                            "tipoConta": "Do Estado e Outros Organismos Públicos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo113.value == 'De Outras Entidades') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo53.value)
                                    console.log(grupo113.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.6.1.9')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7619",
                                            "tipoConta": "De Outras Entidades",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo53.value == 'Subsídios à Exploração') {
                                if (grupo114.value == 'Do Estado e Outros Organismos Públicos') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo114.value)
                                    console.log(grupo53.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.6.2.1')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7621",
                                            "tipoConta": "Do Estado e Outros Organismos Públicos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                                if (grupo114.value == 'De Outras Entidades') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo114.value)
                                    console.log(grupo53.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.6.2.9')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7629",
                                            "tipoConta": "De Outras Entidades",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo53.value == 'Ganhos em Investimentos de Capital') {
                                if (grupo115.value == 'Alienação') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo53.value)
                                    console.log(grupo115.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.6.3.1')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7631",
                                            "tipoConta": "Alienação",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                                if (grupo115.value == 'Sinistros') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo53.value)
                                    console.log(grupo115.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.6.3.2')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7632",
                                            "tipoConta": "Sinistros",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo53.value == 'Ganhos em Investarias e Activos Biológicos') {
                                if (grupo116.value == 'Sinistros') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo53.value)
                                    console.log(grupo116.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.6.4.1')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7641",
                                            "tipoConta": "Sinistros",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                                if (grupo116.value == 'Sobras') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo53.value)
                                    console.log(grupo116.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.6.4.2')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7642",
                                            "tipoConta": "Sobras",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                                if (grupo116.value == 'Outros') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo53.value)
                                    console.log(grupo116.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.6.4.9')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7649",
                                            "tipoConta": "Outros",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo53.value == 'Outros Rendimentos Alheios ao Valor Acrescentado') {
                                if (grupo117.value == 'Restituição de Impostos') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo53.value)
                                    console.log(grupo117.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.6.9.1')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7691",
                                            "tipoConta": "Restituição de Impostos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                                if (grupo117.value == 'Beneficios de Penalidades Contratuais') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo53.value)
                                    console.log(grupo117.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.6.9.2')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7692",
                                            "tipoConta": "Beneficios de Penalidades Contratuais",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                                if (grupo117.value == 'Excesso de Estimativa para Impostos') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo53.value)
                                    console.log(grupo117.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.6.9.3')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7693",
                                            "tipoConta": "Excesso de Estimativa para Impostos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                                if (grupo117.value == 'Outros') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo53.value)
                                    console.log(grupo117.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.6.9.9')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7699",
                                            "tipoConta": "Outros",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                            }
                        }
                        if (grupo8.value == 'Rendimentos e Ganhos Financeiros') {
                            if (grupo54.value == 'Juros Obtidos') {
                                if (grupo118.value == 'Depósito Bancários') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo54.value)
                                    console.log(grupo118.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.8.1.1')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7811",
                                            "tipoConta": "Depósito Bancários",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo118.value == 'Emprestimos') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo54.value)
                                    console.log(grupo118.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.8.1.2')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7812",
                                            "tipoConta": "Emprestimos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                                if (grupo118.value == 'Obrigações e Títulos de Participação') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo54.value)
                                    console.log(grupo118.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.8.1.3')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7813",
                                            "tipoConta": "Obrigações e Títulos de Participação",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                                if (grupo118.value == 'Outras Aplicações de Tesouraria') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo54.value)
                                    console.log(grupo118.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.8.1.4')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7814",
                                            "tipoConta": "Outras Aplicações de Tesouraria",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                                if (grupo118.value == 'Outros Juros') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo54.value)
                                    console.log(grupo118.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('7.8.1.9')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7819",
                                            "tipoConta": "Outros Juros",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo54.value == 'Rendimentos de Activos Tangíveis de Investimento') {
                                console.log(grupo1.value)
                                console.log(grupo8.value)
                                console.log(grupo54.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('7.8.2')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "782",
                                        "tipoConta": "Rendimentos de Activos Tangíveis de Investimento",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#rendimentosSeleccao').modal('hide');
                                        planoDeContas();
                                    })
                            }
                            if (grupo54.value == 'Rendimento de Instrumentos Financeiros') {
                                console.log(grupo1.value)
                                console.log(grupo8.value)
                                console.log(grupo54.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('7.8.3')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "783",
                                        "tipoConta": "Rendimento de Instrumentos Financeiros",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#rendimentosSeleccao').modal('hide');
                                        planoDeContas();
                                    })
                            }
                            if (grupo54.value == 'Diferenças de Câmbio Favoráveis') {
                                if (grupo119.value == 'Realizadas') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo54.value)
                                    console.log(grupo119.value)
                                    console.log('7.8.4.1')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7841",
                                            "tipoConta": "Realizadas",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                                if (grupo119.value == 'Não Realizadas') {
                                    console.log(grupo1.value)
                                    console.log(grupo8.value)
                                    console.log(grupo54.value)
                                    console.log(grupo119.value)
                                    console.log('7.8.4.2')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "7842",
                                            "tipoConta": "Não Realizadas",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#rendimentosSeleccao').modal('hide');
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo54.value == 'Descontos de Pronto Pagamento Obtidos') {
                                console.log(grupo1.value)
                                console.log(grupo8.value)
                                console.log(grupo54.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('7.8.5')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "785",
                                        "tipoConta": "Descontos de Pronto Pagamento Obtidos",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#rendimentosSeleccao').modal('hide');
                                        planoDeContas();
                                    })
                            }
                            if (grupo54.value == 'Outros Rendimentos e Ganhos Finaceiros') {
                                console.log(grupo1.value)
                                console.log(grupo8.value)
                                console.log(grupo54.value)
                                console.log(grupo87.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('7.8.9')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "789",
                                        "tipoConta": "Outros Rendimentos e Ganhos Finaceiros",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#rendimentosSeleccao').modal('hide');
                                        planoDeContas();
                                    })
                            }
                        }
                        if (grupo8.value == 'Ganhos por Aumento do Justo Valor') {
                            if (grupo55.value == 'Instrumentos Financeiros') {
                                console.log(grupo1.value)
                                console.log(grupo8.value)
                                console.log(grupo55.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('7.9.1')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "791",
                                        "tipoConta": "Instrumentos Financeiros",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#rendimentosSeleccao').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo55.value == 'Activos Tangíveis de Investimentos') {
                                console.log(grupo1.value)
                                console.log(grupo8.value)
                                console.log(grupo55.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('7.9.2')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "792",
                                        "tipoConta": "Activos Tangíveis de Investimentos",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#rendimentosSeleccao').modal('hide');
                                        planoDeContas();
                                    })
                            }
                            if (grupo55.value == 'Activos Biológicos') {
                                console.log(grupo1.value)
                                console.log(grupo8.value)
                                console.log(grupo55.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('7.9.3')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "793",
                                        "tipoConta": "Activos Biológicos",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#rendimentosSeleccao').modal('hide');
                                        planoDeContas();
                                    })
                            }
                        }
                    });
                    adicionarAAGastos.addEventListener('click', (e) => {
                        if (grupo7.value == 'Custo dos Inventários') {
                            if (grupo39.value == 'Custo dos Inventários Vendidos ou Consumidos') {
                                if (grupo87.value == 'De Mercadorias') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo39.value)
                                    console.log(grupo87.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.1.1.2')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6112",
                                            "tipoConta": "De Mercadorias",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo87.value == 'De Matérias Primas, Auxiliares e Materias') {
                                    if (grupo88.value == 'Matérias Primas') {
                                        console.log(grupo1.value)
                                        console.log(grupo7.value)
                                        console.log(grupo39.value)
                                        console.log(grupo87.value)
                                        console.log(grupo88.value)
                                        console.log(debitoOuCredito.value)
                                        console.log(valorConta.value)
                                        console.log(historicoConta.value)
                                        console.log(diaHoje)
                                        console.log('6.1.1.6.1')
                                        const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                        let pora = new Request(urlLogIn, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "operacao": `${debitoOuCredito.value}`,
                                                "numeroConta": "61161",
                                                "tipoConta": "Matérias Primas",
                                                "valor": `${valorConta.value}`,
                                                "data": `${diaHoje}`,
                                                "historico": `${historicoConta.value}`
                                            })
                                        });
                                        fetch(pora)
                                            .then(ress => ress.json())
                                            .then(data5 => {
                                                console.log(data5);
                                                $('#novaSeleccaoGastos').modal('hide');
                                                var m = new Date();
                                                var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                const usuarioLogs = localStorage.getItem('usuario');
                                                const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                let logs = new Request(urlLogs, {
                                                    method: 'PATCH',
                                                    headers: h,
                                                    body: JSON.stringify({
                                                        "nomeFuncionario": `${usuarioLogs}`,
                                                        "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                        "data": `${dateString}`
                                                    })
                                                });
                                                fetch(logs)
                                                    .then(ress => ress.json())
                                                    .then(data5Logs => {
                                                        console.log(data5Logs)
                                                    });
                                                planoDeContas();
                                            })
                                    }
                                    if (grupo88.value == 'Matérias Auxiliares') {
                                        console.log(grupo1.value)
                                        console.log(grupo7.value)
                                        console.log(grupo39.value)
                                        console.log(grupo87.value)
                                        console.log(grupo88.value)
                                        console.log(debitoOuCredito.value)
                                        console.log(valorConta.value)
                                        console.log(historicoConta.value)
                                        console.log(diaHoje)
                                        console.log('6.1.1.6.2')
                                        const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                        let pora = new Request(urlLogIn, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "operacao": `${debitoOuCredito.value}`,
                                                "numeroConta": "61162",
                                                "tipoConta": "Matérias Auxiliares",
                                                "valor": `${valorConta.value}`,
                                                "data": `${diaHoje}`,
                                                "historico": `${historicoConta.value}`
                                            })
                                        });
                                        fetch(pora)
                                            .then(ress => ress.json())
                                            .then(data5 => {
                                                console.log(data5);
                                                $('#novaSeleccaoGastos').modal('hide');
                                                var m = new Date();
                                                var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                const usuarioLogs = localStorage.getItem('usuario');
                                                const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                let logs = new Request(urlLogs, {
                                                    method: 'PATCH',
                                                    headers: h,
                                                    body: JSON.stringify({
                                                        "nomeFuncionario": `${usuarioLogs}`,
                                                        "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                        "data": `${dateString}`
                                                    })
                                                });
                                                fetch(logs)
                                                    .then(ress => ress.json())
                                                    .then(data5Logs => {
                                                        console.log(data5Logs)
                                                    });
                                                planoDeContas();
                                            })
                                    }
                                    if (grupo88.value == 'Materiais') {
                                        console.log(grupo1.value)
                                        console.log(grupo7.value)
                                        console.log(grupo39.value)
                                        console.log(grupo87.value)
                                        console.log(grupo88.value)
                                        console.log(debitoOuCredito.value)
                                        console.log(valorConta.value)
                                        console.log(historicoConta.value)
                                        console.log(diaHoje)
                                        console.log('6.1.1.6.3')
                                        const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                        let pora = new Request(urlLogIn, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "operacao": `${debitoOuCredito.value}`,
                                                "numeroConta": "61163",
                                                "tipoConta": "Materiais",
                                                "valor": `${valorConta.value}`,
                                                "data": `${diaHoje}`,
                                                "historico": `${historicoConta.value}`
                                            })
                                        });
                                        fetch(pora)
                                            .then(ress => ress.json())
                                            .then(data5 => {
                                                console.log(data5);
                                                $('#novaSeleccaoGastos').modal('hide');
                                                var m = new Date();
                                                var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                const usuarioLogs = localStorage.getItem('usuario');
                                                const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                let logs = new Request(urlLogs, {
                                                    method: 'PATCH',
                                                    headers: h,
                                                    body: JSON.stringify({
                                                        "nomeFuncionario": `${usuarioLogs}`,
                                                        "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                        "data": `${dateString}`
                                                    })
                                                });
                                                fetch(logs)
                                                    .then(ress => ress.json())
                                                    .then(data5Logs => {
                                                        console.log(data5Logs)
                                                    });
                                                planoDeContas();
                                            })
                                    }
                                }
                                if (grupo87.value == 'Activos Biológicos') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo39.value)
                                    console.log(grupo87.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.1.1.7')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6117",
                                            "tipoConta": "Activos Biológicos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo39.value == 'Variação da Produção') {
                                if (grupo89.value == 'Produtos Acabados e Intérmedios') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo39.value)
                                    console.log(grupo89.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.1.2.1')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6121",
                                            "tipoConta": "Produtos Acabados e Intérmedios",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo89.value == 'Subprodutos, Desperdícios, Resíduos e Refugos') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo39.value)
                                    console.log(grupo89.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.1.2.2')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6122",
                                            "tipoConta": "Subprodutos, Desperdícios, Resíduos e Refugos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo89.value == 'Produtos e Serviços em Curso') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo39.value)
                                    console.log(grupo89.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.1.2.3')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6123",
                                            "tipoConta": "Produtos e Serviços em Curso",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                        }
                        if (grupo7.value == 'Gastos com o Pessoal') {
                            if (grupo40.value == 'Remunarações dos Órgãos Sociais') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo40.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('6.2.1')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "621",
                                        "tipoConta": "Remunarações dos Órgãos Sociais",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo40.value == 'Remunarações dos Trabalhadores') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo40.value)
                                console.log('6.2.2')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "622",
                                        "tipoConta": "Remunarações dos Trabalhadores",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo40.value == 'Encargos Sobre Remunarações') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo40.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('6.2.3')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "623",
                                        "tipoConta": "Encargos Sobre Remunarações",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo40.value == 'Beneficios Pós-Emprego') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo40.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('6.2.4')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "624",
                                        "tipoConta": "Beneficios Pós-Emprego",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo40.value == 'Ajudas de Custo') {
                                if (grupo90.value == 'Ajuda de Custos Tributáveis') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo40.value)
                                    console.log(grupo90.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.2.5.1')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6251",
                                            "tipoConta": "Ajuda de Custos Tributáveis",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo90.value == 'Ajuda de Custos Não Tributáveis') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo40.value)
                                    console.log(grupo90.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.2.5.2')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6252",
                                            "tipoConta": "Ajuda de Custos Não Tributáveis",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo40.value == 'Indemnizações') {
                                if (grupo91.value == 'Indemnizações - Risco Segurável') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo40.value)
                                    console.log(grupo91.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.2.6.1')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6261",
                                            "tipoConta": "Indemnizações - Risco Segurável",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo91.value == 'Indemnizações - Outras') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo40.value)
                                    console.log(grupo91.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.2.6.2')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6262",
                                            "tipoConta": "Indemnizações - Outras",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo40.value == 'Segurosde de Acidentes no Trabalho e Doenças Profissionais') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo40.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('6.2.7')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "627",
                                        "tipoConta": "Segurosde de Acidentes no Trabalho e Doenças Profissionais",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo40.value == 'Gastos de Acção Social') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo40.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('6.2.8')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "628",
                                        "tipoConta": "Gastos de Acção Social",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo40.value == 'Outros Gastos Com Pessoal') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo40.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('6.2.9')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "629",
                                        "tipoConta": "Outros Gastos Com Pessoal",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                        }
                        if (grupo7.value == 'Fornecimentos e Serviços de Terceiros') {
                            if (grupo41.value == 'Subcontratos') {
                                if (grupo92.value == 'Água') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo41.value)
                                    console.log(grupo92.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.3.2.1.1')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "63211",
                                            "tipoConta": "Água",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo92.value == 'Electricidade') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo41.value)
                                    console.log(grupo92.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.3.2.1.2')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "63212",
                                            "tipoConta": "Electricidade",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo92.value == 'Combustiveis') {
                                    if (grupo93.value == 'Gasóleo') {
                                        if (grupo94.value == 'Gasóleo - Viaturas Ligeiras de Passageiros') {
                                            console.log(grupo1.value)
                                            console.log(grupo7.value)
                                            console.log(grupo41.value)
                                            console.log(grupo93.value)
                                            console.log(grupo94.value)
                                            console.log(debitoOuCredito.value)
                                            console.log(valorConta.value)
                                            console.log(historicoConta.value)
                                            console.log(diaHoje)
                                            console.log('6.3.2.1.3.1.1')
                                            const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                            let pora = new Request(urlLogIn, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "operacao": `${debitoOuCredito.value}`,
                                                    "numeroConta": "6321311",
                                                    "tipoConta": "Gasóleo - Viaturas Ligeiras de Passageiros",
                                                    "valor": `${valorConta.value}`,
                                                    "data": `${diaHoje}`,
                                                    "historico": `${historicoConta.value}`
                                                })
                                            });
                                            fetch(pora)
                                                .then(ress => ress.json())
                                                .then(data5 => {
                                                    console.log(data5);
                                                    $('#novaSeleccaoGastos').modal('hide');
                                                    var m = new Date();
                                                    var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                    const usuarioLogs = localStorage.getItem('usuario');
                                                    const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                    let logs = new Request(urlLogs, {
                                                        method: 'PATCH',
                                                        headers: h,
                                                        body: JSON.stringify({
                                                            "nomeFuncionario": `${usuarioLogs}`,
                                                            "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                            "data": `${dateString}`
                                                        })
                                                    });
                                                    fetch(logs)
                                                        .then(ress => ress.json())
                                                        .then(data5Logs => {
                                                            console.log(data5Logs)
                                                        });
                                                    planoDeContas();
                                                })
                                        }
                                        if (grupo94.value == 'Gasóleo - Outros') {
                                            console.log(grupo1.value)
                                            console.log(grupo7.value)
                                            console.log(grupo41.value)
                                            console.log(grupo93.value)
                                            console.log(grupo94.value)
                                            console.log(debitoOuCredito.value)
                                            console.log(valorConta.value)
                                            console.log(historicoConta.value)
                                            console.log(diaHoje)
                                            console.log('6.3.2.1.3.1.2')
                                            const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                            let pora = new Request(urlLogIn, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "operacao": `${debitoOuCredito.value}`,
                                                    "numeroConta": "6321312",
                                                    "tipoConta": "Gasóleo - Outros",
                                                    "valor": `${valorConta.value}`,
                                                    "data": `${diaHoje}`,
                                                    "historico": `${historicoConta.value}`
                                                })
                                            });
                                            fetch(pora)
                                                .then(ress => ress.json())
                                                .then(data5 => {
                                                    console.log(data5);
                                                    $('#novaSeleccaoGastos').modal('hide');
                                                    var m = new Date();
                                                    var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                    const usuarioLogs = localStorage.getItem('usuario');
                                                    const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                    let logs = new Request(urlLogs, {
                                                        method: 'PATCH',
                                                        headers: h,
                                                        body: JSON.stringify({
                                                            "nomeFuncionario": `${usuarioLogs}`,
                                                            "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                            "data": `${dateString}`
                                                        })
                                                    });
                                                    fetch(logs)
                                                        .then(ress => ress.json())
                                                        .then(data5Logs => {
                                                            console.log(data5Logs)
                                                        });
                                                    planoDeContas();
                                                })
                                        }
                                    }
                                    if (grupo93.value == 'Restantes Combustíveis') {
                                        if (grupo95.value == 'Restantes Combustíveis - Viaturas Ligeiras de Passageiros') {
                                            console.log(grupo1.value)
                                            console.log(grupo7.value)
                                            console.log(grupo41.value)
                                            console.log(grupo93.value)
                                            console.log(grupo95.value)
                                            console.log(debitoOuCredito.value)
                                            console.log(valorConta.value)
                                            console.log(historicoConta.value)
                                            console.log(diaHoje)
                                            console.log('6.3.2.1.3.2.1')
                                            const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                            let pora = new Request(urlLogIn, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "operacao": `${debitoOuCredito.value}`,
                                                    "numeroConta": "6321321",
                                                    "tipoConta": "Restantes Combustíveis - Viaturas Ligeiras de Passageiros",
                                                    "valor": `${valorConta.value}`,
                                                    "data": `${diaHoje}`,
                                                    "historico": `${historicoConta.value}`
                                                })
                                            });
                                            fetch(pora)
                                                .then(ress => ress.json())
                                                .then(data5 => {
                                                    console.log(data5);
                                                    $('#novaSeleccaoGastos').modal('hide');
                                                    var m = new Date();
                                                    var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                    const usuarioLogs = localStorage.getItem('usuario');
                                                    const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                    let logs = new Request(urlLogs, {
                                                        method: 'PATCH',
                                                        headers: h,
                                                        body: JSON.stringify({
                                                            "nomeFuncionario": `${usuarioLogs}`,
                                                            "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                            "data": `${dateString}`
                                                        })
                                                    });
                                                    fetch(logs)
                                                        .then(ress => ress.json())
                                                        .then(data5Logs => {
                                                            console.log(data5Logs)
                                                        });
                                                    planoDeContas();
                                                })
                                        }
                                        if (grupo95.value == 'Restantes Combustíveis - Outros') {
                                            console.log(grupo1.value)
                                            console.log(grupo7.value)
                                            console.log(grupo41.value)
                                            console.log(grupo93.value)
                                            console.log(grupo95.value)
                                            console.log(debitoOuCredito.value)
                                            console.log(valorConta.value)
                                            console.log(historicoConta.value)
                                            console.log(diaHoje)
                                            console.log('6.3.2.1.3.2.2')
                                            const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                            let pora = new Request(urlLogIn, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "operacao": `${debitoOuCredito.value}`,
                                                    "numeroConta": "6321322",
                                                    "tipoConta": "Restantes Combustíveis - Outros",
                                                    "valor": `${valorConta.value}`,
                                                    "data": `${diaHoje}`,
                                                    "historico": `${historicoConta.value}`
                                                })
                                            });
                                            fetch(pora)
                                                .then(ress => ress.json())
                                                .then(data5 => {
                                                    console.log(data5);
                                                    $('#novaSeleccaoGastos').modal('hide');
                                                    var m = new Date();
                                                    var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                    const usuarioLogs = localStorage.getItem('usuario');
                                                    const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                    let logs = new Request(urlLogs, {
                                                        method: 'PATCH',
                                                        headers: h,
                                                        body: JSON.stringify({
                                                            "nomeFuncionario": `${usuarioLogs}`,
                                                            "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                            "data": `${dateString}`
                                                        })
                                                    });
                                                    fetch(logs)
                                                        .then(ress => ress.json())
                                                        .then(data5Logs => {
                                                            console.log(data5Logs)
                                                        });
                                                    planoDeContas();
                                                })
                                        }
                                    }
                                    if (grupo93.value == 'Lubrificantes') {
                                        if (grupo96.value == 'Lubrificantes - Viaturas Ligeiras de Passageiros') {
                                            console.log(grupo1.value)
                                            console.log(grupo7.value)
                                            console.log(grupo41.value)
                                            console.log(grupo93.value)
                                            console.log(grupo96.value)
                                            console.log(debitoOuCredito.value)
                                            console.log(valorConta.value)
                                            console.log(historicoConta.value)
                                            console.log(diaHoje)
                                            console.log('6.3.2.1.3.3.1')
                                            const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                            let pora = new Request(urlLogIn, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "operacao": `${debitoOuCredito.value}`,
                                                    "numeroConta": "6321331",
                                                    "tipoConta": "Lubrificantes - Viaturas Ligeiras de Passageiros",
                                                    "valor": `${valorConta.value}`,
                                                    "data": `${diaHoje}`,
                                                    "historico": `${historicoConta.value}`
                                                })
                                            });
                                            fetch(pora)
                                                .then(ress => ress.json())
                                                .then(data5 => {
                                                    console.log(data5);
                                                    $('#novaSeleccaoGastos').modal('hide');
                                                    var m = new Date();
                                                    var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                    const usuarioLogs = localStorage.getItem('usuario');
                                                    const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                    let logs = new Request(urlLogs, {
                                                        method: 'PATCH',
                                                        headers: h,
                                                        body: JSON.stringify({
                                                            "nomeFuncionario": `${usuarioLogs}`,
                                                            "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                            "data": `${dateString}`
                                                        })
                                                    });
                                                    fetch(logs)
                                                        .then(ress => ress.json())
                                                        .then(data5Logs => {
                                                            console.log(data5Logs)
                                                        });
                                                    planoDeContas();
                                                })
                                        }
                                        if (grupo96.value == 'Lubrificantes - Outros') {
                                            console.log(grupo1.value)
                                            console.log(grupo7.value)
                                            console.log(grupo41.value)
                                            console.log(grupo93.value)
                                            console.log(grupo96.value)
                                            console.log(debitoOuCredito.value)
                                            console.log(valorConta.value)
                                            console.log(historicoConta.value)
                                            console.log(diaHoje)
                                            console.log('6.3.2.1.3.3.2')
                                            const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                            let pora = new Request(urlLogIn, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "operacao": `${debitoOuCredito.value}`,
                                                    "numeroConta": "6321332",
                                                    "tipoConta": "Lubrificantes - Outros",
                                                    "valor": `${valorConta.value}`,
                                                    "data": `${diaHoje}`,
                                                    "historico": `${historicoConta.value}`
                                                })
                                            });
                                            fetch(pora)
                                                .then(ress => ress.json())
                                                .then(data5 => {
                                                    console.log(data5);
                                                    $('#novaSeleccaoGastos').modal('hide');
                                                    var m = new Date();
                                                    var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                    const usuarioLogs = localStorage.getItem('usuario');
                                                    const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                    let logs = new Request(urlLogs, {
                                                        method: 'PATCH',
                                                        headers: h,
                                                        body: JSON.stringify({
                                                            "nomeFuncionario": `${usuarioLogs}`,
                                                            "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                            "data": `${dateString}`
                                                        })
                                                    });
                                                    fetch(logs)
                                                        .then(ress => ress.json())
                                                        .then(data5Logs => {
                                                            console.log(data5Logs)
                                                        });
                                                    planoDeContas();
                                                })
                                        }
                                    }
                                }
                                if (grupo92.value == 'Ferramentas e Utensílios de Desgaste Rápido') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo41.value)
                                    console.log(grupo92.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.3.2.1.4')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "63214",
                                            "tipoConta": "Ferramentas e Utensílios de Desgaste Rápido",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo92.value == 'Material de Manutenção e Reparação') {
                                    if (grupo97.value == 'Material de Manutanção e Reparação - Viaturas Ligeiras de Passageiros') {
                                        console.log(grupo1.value)
                                        console.log(grupo7.value)
                                        console.log(grupo41.value)
                                        console.log(grupo92.value)
                                        console.log(grupo97.value)
                                        console.log(debitoOuCredito.value)
                                        console.log(valorConta.value)
                                        console.log(historicoConta.value)
                                        console.log(diaHoje)
                                        console.log('6.3.2.1.5.1')
                                        const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                        let pora = new Request(urlLogIn, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "operacao": `${debitoOuCredito.value}`,
                                                "numeroConta": "632151",
                                                "tipoConta": "Material de Manutanção e Reparação - Viaturas Ligeiras de Passageiros",
                                                "valor": `${valorConta.value}`,
                                                "data": `${diaHoje}`,
                                                "historico": `${historicoConta.value}`
                                            })
                                        });
                                        fetch(pora)
                                            .then(ress => ress.json())
                                            .then(data5 => {
                                                console.log(data5);
                                                $('#novaSeleccaoGastos').modal('hide');
                                                var m = new Date();
                                                var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                const usuarioLogs = localStorage.getItem('usuario');
                                                const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                let logs = new Request(urlLogs, {
                                                    method: 'PATCH',
                                                    headers: h,
                                                    body: JSON.stringify({
                                                        "nomeFuncionario": `${usuarioLogs}`,
                                                        "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                        "data": `${dateString}`
                                                    })
                                                });
                                                fetch(logs)
                                                    .then(ress => ress.json())
                                                    .then(data5Logs => {
                                                        console.log(data5Logs)
                                                    });
                                                planoDeContas();
                                            })
                                    }
                                    if (grupo97.value == 'Material de Manutanção e Reparação - Outros') {
                                        console.log(grupo1.value)
                                        console.log(grupo7.value)
                                        console.log(grupo41.value)
                                        console.log(grupo92.value)
                                        console.log(grupo97.value)
                                        console.log(debitoOuCredito.value)
                                        console.log(valorConta.value)
                                        console.log(historicoConta.value)
                                        console.log(diaHoje)
                                        console.log('6.3.2.1.5.2')
                                        const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                        let pora = new Request(urlLogIn, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "operacao": `${debitoOuCredito.value}`,
                                                "numeroConta": "632152",
                                                "tipoConta": "Material de Manutanção e Reparação - Outros",
                                                "valor": `${valorConta.value}`,
                                                "data": `${diaHoje}`,
                                                "historico": `${historicoConta.value}`
                                            })
                                        });
                                        fetch(pora)
                                            .then(ress => ress.json())
                                            .then(data5 => {
                                                console.log(data5);
                                                $('#novaSeleccaoGastos').modal('hide');
                                                var m = new Date();
                                                var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                const usuarioLogs = localStorage.getItem('usuario');
                                                const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                let logs = new Request(urlLogs, {
                                                    method: 'PATCH',
                                                    headers: h,
                                                    body: JSON.stringify({
                                                        "nomeFuncionario": `${usuarioLogs}`,
                                                        "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                        "data": `${dateString}`
                                                    })
                                                });
                                                fetch(logs)
                                                    .then(ress => ress.json())
                                                    .then(data5Logs => {
                                                        console.log(data5Logs)
                                                    });
                                                planoDeContas();
                                            })
                                    }
                                }
                                if (grupo92.value == 'Material de Escritório') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo41.value)
                                    console.log(grupo92.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.3.2.1.6')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "63216",
                                            "tipoConta": "Material de Escritório",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo92.value == 'Livros e Documentação Técnica') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo41.value)
                                    console.log(grupo92.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.3.2.1.7')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "63217",
                                            "tipoConta": "Livros e Documentação Técnica",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo92.value == 'Artigos Para Oferta') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo41.value)
                                    console.log(grupo92.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.3.2.1.8')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "63218",
                                            "tipoConta": "Artigos Para Oferta",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo92.value == 'Manutenção e Reparação') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo41.value)
                                    console.log(grupo92.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.3.2.2.1')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "63221",
                                            "tipoConta": "Manutenção e Reparação",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo92.value == 'Trasnporte de Carga') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo41.value)
                                    console.log(grupo92.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.3.2.2.2')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "63222",
                                            "tipoConta": "Trasnporte de Carga",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo92.value == 'Transporte de Pessoal') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo41.value)
                                    console.log(grupo92.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.3.2.2.3')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "63223",
                                            "tipoConta": "Transporte de Pessoal",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo92.value == 'Comunicações') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo41.value)
                                    console.log(grupo92.value)
                                    console.log('6.3.2.2.4')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "63224",
                                            "tipoConta": "Comunicações",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo92.value == 'Honorários') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo41.value)
                                    console.log(grupo92.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.3.2.2.5')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "63225",
                                            "tipoConta": "Honorários",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo92.value == 'Comissões a Intermediários') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo41.value)
                                    console.log(grupo92.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.3.2.2.6')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "63226",
                                            "tipoConta": "Comissões a Intermediários",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo92.value == 'Publicidade e Propaganda') {
                                    if (grupo98.value == 'Publicidade e Propaganda - Campanhas Publicitárias') {
                                        console.log(grupo1.value)
                                        console.log(grupo7.value)
                                        console.log(grupo41.value)
                                        console.log(grupo92.value)
                                        console.log(grupo98.value)
                                        console.log(debitoOuCredito.value)
                                        console.log(valorConta.value)
                                        console.log(historicoConta.value)
                                        console.log(diaHoje)
                                        console.log('6.3.2.2.7.1')
                                        const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                        let pora = new Request(urlLogIn, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "operacao": `${debitoOuCredito.value}`,
                                                "numeroConta": "632271",
                                                "tipoConta": "Publicidade e Propaganda - Campanhas Publicitárias",
                                                "valor": `${valorConta.value}`,
                                                "data": `${diaHoje}`,
                                                "historico": `${historicoConta.value}`
                                            })
                                        });
                                        fetch(pora)
                                            .then(ress => ress.json())
                                            .then(data5 => {
                                                console.log(data5);
                                                $('#novaSeleccaoGastos').modal('hide');
                                                var m = new Date();
                                                var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                const usuarioLogs = localStorage.getItem('usuario');
                                                const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                let logs = new Request(urlLogs, {
                                                    method: 'PATCH',
                                                    headers: h,
                                                    body: JSON.stringify({
                                                        "nomeFuncionario": `${usuarioLogs}`,
                                                        "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                        "data": `${dateString}`
                                                    })
                                                });
                                                fetch(logs)
                                                    .then(ress => ress.json())
                                                    .then(data5Logs => {
                                                        console.log(data5Logs)
                                                    });
                                                planoDeContas();
                                            })
                                    }
                                    if (grupo98.value == 'Publicidade e Propaganda - Outros') {
                                        console.log(grupo1.value)
                                        console.log(grupo7.value)
                                        console.log(grupo41.value)
                                        console.log(grupo92.value)
                                        console.log(grupo98.value)
                                        console.log(debitoOuCredito.value)
                                        console.log(valorConta.value)
                                        console.log(historicoConta.value)
                                        console.log(diaHoje)
                                        console.log('6.3.2.2.7.2')
                                        const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                        let pora = new Request(urlLogIn, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "operacao": `${debitoOuCredito.value}`,
                                                "numeroConta": "632272",
                                                "tipoConta": "Publicidade e Propaganda - Outros",
                                                "valor": `${valorConta.value}`,
                                                "data": `${diaHoje}`,
                                                "historico": `${historicoConta.value}`
                                            })
                                        });
                                        fetch(pora)
                                            .then(ress => ress.json())
                                            .then(data5 => {
                                                console.log(data5);
                                                $('#novaSeleccaoGastos').modal('hide');
                                                var m = new Date();
                                                var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                const usuarioLogs = localStorage.getItem('usuario');
                                                const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                let logs = new Request(urlLogs, {
                                                    method: 'PATCH',
                                                    headers: h,
                                                    body: JSON.stringify({
                                                        "nomeFuncionario": `${usuarioLogs}`,
                                                        "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                        "data": `${dateString}`
                                                    })
                                                });
                                                fetch(logs)
                                                    .then(ress => ress.json())
                                                    .then(data5Logs => {
                                                        console.log(data5Logs)
                                                    });
                                                planoDeContas();
                                            })
                                    }
                                }
                                if (grupo92.value == 'Deslocações e Estadias') {
                                    if (grupo99.value == 'Deslocações e Estadias - Em Serviço') {
                                        console.log(grupo1.value)
                                        console.log(grupo7.value)
                                        console.log(grupo41.value)
                                        console.log(grupo92.value)
                                        console.log(grupo99.value)
                                        console.log('6.3.2.2.8.1')
                                        console.log(debitoOuCredito.value)
                                        console.log(valorConta.value)
                                        console.log(historicoConta.value)
                                        console.log(diaHoje)
                                        const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                        let pora = new Request(urlLogIn, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "operacao": `${debitoOuCredito.value}`,
                                                "numeroConta": "632281",
                                                "tipoConta": "Deslocações e Estadias - Em Serviço",
                                                "valor": `${valorConta.value}`,
                                                "data": `${diaHoje}`,
                                                "historico": `${historicoConta.value}`
                                            })
                                        });
                                        fetch(pora)
                                            .then(ress => ress.json())
                                            .then(data5 => {
                                                console.log(data5);
                                                $('#novaSeleccaoGastos').modal('hide');
                                                var m = new Date();
                                                var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                const usuarioLogs = localStorage.getItem('usuario');
                                                const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                let logs = new Request(urlLogs, {
                                                    method: 'PATCH',
                                                    headers: h,
                                                    body: JSON.stringify({
                                                        "nomeFuncionario": `${usuarioLogs}`,
                                                        "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                        "data": `${dateString}`
                                                    })
                                                });
                                                fetch(logs)
                                                    .then(ress => ress.json())
                                                    .then(data5Logs => {
                                                        console.log(data5Logs)
                                                    });
                                                planoDeContas();
                                            })
                                    }
                                    if (grupo99.value == 'Deslocações e Estadias - Outras Deslocações') {
                                        console.log(grupo1.value)
                                        console.log(grupo7.value)
                                        console.log(grupo41.value)
                                        console.log(grupo92.value)
                                        console.log(grupo99.value)
                                        console.log('6.3.2.2.8.2')
                                        console.log(debitoOuCredito.value)
                                        console.log(valorConta.value)
                                        console.log(historicoConta.value)
                                        console.log(diaHoje)
                                        const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                        let pora = new Request(urlLogIn, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "operacao": `${debitoOuCredito.value}`,
                                                "numeroConta": "632282",
                                                "tipoConta": "Deslocações e Estadias - Outras Deslocações",
                                                "valor": `${valorConta.value}`,
                                                "data": `${diaHoje}`,
                                                "historico": `${historicoConta.value}`
                                            })
                                        });
                                        fetch(pora)
                                            .then(ress => ress.json())
                                            .then(data5 => {
                                                console.log(data5);
                                                $('#novaSeleccaoGastos').modal('hide');
                                                var m = new Date();
                                                var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                const usuarioLogs = localStorage.getItem('usuario');
                                                const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                let logs = new Request(urlLogs, {
                                                    method: 'PATCH',
                                                    headers: h,
                                                    body: JSON.stringify({
                                                        "nomeFuncionario": `${usuarioLogs}`,
                                                        "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                        "data": `${dateString}`
                                                    })
                                                });
                                                fetch(logs)
                                                    .then(ress => ress.json())
                                                    .then(data5Logs => {
                                                        console.log(data5Logs)
                                                    });
                                                planoDeContas();
                                            })
                                    }
                                }
                                if (grupo92.value == 'Despesas de Reparação') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo41.value)
                                    console.log(grupo92.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.3.2.2.9')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "63229",
                                            "tipoConta": "Despesas de Reparação",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo92.value == 'Contencioso e Notariado') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo41.value)
                                    console.log(grupo92.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.3.2.3.1')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "63231",
                                            "tipoConta": "Contencioso e Notariado",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo92.value == 'Rendas e Alugueres') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo41.value)
                                    console.log(grupo92.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.3.2.3.2.1')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "632321",
                                            "tipoConta": "Rendas e Alugueres",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo92.value == 'Seguros') {
                                    if (grupo100.value == 'Seguro de Vida, Acidentes Pessoais e Doenças') {
                                        console.log(grupo1.value)
                                        console.log(grupo7.value)
                                        console.log(grupo41.value)
                                        console.log(grupo92.value)
                                        console.log(grupo100.value)
                                        console.log(debitoOuCredito.value)
                                        console.log(valorConta.value)
                                        console.log(historicoConta.value)
                                        console.log(diaHoje)
                                        console.log('6.3.2.3.3.1')
                                        const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                        let pora = new Request(urlLogIn, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "operacao": `${debitoOuCredito.value}`,
                                                "numeroConta": "632331",
                                                "tipoConta": "Seguros",
                                                "valor": `${valorConta.value}`,
                                                "data": `${diaHoje}`,
                                                "historico": `${historicoConta.value}`
                                            })
                                        });
                                        fetch(pora)
                                            .then(ress => ress.json())
                                            .then(data5 => {
                                                console.log(data5);
                                                $('#novaSeleccaoGastos').modal('hide');
                                                var m = new Date();
                                                var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                const usuarioLogs = localStorage.getItem('usuario');
                                                const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                let logs = new Request(urlLogs, {
                                                    method: 'PATCH',
                                                    headers: h,
                                                    body: JSON.stringify({
                                                        "nomeFuncionario": `${usuarioLogs}`,
                                                        "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                        "data": `${dateString}`
                                                    })
                                                });
                                                fetch(logs)
                                                    .then(ress => ress.json())
                                                    .then(data5Logs => {
                                                        console.log(data5Logs)
                                                    });
                                                planoDeContas();
                                            })
                                    }
                                }
                                if (grupo92.value == 'Royalties') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo41.value)
                                    console.log(grupo92.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.3.2.3.4')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "63234",
                                            "tipoConta": "Royalties",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo92.value == 'Limpeza, Higiene e Conforto') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo41.value)
                                    console.log(grupo92.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.3.2.3.5')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "63235",
                                            "tipoConta": "Limpeza, Higiene e Conforto",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo92.value == 'Vigilância e Segurança') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo41.value)
                                    console.log(grupo92.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.3.2.3.6')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "63236",
                                            "tipoConta": "Vigilância e Segurança",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo92.value == 'Trabalhos Especializados') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo41.value)
                                    console.log(grupo92.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.3.2.3.7')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "63237",
                                            "tipoConta": "Trabalhos Especializados",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo92.value == 'Outros Fornecimentos e Serviços') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo41.value)
                                    console.log(grupo92.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.3.2.3.9')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "63239",
                                            "tipoConta": "Outros Fornecimentos e Serviços",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                        }
                        if (grupo7.value == 'Perdas por Imparidade do Período') {
                            if (grupo42.value == 'Justamentos de Inventarios Para o Valor Realizavel Liquido') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo42.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('6.4.1')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "641",
                                        "tipoConta": "Justamentos de Inventarios Para o Valor Realizavel Liquido",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo42.value == 'Investimentos Financeiros') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo42.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('6.4.2')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "642",
                                        "tipoConta": "Investimentos Financeiros",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo42.value == 'Activos Tangíveis') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo42.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('6.4.3')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "643",
                                        "tipoConta": "Activos Tangíveis",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo42.value == 'Activos Intagíveis') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo42.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('6.4.4')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "644",
                                        "tipoConta": "Activos Intagíveis",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo42.value == 'Activos Não Correntes Detidos Para Venda') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo42.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('6.4.5')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "645",
                                        "tipoConta": "Activos Não Correntes Detidos Para Venda",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo42.value == 'Activos Tangíveis de Investimento') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo42.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('6.4.6')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "646",
                                        "tipoConta": "Activos Tangíveis de Investimento",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo42.value == 'Activos de Exploração e Avaliação de Recursos Minerais') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo42.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('6.4.7')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "647",
                                        "tipoConta": "Activos de Exploração e Avaliação de Recursos Minerais",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo42.value == 'Contas a Receber') {
                                if (grupo1011.value == 'Contas a Receber - Ajustamentos Dentros dos Limites Fiscais') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo42.value)
                                    console.log(grupo1011.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.4.8.1')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6481",
                                            "tipoConta": "Contas a Receber - Ajustamentos Dentros dos Limites Fiscais",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo1011.value == 'Contas a Receber - Ajustamentos Para Além dos Limites Fiscais') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo42.value)
                                    console.log(grupo1011.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.4.8.2')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6482",
                                            "tipoConta": "Contas a Receber - Ajustamentos Para Além dos Limites Fiscais",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                        }
                        if (grupo7.value == 'Amortizações do Período') {
                            if (grupo43.value == 'Activos Tangíveis') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo43.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('6.5.1')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "651",
                                        "tipoConta": "Activos Tangíveis",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo43.value == 'Activos Intagíveis') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo43.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('6.5.2')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "652",
                                        "tipoConta": "Activos Intagíveis",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo43.value == 'Activos Tangíveis de Investimento') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo43.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('6.5.3')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "653",
                                        "tipoConta": "Activos Tangíveis de Investimento",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo43.value == 'Activos de Exploração e Avaliação de Recursos Minerais') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo43.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('6.5.4')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "654",
                                        "tipoConta": "Activos de Exploração e Avaliação de Recursos Minerais",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }

                        }
                        if (grupo7.value == 'Provisões do Período') {
                            if (grupo44.value == 'Processo Juridiciais em Curso') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo44.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('6.6.1')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "661",
                                        "tipoConta": "Processo Juridiciais em Curso",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo44.value == 'Acidentes no Trabalho e Doenças Profissionais') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo44.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('6.6.2')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "662",
                                        "tipoConta": "Acidentes no Trabalho e Doenças Profissionais",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo44.value == 'Impostos') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo44.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('6.6.3')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "663",
                                        "tipoConta": "Impostos",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo44.value == 'Reestruturação de Negócios') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo44.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('6.6.4')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "664",
                                        "tipoConta": "Reestruturação de Negócios",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo44.value == 'Contratos Onerosos') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo44.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('6.6.5')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "665",
                                        "tipoConta": "Contratos Onerosos",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }

                            if (grupo44.value == 'Garantias a Clientes') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo44.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('6.6.6')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "666",
                                        "tipoConta": "Garantias a Clientes",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo44.value == 'Perdas em Contratos de Construção') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo44.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('6.6.7')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "667",
                                        "tipoConta": "Perdas em Contratos de Construção",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo44.value == 'Outras Provisões') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo44.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('6.6.9')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "669",
                                        "tipoConta": "Outras Provisões",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                        }
                        if (grupo7.value == 'Perdas por Redução do Justo Valor') {
                            if (grupo45.value == 'Instrumentos Financeiros') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo45.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('6.7.1')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "671",
                                        "tipoConta": "Instrumentos Financeiros",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo45.value == 'Activos Tangíveis de Investimento') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo45.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('6.7.2')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "672",
                                        "tipoConta": "Activos Tangíveis de Investimento",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo45.value == 'Activos Biológicos') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo45.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('6.7.3')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "673",
                                        "tipoConta": "Activos Biológicos",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                        }
                        if (grupo7.value == 'Outros Gastos e Perdas Operacionais') {
                            if (grupo46.value == 'Despesas de Investigação e Pesquisas') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo46.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('6.8.1')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "681",
                                        "tipoConta": "Despesas de Investigação e Pesquisas",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo46.value == 'Impostos e Taxas') {
                                if (grupo102.value == 'Direitos Aduaneiros') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo46.value)
                                    console.log(grupo102.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6821",
                                            "tipoConta": "Direitos Aduaneiros",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo102.value == 'Imposto Sobre o Valor Acrescentado') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo46.value)
                                    console.log(grupo102.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6822",
                                            "tipoConta": "Direitos Aduaneiros",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo102.value == 'Imposto de Selo') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo46.value)
                                    console.log(grupo102.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6823",
                                            "tipoConta": "Imposto de Selo",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo102.value == 'Impostos Sobre Veículos') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo46.value)
                                    console.log(grupo102.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6824",
                                            "tipoConta": "Impostos Sobre Veículos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo102.value == 'Impostos Autárquicos') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo46.value)
                                    console.log(grupo102.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6825",
                                            "tipoConta": "Impostos Autárquicos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo46.value == 'Perdas em Investimentos de Capital') {
                                if (grupo103.value == 'Alienação') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo46.value)
                                    console.log(grupo103.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.8.3.1')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6831",
                                            "tipoConta": "Alienação",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo103.value == 'Abates') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo46.value)
                                    console.log(grupo103.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.8.3.2')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6832",
                                            "tipoConta": "Abates",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo103.value == 'Sinistros') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo46.value)
                                    console.log(grupo103.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.8.3.3')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6833",
                                            "tipoConta": "Sinistros",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo46.value == 'Perdas em Inventário e Activos Biológicos') {
                                if (grupo104.value == 'Sinistros') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo46.value)
                                    console.log(grupo104.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.8.4.1')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6841",
                                            "tipoConta": "Sinistros",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo104.value == 'Quebras') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo46.value)
                                    console.log(grupo104.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.8.4.2')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6842",
                                            "tipoConta": "Quebras",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo104.value == 'Outras') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo46.value)
                                    console.log(grupo104.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.8.4.9')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6849",
                                            "tipoConta": "Outras",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo46.value == 'Outros Gastos Operacionais') {
                                if (grupo105.value == 'Quantizações') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo46.value)
                                    console.log(grupo105.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.8.9.1')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6891",
                                            "tipoConta": "Quantizações",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo105.value == 'Despesas Confidenciais') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo46.value)
                                    console.log(grupo105.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.8.9.2')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6892",
                                            "tipoConta": "Despesas Confidenciais",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo105.value == 'Ofertas e Amostras de Inventários') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo46.value)
                                    console.log(grupo105.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.8.9.3')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6893",
                                            "tipoConta": "Ofertas e Amostras de Inventários",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo105.value == 'Programas de Responsabilidade Social') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo46.value)
                                    console.log(grupo105.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.8.9.4')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6894",
                                            "tipoConta": "Programas de Responsabilidade Social",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo105.value == 'Donativos') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo46.value)
                                    console.log(grupo105.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.8.9.5')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6895",
                                            "tipoConta": "Donativos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo105.value == 'Donativos ao Estado') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo46.value)
                                    console.log(grupo105.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.8.9.5.1')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "68951",
                                            "tipoConta": "Donativos ao Estado",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo105.value == 'Outros Donativos no Âmbito do Mecenato') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo46.value)
                                    console.log(grupo105.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.8.9.5.2')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "68952",
                                            "tipoConta": "Outros Donativos no Âmbito do Mecenato",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo105.value == 'Multas e Penalidades') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo46.value)
                                    console.log(grupo105.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.8.9.6')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6896",
                                            "tipoConta": "Multas e Penalidades",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo105.value == 'Outros') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo46.value)
                                    console.log(grupo105.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.8.9.9')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6899",
                                            "tipoConta": "Outros",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                        }
                        if (grupo7.value == 'Gastos e Perdas Financeiros') {
                            if (grupo47.value == 'Juros Suportados') {
                                if (grupo106.value == 'Empréstimos Bancários') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo47.value)
                                    console.log(grupogrupo106105.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.9.1.1')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6911",
                                            "tipoConta": "Empréstimos Bancários",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo106.value == 'Empréstimos Obrigacionistas e Títulos de Participação') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo47.value)
                                    console.log(grupo106.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.9.1.2')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6912",
                                            "tipoConta": "Empréstimos Obrigacionistas e Títulos de Participação",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo106.value == 'Empréstimos de Sócios, Accionistas ou Proprietários') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo47.value)
                                    console.log(grupo106.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.9.1.3')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6913",
                                            "tipoConta": "Empréstimos de Sócios, Accionistas ou Proprietários",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo106.value == 'Outros Empréstimos') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo106.value)
                                    console.log(grupo105.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.9.1.4')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6914",
                                            "tipoConta": "Outros Empréstimos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })

                                }
                                if (grupo106.value == 'Descontos de Títulos') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo47.value)
                                    console.log(grupo106.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.9.1.6')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6916",
                                            "tipoConta": "Descontos de Títulos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo106.value == 'Juros de Mora e Compensatórios') {
                                    if (grupo107.value == 'Juros de Mora') {
                                        console.log(grupo1.value)
                                        console.log(grupo7.value)
                                        console.log(grupo47.value)
                                        console.log(grupo106.value)
                                        console.log(grupo107.value)
                                        console.log(debitoOuCredito.value)
                                        console.log(valorConta.value)
                                        console.log(historicoConta.value)
                                        console.log(diaHoje)
                                        console.log('6.9.1.6.1')
                                        const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                        let pora = new Request(urlLogIn, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "operacao": `${debitoOuCredito.value}`,
                                                "numeroConta": "69161",
                                                "tipoConta": "Juros de Mora",
                                                "valor": `${valorConta.value}`,
                                                "data": `${diaHoje}`,
                                                "historico": `${historicoConta.value}`
                                            })
                                        });
                                        fetch(pora)
                                            .then(ress => ress.json())
                                            .then(data5 => {
                                                console.log(data5);
                                                $('#novaSeleccaoGastos').modal('hide');
                                                var m = new Date();
                                                var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                const usuarioLogs = localStorage.getItem('usuario');
                                                const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                let logs = new Request(urlLogs, {
                                                    method: 'PATCH',
                                                    headers: h,
                                                    body: JSON.stringify({
                                                        "nomeFuncionario": `${usuarioLogs}`,
                                                        "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                        "data": `${dateString}`
                                                    })
                                                });
                                                fetch(logs)
                                                    .then(ress => ress.json())
                                                    .then(data5Logs => {
                                                        console.log(data5Logs)
                                                    });
                                                planoDeContas();
                                            })
                                    }
                                    if (grupo107.value == 'Juros Compensatórios') {
                                        console.log(grupo1.value)
                                        console.log(grupo7.value)
                                        console.log(grupo47.value)
                                        console.log(grupo106.value)
                                        console.log(grupo107.value)
                                        console.log(debitoOuCredito.value)
                                        console.log(valorConta.value)
                                        console.log(historicoConta.value)
                                        console.log(diaHoje)
                                        console.log('6.9.1.6.2')
                                        const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                        let pora = new Request(urlLogIn, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "operacao": `${debitoOuCredito.value}`,
                                                "numeroConta": "69162",
                                                "tipoConta": "Juros Compensatórios",
                                                "valor": `${valorConta.value}`,
                                                "data": `${diaHoje}`,
                                                "historico": `${historicoConta.value}`
                                            })
                                        });
                                        fetch(pora)
                                            .then(ress => ress.json())
                                            .then(data5 => {
                                                console.log(data5);
                                                $('#novaSeleccaoGastos').modal('hide');
                                                var m = new Date();
                                                var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                const usuarioLogs = localStorage.getItem('usuario');
                                                const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                let logs = new Request(urlLogs, {
                                                    method: 'PATCH',
                                                    headers: h,
                                                    body: JSON.stringify({
                                                        "nomeFuncionario": `${usuarioLogs}`,
                                                        "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                        "data": `${dateString}`
                                                    })
                                                });
                                                fetch(logs)
                                                    .then(ress => ress.json())
                                                    .then(data5Logs => {
                                                        console.log(data5Logs)
                                                    });
                                                planoDeContas();
                                            })
                                    }
                                }
                                if (grupo47.value == 'Outros Juros') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo47.value)
                                    console.log(grupo105.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.9.1.9')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6919",
                                            "tipoConta": "Outros Juros",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo47.value == 'Diferenças de Câmbio Desfavoráveis') {
                                if (grupo108.value == 'Realizadas') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo47.value)
                                    console.log(grupo108.value)
                                    console.log('6.9.4.1')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6941",
                                            "tipoConta": "Realizadas",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo108.value == 'Não Realizadas') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo47.value)
                                    console.log(grupo108.value)
                                    console.log('6.9.4.2')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6942",
                                            "tipoConta": "Não Realizadas",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo47.value == 'Descontos de Pronto Pagamento Concedidos') {
                                console.log(grupo1.value)
                                console.log(grupo7.value)
                                console.log(grupo47.value)
                                console.log(grupo105.value)
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                console.log('6.9.5')
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "695",
                                        "tipoConta": "Descontos de Pronto Pagamento Concedidos",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoGastos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo47.value == 'Outros Gastos e Perdas Financeiras') {
                                if (grupo109.value == 'Serviços Bancários') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo47.value)
                                    console.log(grupo109.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.9.8.1')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6981",
                                            "tipoConta": "Serviços Bancários",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo109.value == 'Diversos Não Especificados') {
                                    console.log(grupo1.value)
                                    console.log(grupo7.value)
                                    console.log(grupo47.value)
                                    console.log(grupo109.value)
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    console.log('6.9.8.9')
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "6989",
                                            "tipoConta": "Diversos Não Especificados",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoGastos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }

                        }
                    });
                    adicionarAACapital.addEventListener('click', (e) => {
                        if (grupo6.value == 'Capital') {
                            console.log(grupo1.value)
                            console.log(grupo6.value)
                            console.log('5.1')
                            console.log(debitoOuCredito.value)
                            console.log(valorConta.value)
                            console.log(historicoConta.value)
                            console.log(diaHoje)
                            const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                            let pora = new Request(urlLogIn, {
                                method: 'PATCH',
                                headers: h,
                                body: JSON.stringify({
                                    "operacao": `${debitoOuCredito.value}`,
                                    "numeroConta": "51",
                                    "tipoConta": "Capital",
                                    "valor": `${valorConta.value}`,
                                    "data": `${diaHoje}`,
                                    "historico": `${historicoConta.value}`
                                })
                            });
                            fetch(pora)
                                .then(ress => ress.json())
                                .then(data5 => {
                                    console.log(data5);
                                    $('#novaSeleccaoInvestimentos').modal('hide');
                                    var m = new Date();
                                    var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                    const usuarioLogs = localStorage.getItem('usuario');
                                    const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                    let logs = new Request(urlLogs, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "nomeFuncionario": `${usuarioLogs}`,
                                            "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                            "data": `${dateString}`
                                        })
                                    });
                                    fetch(logs)
                                        .then(ress => ress.json())
                                        .then(data5Logs => {
                                            console.log(data5Logs)
                                        });
                                    planoDeContas();
                                })
                        }
                        if (grupo6.value == 'Acções ou Quotas Próprias') {
                            if (grupo35.value == 'Valor Nominas') {
                                console.log(grupo1.value)
                                console.log(grupo6.value)
                                console.log(grupo35.value)
                                console.log('5.2.1')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "521",
                                        "tipoConta": "Valor Nominas",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoInvestimentos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo35.value == 'Descontos e Prémios') {
                                console.log(grupo1.value)
                                console.log(grupo6.value)
                                console.log(grupo35.value)
                                console.log('5.2.2')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "522",
                                        "tipoConta": "Descontos e Prémios",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoInvestimentos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                        }
                        if (grupo6.value == 'Prestações Suplementares') {
                            console.log(grupo1.value)
                            console.log(grupo6.value)
                            console.log('5.3')
                            console.log(debitoOuCredito.value)
                            console.log(valorConta.value)
                            console.log(historicoConta.value)
                            console.log(diaHoje)
                            const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                            let pora = new Request(urlLogIn, {
                                method: 'PATCH',
                                headers: h,
                                body: JSON.stringify({
                                    "operacao": `${debitoOuCredito.value}`,
                                    "numeroConta": "53",
                                    "tipoConta": "Prestações Suplementares",
                                    "valor": `${valorConta.value}`,
                                    "data": `${diaHoje}`,
                                    "historico": `${historicoConta.value}`
                                })
                            });
                            fetch(pora)
                                .then(ress => ress.json())
                                .then(data5 => {
                                    console.log(data5);
                                    $('#novaSeleccaoInvestimentos').modal('hide');
                                    var m = new Date();
                                    var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                    const usuarioLogs = localStorage.getItem('usuario');
                                    const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                    let logs = new Request(urlLogs, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "nomeFuncionario": `${usuarioLogs}`,
                                            "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                            "data": `${dateString}`
                                        })
                                    });
                                    fetch(logs)
                                        .then(ress => ress.json())
                                        .then(data5Logs => {
                                            console.log(data5Logs)
                                        });
                                    planoDeContas();
                                })
                        }
                        if (grupo6.value == 'Prémios de Emissão de Acções ou Quotas') {
                            console.log(grupo1.value)
                            console.log(grupo6.value)
                            console.log('5.4')
                            console.log(debitoOuCredito.value)
                            console.log(valorConta.value)
                            console.log(historicoConta.value)
                            console.log(diaHoje)
                            const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                            let pora = new Request(urlLogIn, {
                                method: 'PATCH',
                                headers: h,
                                body: JSON.stringify({
                                    "operacao": `${debitoOuCredito.value}`,
                                    "numeroConta": "54",
                                    "tipoConta": "Prémios de Emissão de Acções ou Quotas",
                                    "valor": `${valorConta.value}`,
                                    "data": `${diaHoje}`,
                                    "historico": `${historicoConta.value}`
                                })
                            });
                            fetch(pora)
                                .then(ress => ress.json())
                                .then(data5 => {
                                    console.log(data5);
                                    $('#novaSeleccaoInvestimentos').modal('hide');
                                    var m = new Date();
                                    var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                    const usuarioLogs = localStorage.getItem('usuario');
                                    const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                    let logs = new Request(urlLogs, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "nomeFuncionario": `${usuarioLogs}`,
                                            "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                            "data": `${dateString}`
                                        })
                                    });
                                    fetch(logs)
                                        .then(ress => ress.json())
                                        .then(data5Logs => {
                                            console.log(data5Logs)
                                        });
                                    planoDeContas();
                                })
                        }
                        if (grupo6.value == 'Reservas') {
                            if (grupo36.value == 'Reservas Legais') {
                                console.log(grupo1.value)
                                console.log(grupo6.value)
                                console.log(grupo36.value)
                                console.log('5.5.1')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "551",
                                        "tipoConta": "Reservas Legais",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoInvestimentos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo36.value == 'Reservas Estatutárias') {
                                console.log(grupo1.value)
                                console.log(grupo6.value)
                                console.log(grupo36.value)
                                console.log('5.5.2')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "552",
                                        "tipoConta": "Reservas Estatutárias",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoInvestimentos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo36.value == 'Reservas Livres') {
                                console.log(grupo1.value)
                                console.log(grupo6.value)
                                console.log(grupo36.value)
                                console.log('5.5.3')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "553",
                                        "tipoConta": "Reservas Livres",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoInvestimentos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                        }
                        if (grupo6.value == ' Excedentes de Revalorização de Activos Tangíveis e Intangíveis') {
                            if (grupo37.value == 'Revalorizações Legais') {
                                if (grupo85.value == 'Antes de Impostos Diferidos') {
                                    console.log(grupo1.value)
                                    console.log(grupo6.value)
                                    console.log(grupo37.value)
                                    console.log(grupo85.value)
                                    console.log('5.6.1.1')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "5611",
                                            "tipoConta": "Antes de Impostos Diferidos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoInvestimentos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo85.value == 'Impostos Diferidos') {
                                    console.log(grupo1.value)
                                    console.log(grupo6.value)
                                    console.log(grupo37.value)
                                    console.log(grupo85.value)
                                    console.log('5.6.1.2')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "5612",
                                            "tipoConta": "Impostos Diferidos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoInvestimentos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo37.value == 'Outros Excessos') {
                                if (grupo86.value == 'Antes de Impostos Diferidos') {
                                    console.log(grupo1.value)
                                    console.log(grupo6.value)
                                    console.log(grupo37.value)
                                    console.log(grupo86.value)
                                    console.log('5.6.2.1')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "5621",
                                            "tipoConta": "Antes de Impostos Diferidos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoInvestimentos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo86.value == 'Impostos Diferidos') {
                                    console.log(grupo1.value)
                                    console.log(grupo6.value)
                                    console.log(grupo37.value)
                                    console.log(grupo86.value)
                                    console.log('5.6.2.2')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "5622",
                                            "tipoConta": "Impostos Diferidos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoInvestimentos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                        }
                        if (grupo6.value == 'Outras Variações no Capital Próprio') {
                            if (grupo38.value == 'Variações no Justo Valor de Instrumentos Financeiros Disponiveis Para Venda') {
                                console.log(grupo1.value)
                                console.log(grupo6.value)
                                console.log(grupo38.value)
                                console.log('5.8.1')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "581",
                                        "tipoConta": "Variações no Justo Valor de Instrumentos Financeiros Disponiveis Para Venda",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoInvestimentos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo38.value == 'Ajustamentos por Impostos Diferidos') {
                                console.log(grupo1.value)
                                console.log(grupo6.value)
                                console.log(grupo38.value)
                                console.log('5.8.2')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "582",
                                        "tipoConta": "Ajustamentos por Impostos Diferidos",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoInvestimentos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo38.value == 'Outras Variações') {
                                console.log(grupo1.value)
                                console.log(grupo6.value)
                                console.log(grupo38.value)
                                console.log('5.8.9')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "589",
                                        "tipoConta": "Outras Variações",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoInvestimentos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                        }
                        if (grupo6.value == 'Resultados Transitados') {
                            console.log(grupo1.value)
                            console.log(grupo6.value)
                            console.log('5.9')
                            console.log(debitoOuCredito.value)
                            console.log(valorConta.value)
                            console.log(historicoConta.value)
                            console.log(diaHoje)
                            const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                            let pora = new Request(urlLogIn, {
                                method: 'PATCH',
                                headers: h,
                                body: JSON.stringify({
                                    "operacao": `${debitoOuCredito.value}`,
                                    "numeroConta": "59",
                                    "tipoConta": "Resultados Transitados",
                                    "valor": `${valorConta.value}`,
                                    "data": `${diaHoje}`,
                                    "historico": `${historicoConta.value}`
                                })
                            });
                            fetch(pora)
                                .then(ress => ress.json())
                                .then(data5 => {
                                    console.log(data5);
                                    $('#novaSeleccaoInvestimentos').modal('hide');
                                    var m = new Date();
                                    var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                    const usuarioLogs = localStorage.getItem('usuario');
                                    const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                    let logs = new Request(urlLogs, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "nomeFuncionario": `${usuarioLogs}`,
                                            "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                            "data": `${dateString}`
                                        })
                                    });
                                    fetch(logs)
                                        .then(ress => ress.json())
                                        .then(data5Logs => {
                                            console.log(data5Logs)
                                        });
                                    planoDeContas();
                                })
                        }
                    });
                    adicionarAAContas.addEventListener('click', (e) => {
                        if (grupo5.value == 'Clientes') {
                            if (grupo26.value == 'Clientes c/c') {
                                console.log(grupo1.value)
                                console.log(grupo5.value)
                                console.log(grupo26.value)
                                console.log('4.1.1')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "411",
                                        "tipoConta": "Clientes c/c",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoContas').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo26.value == 'Clientes - Títulos a Receber') {
                                console.log(grupo1.value)
                                console.log(grupo5.value)
                                console.log(grupo26.value)
                                console.log('4.1.2')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "412",
                                        "tipoConta": "Clientes - Títulos a Receber",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoContas').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo26.value == 'Clientes de Cobrança Duvidosa') {
                                console.log(grupo1.value)
                                console.log(grupo5.value)
                                console.log(grupo26.value)
                                console.log('4.1.8')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "418",
                                        "tipoConta": "Clientes de Cobrança Duvidosa",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoContas').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo26.value == 'Adiamentos a Fornecedores') {
                                console.log(grupo1.value)
                                console.log(grupo5.value)
                                console.log(grupo26.value)
                                console.log('4.1.9')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "419",
                                        "tipoConta": "Adiamentos a Fornecedores",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoContas').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                        }
                        if (grupo5.value == 'Fornecedores') {
                            if (grupo27.value == 'Fornecedores c/c') {
                                console.log(grupo1.value)
                                console.log(grupo5.value)
                                console.log(grupo27.value)
                                console.log('4.2.1')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "421",
                                        "tipoConta": "Fornecedores c/c",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoContas').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo27.value == 'Fornecedores - Títulos a Pagar') {
                                console.log(grupo1.value)
                                console.log(grupo5.value)
                                console.log(grupo27.value)
                                console.log('4.2.2')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "422",
                                        "tipoConta": "Fornecedores - Títulos a Pagar",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoContas').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo27.value == 'Adiamentos a Fornecedores') {
                                console.log(grupo1.value)
                                console.log(grupo5.value)
                                console.log(grupo27.value)
                                console.log('4.2.9')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "429",
                                        "tipoConta": "Adiamentos a Fornecedores",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoContas').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }

                        }
                        if (grupo5.value == ' Empréstimos Obtidos') {
                            if (grupo28.value == 'Empréstimos Bancários') {
                                if (grupo63.value == 'De Curto Prazo') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo28.value)
                                    console.log(grupo63.value)
                                    console.log('4.3.1.1')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4311",
                                            "tipoConta": "De Curto Prazo",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo63.value == 'De Médio e Longo Prazo') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo28.value)
                                    console.log(grupo63.value)
                                    console.log('4.3.1.2')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4312",
                                            "tipoConta": "De Médio e Longo Prazo",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo28.value == 'Empréstimos Por Obrigações') {
                                if (grupo64.value == 'Convertíveis') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo28.value)
                                    console.log(grupo64.value)
                                    console.log('4.3.2.1')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4321",
                                            "tipoConta": "Convertíveis",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo64.value == 'Não Convertíveis') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo28.value)
                                    console.log(grupo64.value)
                                    console.log('4.3.2.2')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4322",
                                            "tipoConta": "Não Convertíveis",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo28.value == 'Empréstimos Por Títulos de Participação') {
                                console.log(grupo1.value)
                                console.log(grupo5.value)
                                console.log(grupo28.value)
                                console.log('4.3.3')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "433",
                                        "tipoConta": "Empréstimos Por Títulos de Participação",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoContas').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo28.value == 'Outros Empréstimos Obtidos') {
                                console.log(grupo1.value)
                                console.log(grupo5.value)
                                console.log(grupo28.value)
                                console.log('4.3.9')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "439",
                                        "tipoConta": "Outros Empréstimos Obtidos",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoContas').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                        }
                        if (grupo5.value == 'Estado') {
                            if (grupo29.value == 'Imposto Sobre o Rendimento') {
                                if (grupo65.value == 'Estimativa de Imposto') {
                                    console.log(grupo1.value)
                                    console.log(grupo4.value)
                                    console.log(grupo20.value)
                                    console.log(grupo65.value)
                                    console.log('4.4.1.1')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4411",
                                            "tipoConta": "Estimativa de Imposto",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo65.value == 'Pagamentos Por Conta') {
                                    console.log(grupo1.value)
                                    console.log(grupo4.value)
                                    console.log(grupo20.value)
                                    console.log(grupo65.value)
                                    console.log('4.4.1.2')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4412",
                                            "tipoConta": "Pagamentos Por Conta",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo65.value == 'Pagamento Especial Por Conta') {
                                    console.log(grupo1.value)
                                    console.log(grupo4.value)
                                    console.log(grupo20.value)
                                    console.log(grupo65.value)
                                    console.log('4.4.1.3')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4413",
                                            "tipoConta": "Pagamento Especial Por Conta",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo29.value == 'Impostos Retidos na Fonte') {
                                if (grupo66.value == 'Rendimentos de Trabalho Dependente') {
                                    console.log(grupo1.value)
                                    console.log(grupo4.value)
                                    console.log(grupo29.value)
                                    console.log(grupo66.value)
                                    console.log('4.4.2.1')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4421",
                                            "tipoConta": "Rendimentos de Trabalho Dependente",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo66.value == 'Rendimentos Profissionais') {
                                    console.log(grupo1.value)
                                    console.log(grupo4.value)
                                    console.log(grupo29.value)
                                    console.log(grupo66.value)
                                    console.log('4.4.2.2')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4422",
                                            "tipoConta": "Rendimentos Profissionais",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo66.value == 'Rendimentos do Capitais') {
                                    console.log(grupo1.value)
                                    console.log(grupo4.value)
                                    console.log(grupo29.value)
                                    console.log(grupo66.value)
                                    console.log('4.4.2.3')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4423",
                                            "tipoConta": "Rendimentos do Capitais",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo66.value == 'Rendimentos Prediais') {
                                    console.log(grupo1.value)
                                    console.log(grupo4.value)
                                    console.log(grupo29.value)
                                    console.log(grupo66.value)
                                    console.log('4.4.2.4')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4424",
                                            "tipoConta": "Rendimentos Prediais",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo66.value == 'Outros Rendimentos') {
                                    console.log(grupo1.value)
                                    console.log(grupo4.value)
                                    console.log(grupo29.value)
                                    console.log(grupo66.value)
                                    console.log('4.4.2.5')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4425",
                                            "tipoConta": "Outros Rendimentos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo29.value == 'Imposto Sobre o Valor Acrescentado') {
                                if (grupo67.value == 'IVA Suportado') {
                                    if (grupo68.value == 'Inventários') {
                                        console.log(grupo1.value)
                                        console.log(grupo5.value)
                                        console.log(grupo29.value)
                                        console.log(grupo67.value)
                                        console.log(grupo68.value)
                                        console.log('4.4.3.1.1')
                                        console.log(debitoOuCredito.value)
                                        console.log(valorConta.value)
                                        console.log(historicoConta.value)
                                        console.log(diaHoje)
                                        const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                        let pora = new Request(urlLogIn, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "operacao": `${debitoOuCredito.value}`,
                                                "numeroConta": "44311",
                                                "tipoConta": "Inventários",
                                                "valor": `${valorConta.value}`,
                                                "data": `${diaHoje}`,
                                                "historico": `${historicoConta.value}`
                                            })
                                        });
                                        fetch(pora)
                                            .then(ress => ress.json())
                                            .then(data5 => {
                                                console.log(data5);
                                                $('#novaSeleccaoContas').modal('hide');
                                                var m = new Date();
                                                var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                const usuarioLogs = localStorage.getItem('usuario');
                                                const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                let logs = new Request(urlLogs, {
                                                    method: 'PATCH',
                                                    headers: h,
                                                    body: JSON.stringify({
                                                        "nomeFuncionario": `${usuarioLogs}`,
                                                        "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                        "data": `${dateString}`
                                                    })
                                                });
                                                fetch(logs)
                                                    .then(ress => ress.json())
                                                    .then(data5Logs => {
                                                        console.log(data5Logs)
                                                    });
                                                planoDeContas();
                                            })
                                    }
                                    if (grupo68.value == 'Activos Tangíveis e Intangíveis') {
                                        console.log(grupo1.value)
                                        console.log(grupo5.value)
                                        console.log(grupo29.value)
                                        console.log(grupo67.value)
                                        console.log(grupo68.value)
                                        console.log('4.4.3.1.2')
                                        console.log(debitoOuCredito.value)
                                        console.log(valorConta.value)
                                        console.log(historicoConta.value)
                                        console.log(diaHoje)
                                        const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                        let pora = new Request(urlLogIn, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "operacao": `${debitoOuCredito.value}`,
                                                "numeroConta": "44312",
                                                "tipoConta": "Activos Tangíveis e Intangíveis",
                                                "valor": `${valorConta.value}`,
                                                "data": `${diaHoje}`,
                                                "historico": `${historicoConta.value}`
                                            })
                                        });
                                        fetch(pora)
                                            .then(ress => ress.json())
                                            .then(data5 => {
                                                console.log(data5);
                                                $('#novaSeleccaoContas').modal('hide');
                                                var m = new Date();
                                                var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                const usuarioLogs = localStorage.getItem('usuario');
                                                const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                let logs = new Request(urlLogs, {
                                                    method: 'PATCH',
                                                    headers: h,
                                                    body: JSON.stringify({
                                                        "nomeFuncionario": `${usuarioLogs}`,
                                                        "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                        "data": `${dateString}`
                                                    })
                                                });
                                                fetch(logs)
                                                    .then(ress => ress.json())
                                                    .then(data5Logs => {
                                                        console.log(data5Logs)
                                                    });
                                                planoDeContas();
                                            })
                                    }
                                    if (grupo68.value == 'Outros Bens e Serviços') {
                                        console.log(grupo1.value)
                                        console.log(grupo5.value)
                                        console.log(grupo29.value)
                                        console.log(grupo67.value)
                                        console.log(grupo68.value)
                                        console.log('4.4.3.1.3')
                                        console.log(debitoOuCredito.value)
                                        console.log(valorConta.value)
                                        console.log(historicoConta.value)
                                        console.log(diaHoje)
                                        const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                        let pora = new Request(urlLogIn, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "operacao": `${debitoOuCredito.value}`,
                                                "numeroConta": "44313",
                                                "tipoConta": "Outros Bens e Serviços",
                                                "valor": `${valorConta.value}`,
                                                "data": `${diaHoje}`,
                                                "historico": `${historicoConta.value}`
                                            })
                                        });
                                        fetch(pora)
                                            .then(ress => ress.json())
                                            .then(data5 => {
                                                console.log(data5);
                                                $('#novaSeleccaoContas').modal('hide');
                                                var m = new Date();
                                                var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                const usuarioLogs = localStorage.getItem('usuario');
                                                const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                let logs = new Request(urlLogs, {
                                                    method: 'PATCH',
                                                    headers: h,
                                                    body: JSON.stringify({
                                                        "nomeFuncionario": `${usuarioLogs}`,
                                                        "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                        "data": `${dateString}`
                                                    })
                                                });
                                                fetch(logs)
                                                    .then(ress => ress.json())
                                                    .then(data5Logs => {
                                                        console.log(data5Logs)
                                                    });
                                                planoDeContas();
                                            })
                                    }
                                }
                                if (grupo67.value == 'IVA Redutível') {
                                    if (grupo67.value == 'Inventários') {
                                        console.log(grupo1.value)
                                        console.log(grupo5.value)
                                        console.log(grupo29.value)
                                        console.log(grupo67.value)
                                        console.log(grupo69.value)
                                        console.log('4.4.3.2.1')
                                        console.log(debitoOuCredito.value)
                                        console.log(valorConta.value)
                                        console.log(historicoConta.value)
                                        console.log(diaHoje)
                                        const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                        let pora = new Request(urlLogIn, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "operacao": `${debitoOuCredito.value}`,
                                                "numeroConta": "44321",
                                                "tipoConta": "Inventários",
                                                "valor": `${valorConta.value}`,
                                                "data": `${diaHoje}`,
                                                "historico": `${historicoConta.value}`
                                            })
                                        });
                                        fetch(pora)
                                            .then(ress => ress.json())
                                            .then(data5 => {
                                                console.log(data5);
                                                $('#novaSeleccaoContas').modal('hide');
                                                var m = new Date();
                                                var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                const usuarioLogs = localStorage.getItem('usuario');
                                                const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                let logs = new Request(urlLogs, {
                                                    method: 'PATCH',
                                                    headers: h,
                                                    body: JSON.stringify({
                                                        "nomeFuncionario": `${usuarioLogs}`,
                                                        "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                        "data": `${dateString}`
                                                    })
                                                });
                                                fetch(logs)
                                                    .then(ress => ress.json())
                                                    .then(data5Logs => {
                                                        console.log(data5Logs)
                                                    });
                                                planoDeContas();
                                            })
                                    }
                                    if (grupo67.value == 'Activos Tangíveis e Intangíveis') {
                                        console.log(grupo1.value)
                                        console.log(grupo5.value)
                                        console.log(grupo29.value)
                                        console.log(grupo67.value)
                                        console.log(grupo69.value)
                                        console.log('4.4.3.2.2')
                                        console.log(debitoOuCredito.value)
                                        console.log(valorConta.value)
                                        console.log(historicoConta.value)
                                        console.log(diaHoje)
                                        const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                        let pora = new Request(urlLogIn, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "operacao": `${debitoOuCredito.value}`,
                                                "numeroConta": "44322",
                                                "tipoConta": "Activos Tangíveis e Intangíveis",
                                                "valor": `${valorConta.value}`,
                                                "data": `${diaHoje}`,
                                                "historico": `${historicoConta.value}`
                                            })
                                        });
                                        fetch(pora)
                                            .then(ress => ress.json())
                                            .then(data5 => {
                                                console.log(data5);
                                                $('#novaSeleccaoContas').modal('hide');
                                                var m = new Date();
                                                var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                const usuarioLogs = localStorage.getItem('usuario');
                                                const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                let logs = new Request(urlLogs, {
                                                    method: 'PATCH',
                                                    headers: h,
                                                    body: JSON.stringify({
                                                        "nomeFuncionario": `${usuarioLogs}`,
                                                        "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                        "data": `${dateString}`
                                                    })
                                                });
                                                fetch(logs)
                                                    .then(ress => ress.json())
                                                    .then(data5Logs => {
                                                        console.log(data5Logs)
                                                    });
                                                planoDeContas();
                                            })
                                    }
                                    if (grupo67.value == 'Outros Bens e Serviços') {
                                        console.log(grupo1.value)
                                        console.log(grupo5.value)
                                        console.log(grupo29.value)
                                        console.log(grupo67.value)
                                        console.log(grupo69.value)
                                        console.log('4.4.3.2.3')
                                        console.log(debitoOuCredito.value)
                                        console.log(valorConta.value)
                                        console.log(historicoConta.value)
                                        console.log(diaHoje)
                                        const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                        let pora = new Request(urlLogIn, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "operacao": `${debitoOuCredito.value}`,
                                                "numeroConta": "44323",
                                                "tipoConta": "Outros Bens e Serviços",
                                                "valor": `${valorConta.value}`,
                                                "data": `${diaHoje}`,
                                                "historico": `${historicoConta.value}`
                                            })
                                        });
                                        fetch(pora)
                                            .then(ress => ress.json())
                                            .then(data5 => {
                                                console.log(data5);
                                                $('#novaSeleccaoContas').modal('hide');
                                                var m = new Date();
                                                var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                const usuarioLogs = localStorage.getItem('usuario');
                                                const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                let logs = new Request(urlLogs, {
                                                    method: 'PATCH',
                                                    headers: h,
                                                    body: JSON.stringify({
                                                        "nomeFuncionario": `${usuarioLogs}`,
                                                        "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                        "data": `${dateString}`
                                                    })
                                                });
                                                fetch(logs)
                                                    .then(ress => ress.json())
                                                    .then(data5Logs => {
                                                        console.log(data5Logs)
                                                    });
                                                planoDeContas();
                                            })
                                    }
                                }
                                if (grupo67.value == 'IVA Liquido') {
                                    if (grupo70.value == 'Operações Gerais') {
                                        console.log(grupo1.value)
                                        console.log(grupo5.value)
                                        console.log(grupo29.value)
                                        console.log(grupo67.value)
                                        console.log(grupo70.value)
                                        console.log('4.4.3.3.1')
                                        console.log(debitoOuCredito.value)
                                        console.log(valorConta.value)
                                        console.log(historicoConta.value)
                                        console.log(diaHoje)
                                        const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                        let pora = new Request(urlLogIn, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "operacao": `${debitoOuCredito.value}`,
                                                "numeroConta": "44331",
                                                "tipoConta": "Operações Gerais",
                                                "valor": `${valorConta.value}`,
                                                "data": `${diaHoje}`,
                                                "historico": `${historicoConta.value}`
                                            })
                                        });
                                        fetch(pora)
                                            .then(ress => ress.json())
                                            .then(data5 => {
                                                console.log(data5);
                                                $('#novaSeleccaoContas').modal('hide');
                                                var m = new Date();
                                                var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                const usuarioLogs = localStorage.getItem('usuario');
                                                const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                let logs = new Request(urlLogs, {
                                                    method: 'PATCH',
                                                    headers: h,
                                                    body: JSON.stringify({
                                                        "nomeFuncionario": `${usuarioLogs}`,
                                                        "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                        "data": `${dateString}`
                                                    })
                                                });
                                                fetch(logs)
                                                    .then(ress => ress.json())
                                                    .then(data5Logs => {
                                                        console.log(data5Logs)
                                                    });
                                                planoDeContas();
                                            })
                                    }
                                    if (grupo70.value == 'Autoconsumos e Operações Gratuitas') {
                                        console.log(grupo1.value)
                                        console.log(grupo5.value)
                                        console.log(grupo29.value)
                                        console.log(grupo67.value)
                                        console.log(grupo70.value)
                                        console.log('4.4.3.3.2')
                                        console.log(debitoOuCredito.value)
                                        console.log(valorConta.value)
                                        console.log(historicoConta.value)
                                        console.log(diaHoje)
                                        const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                        let pora = new Request(urlLogIn, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "operacao": `${debitoOuCredito.value}`,
                                                "numeroConta": "44332",
                                                "tipoConta": "Autoconsumos e Operações Gratuitas",
                                                "valor": `${valorConta.value}`,
                                                "data": `${diaHoje}`,
                                                "historico": `${historicoConta.value}`
                                            })
                                        });
                                        fetch(pora)
                                            .then(ress => ress.json())
                                            .then(data5 => {
                                                console.log(data5);
                                                $('#novaSeleccaoContas').modal('hide');
                                                var m = new Date();
                                                var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                const usuarioLogs = localStorage.getItem('usuario');
                                                const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                let logs = new Request(urlLogs, {
                                                    method: 'PATCH',
                                                    headers: h,
                                                    body: JSON.stringify({
                                                        "nomeFuncionario": `${usuarioLogs}`,
                                                        "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                        "data": `${dateString}`
                                                    })
                                                });
                                                fetch(logs)
                                                    .then(ress => ress.json())
                                                    .then(data5Logs => {
                                                        console.log(data5Logs)
                                                    });
                                                planoDeContas();
                                            })
                                    }
                                    if (grupo70.value == 'Operações Especiais') {
                                        console.log(grupo1.value)
                                        console.log(grupo5.value)
                                        console.log(grupo29.value)
                                        console.log(grupo67.value)
                                        console.log(grupo70.value)
                                        console.log('4.4.3.3.3')
                                        console.log(debitoOuCredito.value)
                                        console.log(valorConta.value)
                                        console.log(historicoConta.value)
                                        console.log(diaHoje)
                                        const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                        let pora = new Request(urlLogIn, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "operacao": `${debitoOuCredito.value}`,
                                                "numeroConta": "44333",
                                                "tipoConta": "Operações Especiais",
                                                "valor": `${valorConta.value}`,
                                                "data": `${diaHoje}`,
                                                "historico": `${historicoConta.value}`
                                            })
                                        });
                                        fetch(pora)
                                            .then(ress => ress.json())
                                            .then(data5 => {
                                                console.log(data5);
                                                $('#novaSeleccaoContas').modal('hide');
                                                var m = new Date();
                                                var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                const usuarioLogs = localStorage.getItem('usuario');
                                                const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                let logs = new Request(urlLogs, {
                                                    method: 'PATCH',
                                                    headers: h,
                                                    body: JSON.stringify({
                                                        "nomeFuncionario": `${usuarioLogs}`,
                                                        "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                        "data": `${dateString}`
                                                    })
                                                });
                                                fetch(logs)
                                                    .then(ress => ress.json())
                                                    .then(data5Logs => {
                                                        console.log(data5Logs)
                                                    });
                                                planoDeContas();
                                            })
                                    }

                                }
                                if (grupo67.value == 'IVA Regularizações') {
                                    if (grupo71.value == 'Mensais a Favor do Sujeito Passivo') {
                                        console.log(grupo1.value)
                                        console.log(grupo5.value)
                                        console.log(grupo29.value)
                                        console.log(grupo67.value)
                                        console.log(grupo71.value)
                                        console.log('4.4.3.4.1')
                                        console.log(debitoOuCredito.value)
                                        console.log(valorConta.value)
                                        console.log(historicoConta.value)
                                        console.log(diaHoje)
                                        const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                        let pora = new Request(urlLogIn, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "operacao": `${debitoOuCredito.value}`,
                                                "numeroConta": "44341",
                                                "tipoConta": "Mensais a Favor do Sujeito Passivo",
                                                "valor": `${valorConta.value}`,
                                                "data": `${diaHoje}`,
                                                "historico": `${historicoConta.value}`
                                            })
                                        });
                                        fetch(pora)
                                            .then(ress => ress.json())
                                            .then(data5 => {
                                                console.log(data5);
                                                $('#novaSeleccaoContas').modal('hide');
                                                var m = new Date();
                                                var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                const usuarioLogs = localStorage.getItem('usuario');
                                                const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                let logs = new Request(urlLogs, {
                                                    method: 'PATCH',
                                                    headers: h,
                                                    body: JSON.stringify({
                                                        "nomeFuncionario": `${usuarioLogs}`,
                                                        "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                        "data": `${dateString}`
                                                    })
                                                });
                                                fetch(logs)
                                                    .then(ress => ress.json())
                                                    .then(data5Logs => {
                                                        console.log(data5Logs)
                                                    });
                                                planoDeContas();
                                            })
                                    }
                                    if (grupo71.value == 'Mensais a Favor do Estado') {
                                        console.log(grupo1.value)
                                        console.log(grupo5.value)
                                        console.log(grupo29.value)
                                        console.log(grupo67.value)
                                        console.log(grupo71.value)
                                        console.log('4.4.3.4.2')
                                        console.log(debitoOuCredito.value)
                                        console.log(valorConta.value)
                                        console.log(historicoConta.value)
                                        console.log(diaHoje)
                                        const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                        let pora = new Request(urlLogIn, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "operacao": `${debitoOuCredito.value}`,
                                                "numeroConta": "44342",
                                                "tipoConta": "Mensais a Favor do Estado",
                                                "valor": `${valorConta.value}`,
                                                "data": `${diaHoje}`,
                                                "historico": `${historicoConta.value}`
                                            })
                                        });
                                        fetch(pora)
                                            .then(ress => ress.json())
                                            .then(data5 => {
                                                console.log(data5);
                                                $('#novaSeleccaoContas').modal('hide');
                                                var m = new Date();
                                                var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                const usuarioLogs = localStorage.getItem('usuario');
                                                const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                let logs = new Request(urlLogs, {
                                                    method: 'PATCH',
                                                    headers: h,
                                                    body: JSON.stringify({
                                                        "nomeFuncionario": `${usuarioLogs}`,
                                                        "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                        "data": `${dateString}`
                                                    })
                                                });
                                                fetch(logs)
                                                    .then(ress => ress.json())
                                                    .then(data5Logs => {
                                                        console.log(data5Logs)
                                                    });
                                                planoDeContas();
                                            })
                                    }
                                    if (grupo71.value == 'Anuais Por Cálculo do Pro Rota Definitivo') {
                                        console.log(grupo1.value)
                                        console.log(grupo5.value)
                                        console.log(grupo29.value)
                                        console.log(grupo67.value)
                                        console.log(grupo71.value)
                                        console.log('4.4.3.4.3')
                                        console.log(debitoOuCredito.value)
                                        console.log(valorConta.value)
                                        console.log(historicoConta.value)
                                        console.log(diaHoje)
                                        const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                        let pora = new Request(urlLogIn, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "operacao": `${debitoOuCredito.value}`,
                                                "numeroConta": "44343",
                                                "tipoConta": "Anuais Por Cálculo do Pro Rota Definitivo",
                                                "valor": `${valorConta.value}`,
                                                "data": `${diaHoje}`,
                                                "historico": `${historicoConta.value}`
                                            })
                                        });
                                        fetch(pora)
                                            .then(ress => ress.json())
                                            .then(data5 => {
                                                console.log(data5);
                                                $('#novaSeleccaoContas').modal('hide');
                                                var m = new Date();
                                                var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                const usuarioLogs = localStorage.getItem('usuario');
                                                const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                let logs = new Request(urlLogs, {
                                                    method: 'PATCH',
                                                    headers: h,
                                                    body: JSON.stringify({
                                                        "nomeFuncionario": `${usuarioLogs}`,
                                                        "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                        "data": `${dateString}`
                                                    })
                                                });
                                                fetch(logs)
                                                    .then(ress => ress.json())
                                                    .then(data5Logs => {
                                                        console.log(data5Logs)
                                                    });
                                                planoDeContas();
                                            })
                                    }
                                }
                                if (grupo67.value == 'IVA Apuramento') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo29.value)
                                    console.log(grupo67.value)
                                    console.log('4.4.3.5')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4435",
                                            "tipoConta": "IVA Apuramento",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo67.value == 'IVA Liquidações Oficiosas') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo29.value)
                                    console.log(grupo67.value)
                                    console.log('4.4.3.6')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4436",
                                            "tipoConta": "IVA Liquidações Oficiosas",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo67.value == 'IVA a Pagar') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo29.value)
                                    console.log(grupo67.value)
                                    console.log('4.4.3.7')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4437",
                                            "tipoConta": "IVA a Pagar",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo67.value == 'IVA a Recuparar') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo29.value)
                                    console.log(grupo67.value)
                                    console.log('4.4.3.8')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4438",
                                            "tipoConta": "IVA a Recuparar",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo67.value == 'IVA Reembolsos Pedidos') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo29.value)
                                    console.log(grupo67.value)
                                    console.log('4.4.3.9')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4439",
                                            "tipoConta": "IVA Reembolsos Pedidos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo29.value == 'Restantes Impostos') {
                                if (grupo72.value == 'Imposto de Selo') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo29.value)
                                    console.log(grupo72.value)
                                    console.log('4.4.4.1')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4441",
                                            "tipoConta": "Imposto de Selo",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo72.value == 'Impostos Autárquicos') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo29.value)
                                    console.log(grupo72.value)
                                    console.log('4.4.4.2')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4442",
                                            "tipoConta": "Impostos Autárquicos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo29.value == 'Rectificação de Impostos, Contribuições e Outros Tributos') {
                                console.log(grupo1.value)
                                console.log(grupo5.value)
                                console.log(grupo29.value)
                                console.log('4.4.5')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "445",
                                        "tipoConta": "Rectificação de Impostos, Contribuições e Outros Tributos",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoContas').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo29.value == 'Impostos Diferidos') {
                                if (grupo73.value == 'Activos Por Impostos Diferidos') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo29.value)
                                    console.log(grupo73.value)
                                    console.log('4.4.6.1')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4461",
                                            "tipoConta": "Activos Por Impostos Diferidos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo73.value == 'Passivos Por Impostos Diferidos') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo29.value)
                                    console.log(grupo73.value)
                                    console.log('4.4.6.2')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4462",
                                            "tipoConta": "Passivos Por Impostos Diferidos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo29.value == 'Contribuições para o INSS') {
                                console.log(grupo1.value)
                                console.log(grupo5.value)
                                console.log(grupo29.value)
                                console.log('4.4.9')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "449",
                                        "tipoConta": "Contribuições para o INSS",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoContas').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                        }
                        if (grupo5.value == 'Outros Devedores') {
                            if (grupo30.value == 'Pessoal') {
                                if (grupo74.value == 'Adintamentos aos Órgãos Sociais') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo30.value)
                                    console.log(grupo74.value)
                                    console.log('4.5.1.1')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4511",
                                            "tipoConta": "Adintamentos aos Órgãos Sociais",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo74.value == 'Adintamentos aos Trabalhadores') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo30.value)
                                    console.log(grupo74.value)
                                    console.log('4.5.1.2')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4512",
                                            "tipoConta": "Adintamentos aos Trabalhadores",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo74.value == 'Benefícios Pós-Emprego') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo30.value)
                                    console.log(grupo74.value)
                                    console.log('4.5.1.3')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4513",
                                            "tipoConta": "Benefícios Pós-Emprego",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo74.value == 'Outras Operações com Órgãos Sociais') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo30.value)
                                    console.log(grupo74.value)
                                    console.log('4.5.1.8')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4518",
                                            "tipoConta": "Outras Operações com Órgãos Sociais",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo74.value == 'Outras Operações com Trabalhadores') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo30.value)
                                    console.log(grupo74.value)
                                    console.log('4.5.1.9')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4519",
                                            "tipoConta": "Outras Operações com Trabalhadores",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo30.value == 'Subcritores de Capital') {
                                if (grupo75.value == 'Estado e Outros Organismos Públicos') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo30.value)
                                    console.log(grupo75.value)
                                    console.log('4.5.2.1')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4521",
                                            "tipoConta": "Estado e Outros Organismos Públicos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo75.value == 'Entidades Privadas') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo30.value)
                                    console.log(grupo75.value)
                                    console.log('4.5.2.2')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4522",
                                            "tipoConta": "Entidades Privadas",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo75.value == 'Outras Entidades') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo30.value)
                                    console.log(grupo75.value)
                                    console.log('4.5.2.9')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4529",
                                            "tipoConta": "Outras Entidades",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo30.value == 'Obrigacionistas') {
                                console.log(grupo1.value)
                                console.log(grupo5.value)
                                console.log(grupo30.value)
                                console.log('4.5.3')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "453",
                                        "tipoConta": "Obrigacionistas",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoContas').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo30.value == 'Devedores - Sócios, Accionistas ou Proprietarios') {
                                if (grupo76.value == 'Empréstimos Concedidos') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo30.value)
                                    console.log(grupo76.value)
                                    console.log('4.5.4.1')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4541",
                                            "tipoConta": "Empréstimos Concedidos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo76.value == 'Adiantamento por Conta de Lucros') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo30.value)
                                    console.log(grupo76.value)
                                    console.log('4.5.4.2')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4542",
                                            "tipoConta": "Adiantamento por Conta de Lucros",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo76.value == 'Resultados Atribuídos') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo30.value)
                                    console.log(grupo76.value)
                                    console.log('4.5.4.3')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4543",
                                            "tipoConta": "Resultados Atribuídos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo76.value == 'Lucros Disponíveis') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo30.value)
                                    console.log(grupo76.value)
                                    console.log('4.5.4.4')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4544",
                                            "tipoConta": "Lucros Disponíveis",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo76.value == 'Outras Operações') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo30.value)
                                    console.log(grupo76.value)
                                    console.log('4.5.4.9')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4549",
                                            "tipoConta": "Outras Operações",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo30.value == 'Subsídios a Receber') {
                                if (grupo77.value == 'Estado e Outros Organismos Públicos') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo30.value)
                                    console.log(grupo77.value)
                                    console.log('4.5.5.1')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4551",
                                            "tipoConta": "Estado e Outros Organismos Públicos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo77.value == 'Entidades Privadas') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo30.value)
                                    console.log(grupo77.value)
                                    console.log('4.5.5.2')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4552",
                                            "tipoConta": "Entidades Privadas",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo30.value == 'Devedores Diversos') {
                                console.log(grupo1.value)
                                console.log(grupo5.value)
                                console.log(grupo30.value)
                                console.log('4.5.9')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "459",
                                        "tipoConta": "Devedores Diversos",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoContas').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                        }
                        if (grupo5.value == 'Outros Credores') {
                            if (grupo31.value == 'Fornecedores de Investimentos de Capital') {
                                if (grupo78.value == 'Fornecedores de Investimentos de Capital c/c') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo31.value)
                                    console.log(grupo78.value)
                                    console.log('4.6.1.1')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4611",
                                            "tipoConta": "Fornecedores de Investimentos de Capital c/c",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo78.value == 'Fornecedores de Investimentos de Capital - Títulos a Pagar') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo31.value)
                                    console.log(grupo78.value)
                                    console.log('4.6.1.2')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4612",
                                            "tipoConta": "Fornecedores de Investimentos de Capital - Títulos a Pagar",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo78.value == 'Fornecedores de Investimentos de Capital - Adiantamentos') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo31.value)
                                    console.log(grupo78.value)
                                    console.log('4.6.1.3')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4613",
                                            "tipoConta": "Fornecedores de Investimentos de Capital - Adiantamentos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo78.value == 'Fornecedores de Investimentos de Capital - Locação Financeira') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo31.value)
                                    console.log(grupo78.value)
                                    console.log('4.6.1.4')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4614",
                                            "tipoConta": "Fornecedores de Investimentos de Capital - Locação Financeira",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo78.value == 'Outras Operações') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo31.value)
                                    console.log(grupo78.value)
                                    console.log('4.6.1.9')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4619",
                                            "tipoConta": "Outras Operações",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo31.value == 'Pessoal') {
                                if (grupo79.value == 'Remunarações a Pagar aos Órgãos Sociais') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo31.value)
                                    console.log(grupo79.value)
                                    console.log('4.6.2.1')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4621",
                                            "tipoConta": "Remunarações a Pagar aos Órgãos Sociais",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo79.value == 'Remunarações a Pagar aos Trabalhadores') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo31.value)
                                    console.log(grupo79.value)
                                    console.log('4.6.2.2')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4622",
                                            "tipoConta": "Remunarações a Pagar aos Trabalhadores",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo79.value == 'Benefícios Pós-Emprego') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo31.value)
                                    console.log(grupo79.value)
                                    console.log('4.6.2.3')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4623",
                                            "tipoConta": "Benefícios Pós-Emprego",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo79.value == 'Outras Operações Com os Órgãos Sociais') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo31.value)
                                    console.log(grupo79.value)
                                    console.log('4.6.2.8')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4628",
                                            "tipoConta": "Outras Operações Com os Órgãos Sociais",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo79.value == 'Outras Operações Com os Trabalhadores') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo31.value)
                                    console.log(grupo79.value)
                                    console.log('4.6.2.9')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4629",
                                            "tipoConta": "Outras Operações Com os Trabalhadores",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo31.value == 'Sindicatos') {
                                console.log(grupo1.value)
                                console.log(grupo5.value)
                                console.log(grupo31.value)
                                console.log('4.6.3')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "463",
                                        "tipoConta": "Sindicatos",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoContas').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo31.value == 'Credores Por Subscrições não Liberadas') {
                                console.log(grupo1.value)
                                console.log(grupo5.value)
                                console.log(grupo31.value)
                                console.log('4.6.4')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "464",
                                        "tipoConta": "Credores Por Subscrições não Liberadas",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoContas').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })

                            }
                            if (grupo31.value == 'Obrigacionistas') {
                                console.log(grupo1.value)
                                console.log(grupo5.value)
                                console.log(grupo31.value)
                                console.log('4.6.5')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "465",
                                        "tipoConta": "Obrigacionistas",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoContas').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo31.value == 'Consultores, Assessores e Intermediários') {
                                console.log(grupo1.value)
                                console.log(grupo5.value)
                                console.log(grupo31.value)
                                console.log('4.6.6')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "466",
                                        "tipoConta": "Consultores, Assessores e Intermediários",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoContas').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo31.value == 'Credores - Sócios, Accionistas ou Proprietários') {
                                if (grupo80.value == 'Empréstimos Obtidos') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo31.value)
                                    console.log(grupo80.value)
                                    console.log('4.6.7.1')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4671",
                                            "tipoConta": "Empréstimos Obtidos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo80.value == 'Resultados Atribuídos') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo31.value)
                                    console.log(grupo80.value)
                                    console.log('4.6.7.3')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4673",
                                            "tipoConta": "Resultados Atribuídos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo80.value == 'Lucros Disponíveis') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo31.value)
                                    console.log(grupo80.value)
                                    console.log('4.6.7.4')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4674",
                                            "tipoConta": "Lucros Disponíveis",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo31.value == 'Credores Diversos') {
                                console.log(grupo1.value)
                                console.log(grupo5.value)
                                console.log(grupo31.value)
                                console.log('4.6.9')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "469",
                                        "tipoConta": "Credores Diversos",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoContas').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                        }
                        if (grupo5.value == 'Perdas por Imparidade Acumuladas de Contas a Receber') {
                            if (grupo32.value == 'Clientes') {
                                console.log(grupo1.value)
                                console.log(grupo5.value)
                                console.log(grupo32.value)
                                console.log('4.7.1')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "471",
                                        "tipoConta": "Clientes",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoContas').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo32.value == 'Outros Devedores') {
                                console.log(grupo1.value)
                                console.log(grupo5.value)
                                console.log(grupo32.value)
                                console.log('4.7.2')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "472",
                                        "tipoConta": "Outros Devedores",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoContas').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                        }
                        if (grupo5.value == 'Provisões') {
                            if (grupo33.value == 'Processos Judiciais em Curso') {
                                console.log(grupo1.value)
                                console.log(grupo5.value)
                                console.log(grupo33.value)
                                console.log('4.8.1')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "481",
                                        "tipoConta": "Processos Judiciais em Curso",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoContas').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo33.value == 'Acidentes no Trabalho e Doenças Profissionais') {
                                console.log(grupo1.value)
                                console.log(grupo5.value)
                                console.log(grupo33.value)
                                console.log('4.8.2')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "482",
                                        "tipoConta": "Acidentes no Trabalho e Doenças Profissionais",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoContas').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo33.value == 'Impostos') {
                                console.log(grupo1.value)
                                console.log(grupo5.value)
                                console.log(grupo33.value)
                                console.log('4.8.3')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "483",
                                        "tipoConta": "Impostos",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoContas').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo33.value == 'Reestruturação de Negócios') {
                                console.log(grupo1.value)
                                console.log(grupo5.value)
                                console.log(grupo33.value)
                                console.log('4.8.4')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "484",
                                        "tipoConta": "Reestruturação de Negócios",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoContas').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo33.value == 'Contratos Onerosos') {
                                console.log(grupo1.value)
                                console.log(grupo5.value)
                                console.log(grupo33.value)
                                console.log('4.8.5')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "485",
                                        "tipoConta": "Contratos Onerosos",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoContas').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo33.value == 'Garantias a Clintes') {
                                console.log(grupo1.value)
                                console.log(grupo5.value)
                                console.log(grupo33.value)
                                console.log('4.8.6')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "486",
                                        "tipoConta": "Garantias a Clintes",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoContas').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo33.value == 'Perdas em Contratos de Construção') {
                                console.log(grupo1.value)
                                console.log(grupo5.value)
                                console.log(grupo33.value)
                                console.log('4.8.7')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "487",
                                        "tipoConta": "Perdas em Contratos de Construção",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoContas').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo33.value == 'Outras Provisões') {
                                console.log(grupo1.value)
                                console.log(grupo5.value)
                                console.log(grupo33.value)
                                console.log('4.8.9')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "489",
                                        "tipoConta": "Outras Provisões",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoContas').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }

                        }
                        if (grupo5.value == 'Acréscimos e Diferimentos') {
                            if (grupo34.value == 'Créscimos de Gastos') {
                                if (grupo81.value == 'Juros a Pagar') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo34.value)
                                    console.log(grupo81.value)
                                    console.log('4.9.1.1')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4911",
                                            "tipoConta": "Juros a Pagar",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo81.value == 'Remunerações a Pagar') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo34.value)
                                    console.log(grupo81.value)
                                    console.log('4.9.1.2')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4912",
                                            "tipoConta": "Remunerações a Pagar",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo81.value == 'Outros Acréscimos de Gastos') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo34.value)
                                    console.log(grupo81.value)
                                    console.log('4.9.1.9')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4919",
                                            "tipoConta": "Outros Acréscimos de Gastos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo34.value == 'Rendimentos Diferidos') {
                                if (grupo82.value == 'Prémios de Emissão de Obrigações') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo34.value)
                                    console.log(grupo82.value)
                                    console.log('4.9.2.1')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4921",
                                            "tipoConta": "Prémios de Emissão de Obrigações",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo82.value == 'Prémios de Emissão de Títulos de Participação') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo34.value)
                                    console.log(grupo82.value)
                                    console.log('4.9.2.2')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4922",
                                            "tipoConta": "Prémios de Emissão de Títulos de Participação",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo82.value == 'Réditos de Contratos de Construção') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo34.value)
                                    console.log(grupo82.value)
                                    console.log('4.9.2.3')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4923",
                                            "tipoConta": "Réditos de Contratos de Construção",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo82.value == 'Subsídios para Investimentos') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo34.value)
                                    console.log(grupo82.value)
                                    console.log('4.9.2.4')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4924",
                                            "tipoConta": "Subsídios para Investimentos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo82.value == 'Outros Rendimentos Diferidos') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo34.value)
                                    console.log(grupo82.value)
                                    console.log('4.9.2.9')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4929",
                                            "tipoConta": "Outros Rendimentos Diferidos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo34.value == 'Créscimos de Rendimentos') {
                                if (grupo83.value == 'Juros a Receber') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo34.value)
                                    console.log(grupo83.value)
                                    console.log('4.9.3.1')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4931",
                                            "tipoConta": "Juros a Receber",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo83.value == 'Réditos de Contratos de Construção') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo34.value)
                                    console.log(grupo83.value)
                                    console.log('4.9.3.3')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4933",
                                            "tipoConta": "Réditos de Contratos de Construção",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo83.value == 'Outros Acréscimos de Rendimentos') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo34.value)
                                    console.log(grupo83.value)
                                    console.log('4.9.3.9')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4939",
                                            "tipoConta": "Outros Acréscimos de Rendimentos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo34.value == 'Gastos Diferidos') {
                                if (grupo84.value == 'Desconto de Emissão de Obrigações') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo34.value)
                                    console.log(grupo84.value)
                                    console.log('4.9.4.1')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4941",
                                            "tipoConta": "Desconto de Emissão de Obrigações",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo84.value == 'Desconto de Emissão de Títulos de Participação') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo34.value)
                                    console.log(grupo84.value)
                                    console.log('4.9.4.2')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4942",
                                            "tipoConta": "Desconto de Emissão de Títulos de Participação",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo84.value == 'Outros Gastos Diferidos') {
                                    console.log(grupo1.value)
                                    console.log(grupo5.value)
                                    console.log(grupo34.value)
                                    console.log(grupo84.value)
                                    console.log('4.9.4.9')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "4949",
                                            "tipoConta": "Outros Gastos Diferidos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoContas').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }

                        }
                    });
                    adicionarAAInvestimentos.addEventListener('click', (e) => {
                        if (grupo4.value == 'Investimentos Financeiros') {
                            if (grupo20.value == 'Investimentos em Subsidiárias') {
                                console.log(grupo1.value)
                                console.log(grupo4.value)
                                console.log(grupo20.value)
                                console.log('3.1.1')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "311",
                                        "tipoConta": "Investimentos em Subsidiárias",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoCapitalww').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo20.value == 'Investimentos em Associadas') {
                                console.log(grupo1.value)
                                console.log(grupo4.value)
                                console.log(grupo20.value)
                                console.log('3.1.2')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "312",
                                        "tipoConta": "Investimentos em Associadas",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoCapitalww').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo20.value == 'Investimentos em Entidades Conjuntamente Controladas') {
                                console.log(grupo1.value)
                                console.log(grupo4.value)
                                console.log(grupo20.value)
                                console.log('3.1.3')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "313",
                                        "tipoConta": "Investimentos em Entidades Conjuntamente Controladas",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoCapitalww').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo20.value == 'Outros Envestimentos Financeiros') {
                                console.log(grupo1.value)
                                console.log(grupo4.value)
                                console.log(grupo20.value)
                                console.log('3.1.4')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "314",
                                        "tipoConta": "Outros Envestimentos Financeiros",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoCapitalww').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo20.value == 'Investimentos Detidos Até à Maturidade') {
                                console.log(grupo1.value)
                                console.log(grupo4.value)
                                console.log(grupo20.value)
                                console.log('3.1.5')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "315",
                                        "tipoConta": "Investimentos Detidos Até à Maturidade",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoCapitalww').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo20.value == 'Outros Investimentos Disponíveis Para Venda') {
                                console.log(grupo1.value)
                                console.log(grupo4.value)
                                console.log(grupo20.value)
                                console.log('3.1.6')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "316",
                                        "tipoConta": "Outros Investimentos Disponíveis Para Venda",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoCapitalww').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                        }
                        if (grupo4.value == 'Activos Tangíveis') {
                            if (grupo21.value == 'Construções') {
                                if (grupo62.value == 'Edifícios Industriais') {
                                    console.log(grupo1.value)
                                    console.log(grupo4.value)
                                    console.log(grupo21.value)
                                    console.log(grupo62.value)
                                    console.log('3.2.1.1')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "3211",
                                            "tipoConta": "Edifícios Industriais",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoCapitalww').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })

                                }
                                if (grupo62.value == 'Edifícios Administrativos e Comerciais') {
                                    console.log(grupo1.value)
                                    console.log(grupo4.value)
                                    console.log(grupo21.value)
                                    console.log(grupo62.value)
                                    console.log('3.2.1.2')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "3212",
                                            "tipoConta": "Edifícios Administrativos e Comerciais",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoCapitalww').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo62.value == 'Edifícios Para Habitação e Outros Fins Sociais') {
                                    console.log(grupo1.value)
                                    console.log(grupo4.value)
                                    console.log(grupo21.value)
                                    console.log(grupo62.value)
                                    console.log('3.2.1.3')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "3213",
                                            "tipoConta": "Edifícios Para Habitação e Outros Fins Sociais",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoCapitalww').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo62.value == 'Vias de Comunicação e Construções Afins') {
                                    console.log(grupo1.value)
                                    console.log(grupo4.value)
                                    console.log(grupo21.value)
                                    console.log(grupo62.value)
                                    console.log('3.2.1.6')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "3216",
                                            "tipoConta": "Vias de Comunicação e Construções Afins",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoCapitalww').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo21.value == 'Equipamento Básico') {
                                console.log(grupo1.value)
                                console.log(grupo4.value)
                                console.log(grupo21.value)
                                console.log('3.1.2')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "322",
                                        "tipoConta": "Equipamento Básico",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoCapitalww').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo21.value == 'Mobiliário e Equipamento Administrativo Social') {
                                console.log(grupo1.value)
                                console.log(grupo4.value)
                                console.log(grupo21.value)
                                console.log('3.1.3')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "323",
                                        "tipoConta": "Mobiliário e Equipamento Administrativo Social",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoCapitalww').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo21.value == 'Equipamento de Transporte') {
                                console.log(grupo1.value)
                                console.log(grupo4.value)
                                console.log(grupo21.value)
                                console.log('3.1.4')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "324",
                                        "tipoConta": "Equipamento de Transporte",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoCapitalww').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo21.value == 'Taras e Vasilhame') {
                                console.log(grupo1.value)
                                console.log(grupo4.value)
                                console.log(grupo21.value)
                                console.log('3.1.5')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "325",
                                        "tipoConta": "Taras e Vasilhame",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoCapitalww').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo21.value == 'Ferramentas e Utensílios') {
                                console.log(grupo1.value)
                                console.log(grupo4.value)
                                console.log(grupo21.value)
                                console.log('3.1.6')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "326",
                                        "tipoConta": "Ferramentas e Utensílios",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoCapitalww').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo21.value == 'Activos de Exploração e Avaliação de Recursos Minerais') {
                                console.log(grupo1.value)
                                console.log(grupo4.value)
                                console.log(grupo21.value)
                                console.log('3.1.5')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "327",
                                        "tipoConta": "Activos de Exploração e Avaliação de Recursos Minerais",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoCapitalww').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo21.value == 'Outros Activos Tangíveis') {
                                console.log(grupo1.value)
                                console.log(grupo4.value)
                                console.log(grupo21.value)
                                console.log('3.1.6')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "329",
                                        "tipoConta": "Outros Activos Tangíveis",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoCapitalww').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                        }
                        if (grupo4.value == 'Activos Intangíveis') {
                            if (grupo22.value == 'Despesas de Desenvolvimento') {
                                console.log(grupo1.value)
                                console.log(grupo4.value)
                                console.log(grupo22.value)
                                console.log('3.3.1')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "331",
                                        "tipoConta": "Despesas de Desenvolvimento",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoCapitalww').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo22.value == 'Propriedade Industrial e Outros Direitos') {
                                console.log(grupo1.value)
                                console.log(grupo4.value)
                                console.log(grupo22.value)
                                console.log('3.3.2')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "332",
                                        "tipoConta": "Propriedade Industrial e Outros Direitos",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoCapitalww').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo22.value == 'GoodWill') {
                                console.log(grupo1.value)
                                console.log(grupo4.value)
                                console.log(grupo22.value)
                                console.log('3.3.3')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "333",
                                        "tipoConta": "GoodWill",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoCapitalww').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo22.value == ' Activos de Exploração e Avaliação de Recursos Minerais') {
                                console.log(grupo1.value)
                                console.log(grupo4.value)
                                console.log(grupo22.value)
                                console.log('3.3.4')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "334",
                                        "tipoConta": "Activos de Exploração e Avaliação de Recursos Minerais",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoCapitalww').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                        }
                        if (grupo4.value == 'Investimentos em Cruso') {
                            if (grupo23.value == 'Activos Tangíveis') {
                                console.log(grupo1.value)
                                console.log(grupo4.value)
                                console.log(grupo23.value)
                                console.log('3.4.2')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "342",
                                        "tipoConta": "Activos Tangíveis",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoCapitalww').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo23.value == 'Activos Intangíveis') {
                                console.log(grupo1.value)
                                console.log(grupo4.value)
                                console.log(grupo23.value)
                                console.log('3.4.3')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "343",
                                        "tipoConta": "Activos Intangíveis",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoCapitalww').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                        }
                        if (grupo4.value == 'Activos Não Correntes Detidos Para Venda') {
                            console.log(grupo1.value)
                            console.log(grupo4.value)
                            console.log('3.5')
                            console.log(debitoOuCredito.value)
                            console.log(valorConta.value)
                            console.log(historicoConta.value)
                            console.log(diaHoje)
                            const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                            let pora = new Request(urlLogIn, {
                                method: 'PATCH',
                                headers: h,
                                body: JSON.stringify({
                                    "operacao": `${debitoOuCredito.value}`,
                                    "numeroConta": "35",
                                    "tipoConta": "Activos Não Correntes Detidos Para Venda",
                                    "valor": `${valorConta.value}`,
                                    "data": `${diaHoje}`,
                                    "historico": `${historicoConta.value}`
                                })
                            });
                            fetch(pora)
                                .then(ress => ress.json())
                                .then(data5 => {
                                    console.log(data5);
                                    $('#novaSeleccaoCapitalww').modal('hide');
                                    var m = new Date();
                                    var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                    const usuarioLogs = localStorage.getItem('usuario');
                                    const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                    let logs = new Request(urlLogs, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "nomeFuncionario": `${usuarioLogs}`,
                                            "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                            "data": `${dateString}`
                                        })
                                    });
                                    fetch(logs)
                                        .then(ress => ress.json())
                                        .then(data5Logs => {
                                            console.log(data5Logs)
                                        });
                                    planoDeContas();
                                })
                        }
                        if (grupo4.value == 'Activos Tangíveis de Investimentos') {
                            console.log(grupo1.value)
                            console.log(grupo4.value)
                            console.log('3.6')
                            console.log(debitoOuCredito.value)
                            console.log(valorConta.value)
                            console.log(historicoConta.value)
                            console.log(diaHoje)
                            const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                            let pora = new Request(urlLogIn, {
                                method: 'PATCH',
                                headers: h,
                                body: JSON.stringify({
                                    "operacao": `${debitoOuCredito.value}`,
                                    "numeroConta": "36",
                                    "tipoConta": "Activos Tangíveis de Investimentos",
                                    "valor": `${valorConta.value}`,
                                    "data": `${diaHoje}`,
                                    "historico": `${historicoConta.value}`
                                })
                            });
                            fetch(pora)
                                .then(ress => ress.json())
                                .then(data5 => {
                                    console.log(data5);
                                    $('#novaSeleccaoCapitalww').modal('hide');
                                    var m = new Date();
                                    var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                    const usuarioLogs = localStorage.getItem('usuario');
                                    const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                    let logs = new Request(urlLogs, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "nomeFuncionario": `${usuarioLogs}`,
                                            "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                            "data": `${dateString}`
                                        })
                                    });
                                    fetch(logs)
                                        .then(ress => ress.json())
                                        .then(data5Logs => {
                                            console.log(data5Logs)
                                        });
                                    planoDeContas();
                                })
                        }
                        if (grupo4.value == 'Amortizações Acumuladas') {
                            if (grupo24.value == 'Activos Tangíveis') {
                                console.log(grupo1.value)
                                console.log(grupo4.value)
                                console.log(grupo24.value)
                                console.log('3.8.2')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "382",
                                        "tipoConta": "Activos Tangíveis",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoCapitalww').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo24.value == 'Activos Intagíveis') {
                                console.log(grupo1.value)
                                console.log(grupo4.value)
                                console.log(grupo24.value)
                                console.log('3.8.3')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "383",
                                        "tipoConta": "Activos Tangíveis",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoCapitalww').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo24.value == 'Activos Tangíveis de Investimentos') {
                                console.log(grupo1.value)
                                console.log(grupo4.value)
                                console.log(grupo24.value)
                                console.log('3.8.6')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "386",
                                        "tipoConta": "Activos Tangíveis de Investimentos",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoCapitalww').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo24.value == 'Activos de Exploração e Avaliação de Recursos Minerais') {
                                console.log(grupo1.value)
                                console.log(grupo4.value)
                                console.log(grupo24.value)
                                console.log('3.8.7')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "387",
                                        "tipoConta": "Activos de Exploração e Avaliação de Recursos Minerais",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoCapitalww').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                        }
                        if (grupo4.value == 'Imparidade Acumulada de Investimentos de Capital') {
                            if (grupo25.value == 'Investimentos Financeiros') {
                                console.log(grupo1.value)
                                console.log(grupo4.value)
                                console.log(grupo25.value)
                                console.log('3.9.1')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "391",
                                        "tipoConta": "Investimentos Financeiros",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoCapitalww').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo25.value == 'Activos Tangíveis') {
                                console.log(grupo1.value)
                                console.log(grupo4.value)
                                console.log(grupo25.value)
                                console.log('3.9.2')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "392",
                                        "tipoConta": "Activos Tangíveis",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoCapitalww').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo25.value == 'Activos Intagíveis') {
                                console.log(grupo1.value)
                                console.log(grupo4.value)
                                console.log(grupo25.value)
                                console.log('3.9.3')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "393",
                                        "tipoConta": "Activos Intagíveis",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoCapitalww').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo25.value == 'Activos Não Correntes Detidos Para Venda') {
                                console.log(grupo1.value)
                                console.log(grupo4.value)
                                console.log(grupo25.value)
                                console.log('3.9.5')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "395",
                                        "tipoConta": "Activos Não Correntes Detidos Para Venda",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoCapitalww').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo25.value == 'Activos Tangíveis de Investimento') {
                                console.log(grupo1.value)
                                console.log(grupo4.value)
                                console.log(grupo25.value)
                                console.log('3.9.6')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "396",
                                        "tipoConta": "Activos Não Correntes Detidos Para Venda",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoCapitalww').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo25.value == ' Activos de Exploração e Avaliação de Recursos Minerais') {
                                console.log(grupo1.value)
                                console.log(grupo4.value)
                                console.log(grupo25.value)
                                console.log('3.9.7')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "397",
                                        "tipoConta": "Activos de Exploração e Avaliação de Recursos Minerais",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoCapitalww').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                        }
                    });
                    adicionarAAActivos.addEventListener('click', (e) => {
                        if (grupo3.value == 'Compras') {
                            if (grupo12.value == 'Mercadorias') {
                                console.log(grupo1.value)
                                console.log(grupo3.value)
                                console.log(grupo12.value)
                                console.log('2.1.1')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "211",
                                        "tipoConta": "Mercadorias",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoActivos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo12.value == 'Matérias Primas, Auxiliares e Materiais') {
                                if (grupo57.value == 'Matérias Primas') {
                                    console.log(grupo1.value)
                                    console.log(grupo3.value)
                                    console.log(grupo12.value)
                                    console.log(grupo57.value)
                                    console.log('2.1.2.1')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "2121",
                                            "tipoConta": "Matérias Primas",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoActivos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo57.value == 'Matérias Auxiliares') {
                                    console.log(grupo1.value)
                                    console.log(grupo3.value)
                                    console.log(grupo12.value)
                                    console.log(grupo57.value)
                                    console.log('2.1.2.3')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "2123",
                                            "tipoConta": "Matérias Auxiliares",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoActivos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo57.value == 'Materiais') {
                                    if (grupo58.value == 'Combustíveis e Lubrificantes') {
                                        console.log(grupo1.value)
                                        console.log(grupo3.value)
                                        console.log(grupo12.value)
                                        console.log(grupo57.value)
                                        console.log(grupo58.value)
                                        console.log('2.1.2.3.1')
                                        console.log(debitoOuCredito.value)
                                        console.log(valorConta.value)
                                        console.log(historicoConta.value)
                                        console.log(diaHoje)
                                        const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                        let pora = new Request(urlLogIn, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "operacao": `${debitoOuCredito.value}`,
                                                "numeroConta": "21231",
                                                "tipoConta": "Combustíveis e Lubrificantes",
                                                "valor": `${valorConta.value}`,
                                                "data": `${diaHoje}`,
                                                "historico": `${historicoConta.value}`
                                            })
                                        });
                                        fetch(pora)
                                            .then(ress => ress.json())
                                            .then(data5 => {
                                                console.log(data5);
                                                $('#novaSeleccaoActivos').modal('hide');
                                                var m = new Date();
                                                var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                const usuarioLogs = localStorage.getItem('usuario');
                                                const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                let logs = new Request(urlLogs, {
                                                    method: 'PATCH',
                                                    headers: h,
                                                    body: JSON.stringify({
                                                        "nomeFuncionario": `${usuarioLogs}`,
                                                        "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                        "data": `${dateString}`
                                                    })
                                                });
                                                fetch(logs)
                                                    .then(ress => ress.json())
                                                    .then(data5Logs => {
                                                        console.log(data5Logs)
                                                    });
                                                planoDeContas();
                                            })
                                    }
                                    if (grupo58.value == 'Embalagens Comerciais') {
                                        console.log(grupo1.value)
                                        console.log(grupo3.value)
                                        console.log(grupo12.value)
                                        console.log(grupo57.value)
                                        console.log(grupo58.value)
                                        console.log('2.1.2.3.2')
                                        console.log(debitoOuCredito.value)
                                        console.log(valorConta.value)
                                        console.log(historicoConta.value)
                                        console.log(diaHoje)
                                        const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                        let pora = new Request(urlLogIn, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "operacao": `${debitoOuCredito.value}`,
                                                "numeroConta": "21232",
                                                "tipoConta": "Embalagens Comerciais",
                                                "valor": `${valorConta.value}`,
                                                "data": `${diaHoje}`,
                                                "historico": `${historicoConta.value}`
                                            })
                                        });
                                        fetch(pora)
                                            .then(ress => ress.json())
                                            .then(data5 => {
                                                console.log(data5);
                                                $('#novaSeleccaoActivos').modal('hide');
                                                var m = new Date();
                                                var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                const usuarioLogs = localStorage.getItem('usuario');
                                                const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                let logs = new Request(urlLogs, {
                                                    method: 'PATCH',
                                                    headers: h,
                                                    body: JSON.stringify({
                                                        "nomeFuncionario": `${usuarioLogs}`,
                                                        "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                        "data": `${dateString}`
                                                    })
                                                });
                                                fetch(logs)
                                                    .then(ress => ress.json())
                                                    .then(data5Logs => {
                                                        console.log(data5Logs)
                                                    });
                                                planoDeContas();
                                            })
                                    }
                                    if (grupo58.value == 'Peças e Sobressalentes') {
                                        console.log(grupo1.value)
                                        console.log(grupo3.value)
                                        console.log(grupo12.value)
                                        console.log(grupo57.value)
                                        console.log(grupo58.value)
                                        console.log('2.1.2.3.3')
                                        console.log(debitoOuCredito.value)
                                        console.log(valorConta.value)
                                        console.log(historicoConta.value)
                                        console.log(diaHoje)
                                        const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                        let pora = new Request(urlLogIn, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "operacao": `${debitoOuCredito.value}`,
                                                "numeroConta": "21233",
                                                "tipoConta": "Peças e Sobressalentes",
                                                "valor": `${valorConta.value}`,
                                                "data": `${diaHoje}`,
                                                "historico": `${historicoConta.value}`
                                            })
                                        });
                                        fetch(pora)
                                            .then(ress => ress.json())
                                            .then(data5 => {
                                                console.log(data5);
                                                $('#novaSeleccaoActivos').modal('hide');
                                                var m = new Date();
                                                var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                const usuarioLogs = localStorage.getItem('usuario');
                                                const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                let logs = new Request(urlLogs, {
                                                    method: 'PATCH',
                                                    headers: h,
                                                    body: JSON.stringify({
                                                        "nomeFuncionario": `${usuarioLogs}`,
                                                        "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                        "data": `${dateString}`
                                                    })
                                                });
                                                fetch(logs)
                                                    .then(ress => ress.json())
                                                    .then(data5Logs => {
                                                        console.log(data5Logs)
                                                    });
                                                planoDeContas();
                                            })
                                    }
                                    if (grupo58.value == 'Materiais Diversos') {
                                        console.log(grupo1.value)
                                        console.log(grupo3.value)
                                        console.log(grupo12.value)
                                        console.log(grupo57.value)
                                        console.log(grupo58.value)
                                        console.log('2.1.2.3.9')
                                        console.log(debitoOuCredito.value)
                                        console.log(valorConta.value)
                                        console.log(historicoConta.value)
                                        console.log(diaHoje)
                                        const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                        let pora = new Request(urlLogIn, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "operacao": `${debitoOuCredito.value}`,
                                                "numeroConta": "21239",
                                                "tipoConta": "Materiais Diversos",
                                                "valor": `${valorConta.value}`,
                                                "data": `${diaHoje}`,
                                                "historico": `${historicoConta.value}`
                                            })
                                        });
                                        fetch(pora)
                                            .then(ress => ress.json())
                                            .then(data5 => {
                                                console.log(data5);
                                                $('#novaSeleccaoActivos').modal('hide');
                                                var m = new Date();
                                                var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                                const usuarioLogs = localStorage.getItem('usuario');
                                                const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                                let logs = new Request(urlLogs, {
                                                    method: 'PATCH',
                                                    headers: h,
                                                    body: JSON.stringify({
                                                        "nomeFuncionario": `${usuarioLogs}`,
                                                        "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                        "data": `${dateString}`
                                                    })
                                                });
                                                fetch(logs)
                                                    .then(ress => ress.json())
                                                    .then(data5Logs => {
                                                        console.log(data5Logs)
                                                    });
                                                planoDeContas();
                                            })
                                    }
                                }
                            }
                            if (grupo12.value == 'Devoluções de Compras') {
                                console.log(grupo1.value)
                                console.log(grupo3.value)
                                console.log(grupo12.value)
                                console.log('2.1.7')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "217",
                                        "tipoConta": "Devoluções de Compras",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoActivos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo12.value == 'Descontos e Abatimentos em Compras') {
                                console.log(grupo1.value)
                                console.log(grupo3.value)
                                console.log(grupo12.value)
                                console.log('2.1.8')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "218",
                                        "tipoConta": "Descontos e Abatimentos em Compras",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoActivos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                        }
                        if (grupo3.value == 'Mercadorias') {
                            if (grupo13.value == 'Mercadorias em Trânsito') {
                                console.log(grupo1.value)
                                console.log(grupo3.value)
                                console.log(grupo13.value)
                                console.log('2.2.1')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "221",
                                        "tipoConta": "Mercadorias em Trânsito",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoActivos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo13.value == 'Mercadorias em Poder de Terceiros') {
                                console.log(grupo1.value)
                                console.log(grupo3.value)
                                console.log(grupo13.value)
                                console.log('2.2.2')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "222",
                                        "tipoConta": "Mercadorias em Poder de Terceiros",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoActivos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                        }
                        if (grupo3.value == 'Produtos Acabados e Intermédio') {
                            if (grupo14.value == 'Produtos Acabados em Poder de Terceiros') {
                                console.log(grupo1.value)
                                console.log(grupo3.value)
                                console.log(grupo14.value)
                                console.log('2.3.1')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "231",
                                        "tipoConta": "Produtos Acabados em Poder de Terceiros",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoActivos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                        }
                        if (grupo3.value == 'Subprodutos, Desperdícios, Resíduo e Refugos') {
                            if (grupo15.value == 'Subprodutos') {
                                console.log(grupo1.value)
                                console.log(grupo3.value)
                                console.log(grupo15.value)
                                console.log('2.4.1')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "241",
                                        "tipoConta": "Subprodutos",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoActivos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo15.value == 'Desperdícios, Resíduos e Refugos') {
                                console.log(grupo1.value)
                                console.log(grupo3.value)
                                console.log(grupo15.value)
                                console.log('2.4.2')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "242",
                                        "tipoConta": "Desperdícios, Resíduos e Refugos",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoActivos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                        }
                        if (grupo3.value == 'Produtos ou Serviços em Curso') {
                            console.log(grupo1.value)
                            console.log(grupo3.value)
                            console.log('2.5')
                            console.log(debitoOuCredito.value)
                            console.log(valorConta.value)
                            console.log(historicoConta.value)
                            console.log(diaHoje)
                            const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                            let pora = new Request(urlLogIn, {
                                method: 'PATCH',
                                headers: h,
                                body: JSON.stringify({
                                    "operacao": `${debitoOuCredito.value}`,
                                    "numeroConta": "25",
                                    "tipoConta": "Produtos ou Serviços em Curso",
                                    "valor": `${valorConta.value}`,
                                    "data": `${diaHoje}`,
                                    "historico": `${historicoConta.value}`
                                })
                            });
                            fetch(pora)
                                .then(ress => ress.json())
                                .then(data5 => {
                                    console.log(data5);
                                    $('#novaSeleccaoActivos').modal('hide');
                                    var m = new Date();
                                    var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                    const usuarioLogs = localStorage.getItem('usuario');
                                    const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                    let logs = new Request(urlLogs, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "nomeFuncionario": `${usuarioLogs}`,
                                            "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                            "data": `${dateString}`
                                        })
                                    });
                                    fetch(logs)
                                        .then(ress => ress.json())
                                        .then(data5Logs => {
                                            console.log(data5Logs)
                                        });
                                    planoDeContas();
                                })
                        }
                        if (grupo3.value == 'Matérias Primas, Auxiliares e Materiais') {
                            if (grupo16.value == 'Matérias Primas') {
                                console.log(grupo1.value)
                                console.log(grupo3.value)
                                console.log(grupo16.value)
                                console.log('2.6.1')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "261",
                                        "tipoConta": "Matérias Primas",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoActivos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo16.value == 'Matérias Auxiliares') {
                                console.log(grupo1.value)
                                console.log(grupo3.value)
                                console.log(grupo16.value)
                                console.log('2.6.2')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "262",
                                        "tipoConta": "Matérias Auxiliares",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoActivos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo16.value == 'Materiais') {
                                if (grupo59.value == 'Combustíveis e Lubrificantes') {
                                    console.log(grupo1.value)
                                    console.log(grupo3.value)
                                    console.log(grupo16.value)
                                    console.log(grupo59.value)
                                    console.log('2.6.3.1')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "2631",
                                            "tipoConta": "Combustíveis e Lubrificantes",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoActivos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo59.value == 'Embalagens Comerciais') {
                                    console.log(grupo1.value)
                                    console.log(grupo3.value)
                                    console.log(grupo16.value)
                                    console.log(grupo59.value)
                                    console.log('2.6.3.2')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "2632",
                                            "tipoConta": "Embalagens Comerciais",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoActivos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo59.value == 'Peças e Sobressalentes') {
                                    console.log(grupo1.value)
                                    console.log(grupo3.value)
                                    console.log(grupo16.value)
                                    console.log(grupo59.value)
                                    console.log('2.6.3.3')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "2633",
                                            "tipoConta": "Peças e Sobressalentes",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoActivos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo59.value == 'Materiais Diversos') {
                                    console.log(grupo1.value)
                                    console.log(grupo3.value)
                                    console.log(grupo16.value)
                                    console.log(grupo59.value)
                                    console.log('2.6.3.9')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "2639",
                                            "tipoConta": "Materiais Diversos",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoActivos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo16.value == 'Matérias Primas, Auxiliares e Materiais em Trânsito') {
                                console.log(grupo1.value)
                                console.log(grupo3.value)
                                console.log(grupo16.value)
                                console.log('2.6.4')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "264",
                                        "tipoConta": "Matérias Primas, Auxiliares e Materiais em Trânsito",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoActivos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                        }
                        if (grupo3.value == 'Activos Biológicos') {
                            if (grupo17.value == 'De Produção') {
                                if (grupo60.value == 'Animais') {
                                    console.log(grupo1.value)
                                    console.log(grupo3.value)
                                    console.log(grupo17.value)
                                    console.log(grupo60.value)
                                    console.log('2.7.1.1')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "2711",
                                            "tipoConta": "Animais",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoActivos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo60.value == 'Plantas') {
                                    console.log(grupo1.value)
                                    console.log(grupo3.value)
                                    console.log(grupo17.value)
                                    console.log(grupo60.value)
                                    console.log('2.7.1.2')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "2712",
                                            "tipoConta": "Plantas",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoActivos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                            if (grupo17.value == 'Consumíveis') {
                                if (grupo60.value == 'Plantas') {
                                    console.log(grupo1.value)
                                    console.log(grupo3.value)
                                    console.log(grupo17.value)
                                    console.log(grupo60.value)
                                    console.log('2.7.2.2')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "2722",
                                            "tipoConta": "Plantas",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoActivos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                                if (grupo60.value == 'Animais') {
                                    console.log(grupo1.value)
                                    console.log(grupo3.value)
                                    console.log(grupo17.value)
                                    console.log(grupo60.value)
                                    console.log('2.7.2.1')
                                    console.log(debitoOuCredito.value)
                                    console.log(valorConta.value)
                                    console.log(historicoConta.value)
                                    console.log(diaHoje)
                                    const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                    let pora = new Request(urlLogIn, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "operacao": `${debitoOuCredito.value}`,
                                            "numeroConta": "2721",
                                            "tipoConta": "Animais",
                                            "valor": `${valorConta.value}`,
                                            "data": `${diaHoje}`,
                                            "historico": `${historicoConta.value}`
                                        })
                                    });
                                    fetch(pora)
                                        .then(ress => ress.json())
                                        .then(data5 => {
                                            console.log(data5);
                                            $('#novaSeleccaoActivos').modal('hide');
                                            var m = new Date();
                                            var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                            const usuarioLogs = localStorage.getItem('usuario');
                                            const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                            let logs = new Request(urlLogs, {
                                                method: 'PATCH',
                                                headers: h,
                                                body: JSON.stringify({
                                                    "nomeFuncionario": `${usuarioLogs}`,
                                                    "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                    "data": `${dateString}`
                                                })
                                            });
                                            fetch(logs)
                                                .then(ress => ress.json())
                                                .then(data5Logs => {
                                                    console.log(data5Logs)
                                                });
                                            planoDeContas();
                                        })
                                }
                            }
                        }
                        if (grupo3.value == 'Regularização de Inventários') {
                            if (grupo18.value == 'Mercadorias') {
                                console.log(grupo1.value)
                                console.log(grupo3.value)
                                console.log(grupo18.value)
                                console.log('2.8.2')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "282",
                                        "tipoConta": "Mercadorias",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoActivos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo18.value == 'Produtos Acabados e Intermédios') {
                                console.log(grupo1.value)
                                console.log(grupo3.value)
                                console.log(grupo18.value)
                                console.log('2.8.3')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "283",
                                        "tipoConta": "Produtos Acabados e Intermédios",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoActivos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo18.value == 'Subprodutos, Desperdícios, Resíduos e Refugos') {
                                console.log(grupo1.value)
                                console.log(grupo3.value)
                                console.log(grupo18.value)
                                console.log('2.8.4')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "284",
                                        "tipoConta": "Subprodutos, Desperdícios, Resíduos e Refugos",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoActivos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo18.value == 'Produtos ou Serviços em Curso') {
                                console.log(grupo1.value)
                                console.log(grupo3.value)
                                console.log(grupo18.value)
                                console.log('2.8.5')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "285",
                                        "tipoConta": "Produtos ou Serviços em Curso",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoActivos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo18.value == 'Matérias Primas, Auxiliares e Materiais') {
                                console.log(grupo1.value)
                                console.log(grupo3.value)
                                console.log(grupo18.value)
                                console.log('2.8.6')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "286",
                                        "tipoConta": "Matérias Primas, Auxiliares e Materiais",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoActivos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo18.value == 'Activos Biológicos') {
                                console.log(grupo1.value)
                                console.log(grupo3.value)
                                console.log(grupo18.value)
                                console.log('2.8.7')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "287",
                                        "tipoConta": "Activos Biológicos",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoActivos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                        }
                        if (grupo3.value == 'Ajustamentos Para o Valor Realizável Líquido') {
                            if (grupo19.value == 'Mercadorias') {
                                console.log(grupo1.value)
                                console.log(grupo3.value)
                                console.log(grupo19.value)
                                console.log('2.9.2')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "292",
                                        "tipoConta": "Mercadorias",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoActivos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo19.value == 'Produtos Acabados e Intermédios') {
                                console.log(grupo1.value)
                                console.log(grupo3.value)
                                console.log(grupo19.value)
                                console.log('2.9.3')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "293",
                                        "tipoConta": "Produtos Acabados e Intermédios",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoActivos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo19.value == 'Subprodutos, Desperdícios, Resíduos e Refugos') {
                                console.log(grupo1.value)
                                console.log(grupo3.value)
                                console.log(grupo19.value)
                                console.log('2.9.4')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "294",
                                        "tipoConta": "Subprodutos, Desperdícios, Resíduos e Refugos",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoActivos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo19.value == 'Produtos ou Serviços em Curso') {
                                console.log(grupo1.value)
                                console.log(grupo3.value)
                                console.log(grupo19.value)
                                console.log('2.9.5')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "295",
                                        "tipoConta": "Produtos ou Serviços em Curso",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoActivos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo19.value == 'Matérias Primas, Auxiliares e Materiais') {
                                console.log(grupo1.value)
                                console.log(grupo3.value)
                                console.log(grupo19.value)
                                console.log('2.9.6')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "296",
                                        "tipoConta": "Matérias Primas, Auxiliares e Materiais",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoActivos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo19.value == 'Activos Biológicos') {
                                console.log(grupo1.value)
                                console.log(grupo3.value)
                                console.log(grupo19.value)
                                console.log('2.9.7')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "297",
                                        "tipoConta": "Activos Biológicos",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoActivos').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                        }

                    });
                    adicionarAAFinanceiros.addEventListener('click', (e) => {
                        if (grupo2.value == 'Caixa') {
                            console.log(grupo1.value)
                            console.log(grupo2.value)
                            console.log('1.1')
                            console.log(debitoOuCredito.value)
                            console.log(valorConta.value)
                            console.log(historicoConta.value)
                            console.log(diaHoje)
                            const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                            let pora = new Request(urlLogIn, {
                                method: 'PATCH',
                                headers: h,
                                body: JSON.stringify({
                                    "operacao": `${debitoOuCredito.value}`,
                                    "numeroConta": "11",
                                    "tipoConta": "Caixa",
                                    "valor": `${valorConta.value}`,
                                    "data": `${diaHoje}`,
                                    "historico": `${historicoConta.value}`
                                })
                            });
                            fetch(pora)
                                .then(ress => ress.json())
                                .then(data5 => {
                                    console.log(data5);
                                    $('#novaSeleccaoFinanceiros').modal('hide');
                                    var m = new Date();
                                    var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                    const usuarioLogs = localStorage.getItem('usuario');
                                    const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                    let logs = new Request(urlLogs, {
                                        method: 'PATCH',
                                        headers: h,
                                        body: JSON.stringify({
                                            "nomeFuncionario": `${usuarioLogs}`,
                                            "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                            "data": `${dateString}`
                                        })
                                    });
                                    fetch(logs)
                                        .then(ress => ress.json())
                                        .then(data5Logs => {
                                            console.log(data5Logs)
                                        });
                                    planoDeContas();
                                })
                        }
                        if (grupo2.value == 'Bancos') {
                            if (grupo101.value == 'Depósitos à Ordem') {
                                console.log(grupo1.value)
                                console.log(grupo101.value)
                                console.log('1.2.1')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "121",
                                        "tipoConta": "Depósitos à Ordem",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoFinanceiros').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo101.value == 'Depósitos com Pré-Aviso') {
                                console.log(grupo1.value)
                                console.log(grupo101.value)
                                console.log('1.2.2')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "122",
                                        "tipoConta": "Depósitos com Pré-Aviso",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoFinanceiros').modal('hide');
                                        planoDeContas();
                                    })
                            }
                            if (grupo101.value == 'Depósitos a Prazo') {
                                console.log(grupo1.value)
                                console.log(grupo101.value)
                                console.log('1.2.3')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "123",
                                        "tipoConta": "Depósitos a Prazo",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoFinanceiros').modal('hide');
                                        planoDeContas();
                                    })
                            }
                        }
                        if (grupo2.value == 'Outros Instrumentos Financeiros') {
                            if (grupo11.value == 'Derivados') {
                                console.log(grupo1.value)
                                console.log(grupo11.value)
                                console.log('1.3.1')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "131",
                                        "tipoConta": "Derivados",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoFinanceiros').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                            if (grupo11.value == 'Detidos Para Negociação') {
                                console.log(grupo1.value)
                                console.log(grupo11.value)
                                console.log('1.3.2')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "132",
                                        "tipoConta": "Detidos Para Negociação",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoFinanceiros').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })

                            }
                            if (grupo11.value == 'Outros Instrumentos Financeiros ao Justo Valor Através dos Resultados') {
                                console.log(grupo1.value)
                                console.log(grupo11.value)
                                console.log('1.3.3')
                                console.log(debitoOuCredito.value)
                                console.log(valorConta.value)
                                console.log(historicoConta.value)
                                console.log(diaHoje)
                                const urlLogIn = 'https://stocksmanager1.herokuapp.com/planoDeContas';
                                let pora = new Request(urlLogIn, {
                                    method: 'PATCH',
                                    headers: h,
                                    body: JSON.stringify({
                                        "operacao": `${debitoOuCredito.value}`,
                                        "numeroConta": "133",
                                        "tipoConta": "Outros Instrumentos Financeiros ao Justo Valor Através dos Resultados",
                                        "valor": `${valorConta.value}`,
                                        "data": `${diaHoje}`,
                                        "historico": `${historicoConta.value}`
                                    })
                                });
                                fetch(pora)
                                    .then(ress => ress.json())
                                    .then(data5 => {
                                        console.log(data5);
                                        $('#novaSeleccaoFinanceiros').modal('hide');
                                        var m = new Date();
                                        var dateString = m.getUTCFullYear() + "/" + (m.getUTCMonth() + 1) + "/" + m.getUTCDate() + " " + m.getUTCHours() + ":" + m.getUTCMinutes();
                                        const usuarioLogs = localStorage.getItem('usuario');
                                        const urlLogs = 'https://stocksmanager1.herokuapp.com/logs';
                                        let logs = new Request(urlLogs, {
                                            method: 'PATCH',
                                            headers: h,
                                            body: JSON.stringify({
                                                "nomeFuncionario": `${usuarioLogs}`,
                                                "historico": `O Colaborador ${usuarioLogs} fez alterações no Plano de Contas`,
                                                "data": `${dateString}`
                                            })
                                        });
                                        fetch(logs)
                                            .then(ress => ress.json())
                                            .then(data5Logs => {
                                                console.log(data5Logs)
                                            });
                                        planoDeContas();
                                    })
                            }
                        }
                    });
                    edtForm.addEventListener('click', (e) => {
                        // const urlLogIn = 'https://stocksmanager1.herokuapp.com/financasApagar';
                        // let pora = new Request(urlLogIn, {
                        // method: 'PATCH',
                        // headers: h,
                        // body: JSON.stringify({
                        //     "data": `${data.value}`,
                        //     "tipoDocumento":`${tipoDocumento.value}`,
                        //     "tipoConta": `${tipoConta.value}`,
                        //     "conta":`${conta.value}`,
                        //     "descricao": `${descricao.value}`,
                        //     "clienteEmpresa":`${clienteEmpresa.value}`,
                        //     "dataVencimento":`${dataVencimento.value}`,
                        //     "satus":`${satus.value}`
                        //     })                        
                        // });
                        // fetch(pora)
                        // .then(ress => ress.json())
                        // .then(data5 => {
                        //     console.log(data5);
                        //     $('#novaSeleccao').modal('hide');
                        //     contasReceber();

                        // })

                        if (grupo1.value == 'Meios Financeiros') {
                            e.preventDefault();
                            $('#novaSeleccao').modal('hide');
                            $('#novaSeleccaoFinanceiros').modal('show');

                        }

                        if (grupo1.value == 'Inventário e Activos Biológicos') {
                            e.preventDefault();
                            $('#novaSeleccao').modal('hide');
                            $('#novaSeleccaoActivos').modal('show');

                        }

                        if (grupo1.value == 'Investimentos de Capital') {
                            e.preventDefault();
                            $('#novaSeleccao').modal('hide');
                            $('#novaSeleccaoInvestimentos').modal('show');

                            console.log('Smart Manager');
                        }

                        if (grupo1.value == 'Contas a Receber, Contas a Pagar, Acréscimos e Diferimentos') {
                            e.preventDefault();
                            $('#novaSeleccaoContas').modal('show');
                            $('#novaSeleccao').modal('hide');


                        }

                        if (grupo1.value == 'Capital Própria') {
                            e.preventDefault();
                            $('#novaSeleccao').modal('hide');
                            $('#novaSeleccaoCapitalww').modal('show');

                        }

                        if (grupo1.value == 'Gastos e Perdas') {
                            e.preventDefault();
                            $('#novaSeleccao').modal('hide');
                            $('#novaSeleccaoGastos').modal('show');

                        }

                        if (grupo1.value == 'Rendimentos e Ganhos') {
                            e.preventDefault();
                            $('#novaSeleccao').modal('hide');
                            $('#rendimentosSeleccao').modal('show');

                        }

                        if (grupo1.value == 'Resultados') {
                            e.preventDefault();
                            $('#novaSeleccao').modal('hide');
                            $('#gruposResultados').modal('show');

                        }

                    })
                    $(document).ready(function () {
                        $('#tabbb').DataTable({
                            "scrollX": true,
                            "scrollY": 500,
                        });
                    });
                });

        }
        planoDeContas();
    }
    if (e.target.id == "balancete") {
        function balancete() {
            nada = '';
            nada = ` 
        <div class="animate__animated animate__pulse card3 text-center mr-4">
        <div class="row align-items-center">
            <div class="col-md-6">
              <h1 class="mb-4 text-black"><span class="text-black">Balancete</span></h1>
              <h3 class="mb-4 text-black">...</h3>
            </div>
            <div class="col-md-6 d-none d-sm-none d-md-block">
              <img src="pics/Stocks2.png" alt="tours pics" class="img-fluid">
            </div>
          </div>
        </div>
        <div class="butoes m-4">
        
        </div>
        <div id="cargos"></div>
        <div id="parametro"></div>

        <div class="text-center cardTab animate__animated animate__pulse">
            <table class="table m-2" id="tabbb2">
                <thead>
                    <tr class="bg-gradient-primary text-center text-black">
                        <th scope="col"></th>
                        <th scope="col">Débito</th>
                        <th scope="col">Crédito</th>
                    </tr>
                </thead>
                <tbody id="myRecruta2" class="tt text-center text-black">                     
                </tbody>
            </table>
        </div>
        <div class="text-center cardTab animate__animated animate__pulse">
            <table class="table m-2" id="tabbb">
                <thead>
                    <tr class="bg-gradient-primary text-center text-black">
                    <th scope="col"></th>
                        <th scope="col">Número da Conta</th>
                        <th scope="col">Tipo da Conta</th>
                        <th scope="col">Débito</th>
                        <th scope="col">Crédito</th>
                        <th scope="col">Saldo Débito</th>
                        <th scope="col">Saldo Crédito</th>
                    </tr>
                </thead>
                <tbody id="myRecruta" class="tt text-center text-black">                     
                </tbody>
            </table>
        </div>
  
                  
        `;
            contrudo.innerHTML = nada;
            const myRecruta2 = document.getElementById('myRecruta2');
            const myRecruta = document.getElementById('myRecruta');
            const empresa2 = localStorage.getItem('empresa');
            const url3 = `https://stocksmanager1.herokuapp.com/getAllDataPequenas/${empresa2}`;
            let obj = [];
            var obj2 = [];
            let obj3 = [];
            let holder = {};
            let holder2 = {};
            let total = 0;
            let classe1 = 0;
            let classe2 = 0;
            let classe3 = 0;
            let classe4 = 0;
            let classe5 = 0;
            let classe6 = 0;
            let classe7 = 0;
            let classe8 = 0;
            let tamanho = 0;
            let debito = 0;
            let cretido = 0;
            let caixaDebito = 0;
            let caixaCretido = 0;
            let bancoDebito = 0;
            let bancoCretido = 0;
            let depositowwaOrdemCretido = 0;
            let depositowwaOrdemDebito = 0;
            let depositoComPreAvisowwaCretido = 0;
            let depositoComPreAvisowwaDebito = 0;
            let depositoPrazowwaCretido = 0;
            let depositoPrazowwaDebito = 0;
            let derivadosCretido = 0;
            let derivadosDebito = 0;
            let detidosParaNegociacaoCretido = 0;
            let detidosParaNegociacaoDebito = 0;
            let outrosInstrumentosFinanceirosCretido = 0;
            let outrosInstrumentosFinanceirosDebito = 0;
            let comprasCretido = 0;
            let comprasDebito = 0;
            let mercadoriasCretido = 0;
            let mercadoriasDebito = 0;
            let materiasPrimasCretido = 0;
            let materiasPrimasDebito = 0;
            let materiasAuxiliaresCretido = 0;
            let materiasAuxiliaresDebito = 0;
            let materiaisCretido = 0;
            let materiaisDebito = 0;
            let combustiveisLubrificantesCretido = 0;
            let combustiveisLubrificantesDebito = 0;
            let embalagensComerciaisCretido = 0;
            let embalagensComerciaisDebito = 0;
            let pecasSobresalentesCretido = 0;
            let pecasSobresalentesDebito = 0;
            let materiaisDiversosCretido = 0;
            let materiaisDiversosDebito = 0;
            let devolucoesComprasCretido = 0;
            let devolucoesComprasDebito = 0;
            let descontosAbatimentosCretido = 0;
            let descontosAbatimentosDebito = 0;
            let mercadoriasTransitoCretido = 0;
            let mercadoriasTransitoDebito = 0;
            let mercadoriasPoderCretido = 0;
            let mercadoriasPoderDebito = 0;
            let produtosAcabadosCretido = 0;
            let produtosAcabadosDebito = 0;
            let subprodutosCretido = 0;
            let subprodutosDebito = 0;
            let desperdiciosResiduosRefugosCretido = 0;
            let desperdiciosResiduosRefugosDebito = 0;
            let produtosServicosEmCursoCretido = 0;
            let produtosServicosEmCursoDebito = 0;
            let msteriasPrimas2Cretido = 0;
            let msteriasPrimas2Debito = 0;
            let msteriasAuxiliares2Cretido = 0;
            let msteriasAuxiliares2Debito = 0;
            let combustiveisLubrificantes2Cretido = 0;
            let combustiveisLubrificantes2Debito = 0;
            let embalagensComerciais2Cretido = 0;
            let embalagensComerciais2Debito = 0;
            let pecasSobresalentes2Cretido = 0;
            let pecasSobresalentes2Debito = 0;
            let materiaisDiversos2Cretido = 0;
            let materiaisDiversos2Debito = 0;
            let materiaisPrimasAuxiliaresMateriasEmTransitoCretido = 0;
            let materiaisPrimasAuxiliaresMateriasEmTransitoDebito = 0;
            let animaisCretido = 0;
            let animaisDebito = 0;
            let plantasCretido = 0;
            let plantasDebito = 0;
            let animais2Cretido = 0;
            let animais2Debito = 0;
            let plantas2Cretido = 0;
            let plantas2Debito = 0;
            let mercadorias2Cretido = 0;
            let mercadorias2Debito = 0;
            let produtosAcabadosIntermedios2Cretido = 0;
            let produtosAcabadosIntermedios2Debito = 0;
            let subprodutosDesperdiciosResiduosRefugos2Cretido = 0;
            let subprodutosDesperdiciosResiduosRefugos2Debito = 0;
            let produtosServicosEmCurso2Cretido = 0;
            let produtosServicosEmCurso2Debito = 0;
            let materiasPrimasAuxiliaresMateriais2Cretido = 0;
            let materiasPrimasAuxiliaresMateriais2Debito = 0;
            let activosBiologicos2Cretido = 0;
            let activosBiologicos2Debito = 0;
            let mercadorias3Cretido = 0;
            let mercadorias3Debito = 0;
            let produtosAcabadosIntermedios3Cretido = 0;
            let produtosAcabadosIntermedios3Debito = 0;
            let subprodutosDesperdiciosResiduosRefugos3Cretido = 0;
            let subprodutosDesperdiciosResiduosRefugos3Debito = 0;
            let produtosServicosEmCurso3Cretido = 0;
            let produtosServicosEmCurso3Debito = 0;
            let materiasPrimasAuxiliaresMateriais3Cretido = 0;
            let materiasPrimasAuxiliaresMateriais3Debito = 0;
            let activosBiologicos3Cretido = 0;
            let activosBiologicos3Debito = 0;
            let investimentosSubsidiariasCretido = 0;
            let investimentosSubsidiariasDebito = 0;
            let investimentosConjuntamenteControladasCretido = 0;
            let investimentosConjuntamenteControladasDebito = 0;
            let outrosIvestimentosFinanceirosCretido = 0;
            let outrosIvestimentosFinanceirosDebito = 0;
            let investimentosDetidosAteMaturidadeCretido = 0;
            let investimentosDetidosAteMaturidadeDebito = 0;
            let outrosInvestimentosDisponiveisParaVendaCretido = 0;
            let outrosInvestimentosDisponiveisParaVendaDebito = 0;

            // Hoje
            let edificiosIndustriais1Cretido = 0;
            let edificiosIndustriais1Debito = 0;
            let edificiosAdministrativosComerciais1Cretido = 0;
            let edificiosAdministrativosComerciais1Debito = 0;
            let edificiosParaHabitacaoOutrosFinsComerciais1Cretido = 0;
            let edificiosParaHabitacaoOutrosFinsComerciais1Debito = 0;
            let viasComunicacaoConstrucoesAfins1Cretido = 0;
            let viasComunicacaoConstrucoesAfins1Debito = 0;
            let equipamentoBasico1Cretido = 0;
            let equipamentoBasico1Debito = 0;
            let mobiliarioEquipamentoAdministrativoSocial1Cretido = 0;
            let mobiliarioEquipamentoAdministrativoSocial1Debito = 0;
            let equipamentoTransporte324Cretido = 0;
            let equipamentoTransporte324Debito = 0;
            let tarasVasilhame1Cretido = 0;
            let tarasVasilhame1Debito = 0;
            let ferramentasUtensilios1Cretido = 0;
            let ferramentasUtensilios1Debito = 0;
            let activosExploracaoAvaliacaoRecursosMinerais1Cretido = 0;
            let activosExploracaoAvaliacaoRecursosMinerais1Debito = 0;
            let outrosActivosTangiveis1Cretido = 0;
            let outrosActivosTangiveis1Debito = 0;
            let despesasDesenvolvimento1Cretido = 0;
            let despesasDesenvolvimento1Debito = 0;
            let propriedadeIndustriailOutrosDireitos1Cretido = 0;
            let propriedadeIndustriailOutrosDireitos1Debito = 0;
            let goodWillCretido = 0;
            let goodWillDebito = 0;
            let activosExploracaoAvaliacaoRecursosMinerais2Cretido = 0;
            let activosExploracaoAvaliacaoRecursosMinerais2Debito = 0;
            let activosTangiveiswCretido = 0;
            let activosTangiveiswDebito = 0;
            let activosIntangiveiswCretido = 0;
            let activosIntangiveiswDebito = 0;
            let activosnaoCorrentesDetidosParaVenda1Cretido = 0;
            let activosnaoCorrentesDetidosParaVenda1Debito = 0;
            let activosTangiveisInvestimento1Cretido = 0;
            let activosTangiveisInvestimento1Debito = 0;
            let activosTangiveis2Cretido = 0;
            let activosTangiveis2Debito = 0;
            let activosIntangiveis2Cretido = 0;
            let activosIntangiveis2Debito = 0;
            let activosTangiveisInvestimento2Cretido = 0;
            let activosTangiveisInvestimento2Debito = 0;
            let activosExploracaoAvaliacaoRecursosMinerais3Cretido = 0;
            let activosExploracaoAvaliacaoRecursosMinerais3Debito = 0;
            let investimentosFinanceirosCretido = 0;
            let investimentosFinanceirosDebito = 0;
            let activosTangiveis3Cretido = 0;
            let activosTangiveis3Debito = 0;
            let activosIntangiveis3Cretido = 0;
            let activosIntangiveis3Debito = 0;
            let activosnaoCorrentesDetidosParaVenda2Cretido = 0;
            let activosnaoCorrentesDetidosParaVenda2Debito = 0;

            let activosTangiveisInvestimento2aCretido = 0;
            let activosTangiveisInvestimento2aDebito = 0;

            let activosExploracaoAvaliacaoRecursosMinerais4Cretido = 0;
            let activosExploracaoAvaliacaoRecursosMinerais4Debito = 0;
            let clientesCCCretido = 0;
            let clientesCCDebito = 0;
            let clientesTitulosReceberCretido = 0;
            let clientesTitulosReceberDebito = 0;
            let clientesCobrancaDuvidosaCretido = 0;
            let clientesCobrancaDuvidosaDebito = 0;
            let adiantamentosClientesCretido = 0;
            let adiantamentosClientesDebito = 0;
            let fornecedoresCCCretido = 0;
            let fornecedoresCCDebito = 0;
            let fornecedoresTitulosPagarCretido = 0;
            let fornecedoresTitulosPagarDebito = 0;

            let adiantamentosFornecedoreswaCretido = 0;
            let adiantamentosFornecedoreswaDebito = 0;

            let deCurtoPrazoCretido = 0;
            let deCurtoPrazoDebito = 0;
            let deMedioLongoPrazoCretido = 0;
            let deMedioLongoPrazoDebito = 0;
            let convertiveisCretido = 0;
            let convertiveisDebito = 0;
            let naoConvertivelCretido = 0;
            let naoConvertivelDebito = 0;
            let emprestimosTitulosPrestacaoCretido = 0;
            let emprestimosTitulosPrestacaoDebito = 0;
            let outrosEmprestimosObtidosCretido = 0;
            let outrosEmprestimosObtidosDebito = 0;
            let estimativaImpostoCretido = 0;
            let estimativaImpostoDebito = 0;
            let pagamentoPorContaCretido = 0;
            let pagamentoPorContaDebito = 0;
            let pagamentoEspecialPorContaCretido = 0;
            let pagamentoEspecialPorContaDebito = 0;
            let rentimentosTrabalhoDependenteCretido = 0;
            let rentimentosTrabalhoDependenteDebito = 0;
            let rentimentosProfissionaisCretido = 0;
            let rentimentosProfissionaisDebito = 0;
            let rentimentosCapitalCretido = 0;
            let rentimentosCapitalDebito = 0;

            let rentimentosPredialwaCretido = 0;
            let rentimentosPredialwaDebito = 0;

            let outrosRendimentosCretido = 0;
            let outrosRendimentosDebito = 0;
            let inventariosCretido = 0;
            let inventariosDebito = 0;
            let activosTangiveisIntagiveisCretido = 0;
            let activosTangiveisIntagiveisDebito = 0;
            let outrosBensServicosCretido = 0;
            let outrosBensServicosDebito = 0;
            let inventarios2Cretido = 0;
            let inventarios2Debito = 0;
            let activosTangiveisIntagiveis2Cretido = 0;
            let activosTangiveisIntagiveis2Debito = 0;
            let outrosBensServicos2Cretido = 0;
            let outrosBensServicos2Debito = 0;
            let operacoesGeraisCretido = 0;
            let operacoesGeraisDebito = 0;
            let autoconsumosOperacoesGratuitasCretido = 0;
            let autoconsumosOperacoesGratuitasDebito = 0;
            let operacoesEspeciaisCretido = 0;
            let operacoesEspeciaisDebito = 0;
            let mensaisAfavorSujeitoPassivoCretido = 0;
            let mensaisAfavorSujeitoPassivoDebito = 0;
            let mensaisAfavorEstadoCretido = 0;
            let mensaisAfavorEstadoDebito = 0;
            let anuaisPorCalculoProRataDefinitivoCretido = 0;
            let anuaisPorCalculoProRataDefinitivoDebito = 0;
            let ivaApuramentoCretido = 0;
            let ivaApuramentoDebito = 0;
            let ivaLiguidacoesOficiosasCretido = 0;
            let ivaLiguidacoesOficiosasDebito = 0;
            let ivaPagarCretido = 0;
            let ivaPagarDebito = 0;
            let ivaRecuperarCretido = 0;
            let ivaRecuperarDebito = 0;
            let ivaReembolsosPedidosCretido = 0;
            let ivaReembolsosPedidosDebito = 0;
            let impostoSeloCretido = 0;
            let impostoSeloDebito = 0;
            let impostoAutarquicosCretido = 0;
            let impostoAutarquicosDebito = 0;
            let retificacoesImpostosContribuicoesOutrosTributosCretido = 0;
            let retificacoesImpostosContribuicoesOutrosTributosDebito = 0;
            let activosPorImpostosDiferidosCretido = 0;
            let activosPorImpostosDiferidosDebito = 0;
            let passivosPorImpostosDiferidosCretido = 0;
            let passivosPorImpostosDiferidosDebito = 0;
            let contribuicoesParaINSSCretido = 0;
            let contribuicoesParaINSSDebito = 0;
            let adiantamentoAosOrgaosSociaisCretido = 0;
            let adiantamentoAosOrgaosSociaisDebito = 0;
            let adiantamentoAosTrabalhadoresCretido = 0;
            let adiantamentoAosTrabalhadoresDebito = 0;
            let beneficiosPosEmpregoCretido = 0;
            let beneficiosPosEmpregoDebito = 0;
            let outrasOperacoesComOergaosSociaisCretido = 0;
            let outrasOperacoesComOergaosSociaisDebito = 0;
            let outrasOperacoesComTrabalhadoresCretido = 0;
            let outrasOperacoesComTrabalhadoresDebito = 0;
            let estadoOutrosOrganismosPublicosCretido = 0;
            let estadoOutrosOrganismosPublicosDebito = 0;
            let entidadesPrivadasCretido = 0;
            let entidadesPrivadasDebito = 0;
            let outrasEntidadesCretido = 0;
            let outrasEntidadesDebito = 0;
            let obrigacionistasCretido = 0;
            let obrigacionistasDebito = 0;
            let emprestimosConcedidosCretido = 0;
            let emprestimosConcedidosDebito = 0;
            let adiantamentoPorContaLucrosCretido = 0;
            let adiantamentoPorContaLucrosDebito = 0;
            let resultadosAtribuidosCretido = 0;
            let resultadosAtribuidosDebito = 0;
            let lucrosDisponiveisCretido = 0;
            let lucrosDisponiveisDebito = 0;
            let outrasOperacoesCretido = 0;
            let outrasOperacoesDebito = 0;
            let estadoOutrosOrganismosPublicos2Cretido = 0;
            let estadoOutrosOrganismosPublicos2Debito = 0;
            let entidadesPrivadas2Cretido = 0;
            let entidadesPrivadas2Debito = 0;
            let devedoresDiversosCretido = 0;
            let devedoresDiversosDebito = 0;
            let fornecedoresInvestimentosCapitalCCCretido = 0;
            let fornecedoresInvestimentosCapitalCCDebito = 0;
            let fornecedoresInvestimentosCapitalTituloApagarCretido = 0;
            let fornecedoresInvestimentosCapitalTituloApagarDebito = 0;
            let fornecedoresInvestimentosCapitalAdiantamentosCretido = 0;
            let fornecedoresInvestimentosCapitalAdiantamentosDebito = 0;
            let fornecedoresInvestimentosCapitalLocacaoFinanceiraCretido = 0;
            let fornecedoresInvestimentosCapitalLocacaoFinanceiraDebito = 0;

            let outrasOperacoeswaCretido = 0;
            let outrasOperacoeswaDebito = 0;

            let remuneracaoApagarAosOrgaosSociaisCretido = 0;
            let remuneracaoApagarAosOrgaosSociaisDebito = 0;
            let remuneracaoApagarAosTrabalhadoresCretido = 0;
            let remuneracaoApagarAosTrabalhadoresDebito = 0;

            let beneficiosPosEmpregowa4513Cretido = 0;
            let beneficiosPosEmpregowa4513Debito = 0;

            let outrasOperacoesComOrgaosSociaisCretido = 0;
            let outrasOperacoesComOrgaosSociaisDebito = 0;
            let outrasOperacoesComOrgaosTrabalhadoresCretido = 0;
            let outrasOperacoesComOrgaosTrabalhadoresDebito = 0;
            let sindicatosCretido = 0;
            let sindicatosDebito = 0;
            let credoresPorSubscricoesNaoLiberadasCretido = 0;
            let credoresPorSubscricoesNaoLiberadasDebito = 0;
            let obricionistasCretido = 0;
            let obricionistasDebito = 0;
            let consultoresAssessoresIntermediariosCretido = 0;
            let consultoresAssessoresIntermediariosDebito = 0;
            let emprestimosObtidosCretido = 0;
            let emprestimosObtidosDebito = 0;

            let resultadosAtribuidoswaCretido = 0;
            let resultadosAtribuidoswaDebito = 0;
            let lucrosDisponiveiswaCretido = 0;
            let lucrosDisponiveiswaDebito = 0;

            let credoresDiversosCretido = 0;
            let credoresDiversosDebito = 0;
            let clientesCretido = 0;
            let clientesDebito = 0;
            let credoresDeversosCretido = 0;
            let credoresDeversosDebito = 0;
            let precessosJudiciaisEmCursoCretido = 0;
            let precessosJudiciaisEmCursoDebito = 0;
            let acidentesNoTrabalhoDoencasProfissionaisCretido = 0;
            let acidentesNoTrabalhoDoencasProfissionaisDebito = 0;
            let impostosCretido = 0;
            let impostosDebito = 0;
            let reestruturacaoNegociosCretido = 0;
            let reestruturacaoNegociosDebito = 0;
            let contratosOnorososCretido = 0;
            let contratosOnorososDebito = 0;
            let garantiasClientesCretido = 0;
            let garantiasClientesDebito = 0;
            let perdasEmContratosConstrucaoCretido = 0;
            let perdasEmContratosConstrucaoDebito = 0;
            let outrasProvisoesCretido = 0;
            let outrasProvisoesDebito = 0;
            let jurosAPagarCretido = 0;
            let jurosAPagarDebito = 0;
            let remuneracoesAPagarCretido = 0;
            let remuneracoesAPagarDebito = 0;
            let outrosAcrescimosGastosCretido = 0;
            let outrosAcrescimosGastosDebito = 0;
            let premiosEmissaoObrigacoesCretido = 0;
            let premiosEmissaoObrigacoesDebito = 0;
            let premiosEmissaoTitulosParticipacaoCretido = 0;
            let premiosEmissaoTitulosParticipacaoDebito = 0;
            let reditosContratosConstrucaoCretido = 0;
            let reditosContratosConstrucaoDebito = 0;
            let subsidiosParaInvestimentosCretido = 0;
            let subsidiosParaInvestimentosDebito = 0;
            let outrosRendimentosDiferidosCretido = 0;
            let outrosRendimentosDiferidosDebito = 0;
            let jurosReceberCretido = 0;
            let jurosReceberDebito = 0;

            let reditosContratosConstrucaowaCretido = 0;
            let reditosContratosConstrucaowaDebito = 0;

            let outrosAcrescimosRendimentosCretido = 0;
            let outrosAcrescimosRendimentosDebito = 0;
            let descontoEmissaoObrigacoesCretido = 0;
            let descontoEmissaoObrigacoesDebito = 0;
            let descontoEmissaoTitulosParticipacaoCretido = 0;
            let descontoEmissaoTitulosParticipacaoDebito = 0;
            let outroGastosDiferidosCretido = 0;
            let outroGastosDiferidosDebito = 0;
            let capitalCretido = 0;
            let capitalDebito = 0;
            let valorNominalCretido = 0;
            let valorNominalDebito = 0;
            let desontosPremiosCretido = 0;
            let desontosPremiosDebito = 0;
            let prestacoesSuplementaresCretido = 0;
            let prestacoesSuplementaresDebito = 0;
            let premiosEmissaoAccoesQuotasCretido = 0;
            let premiosEmissaoAccoesQuotasDebito = 0;
            let reservasLegaisCretido = 0;
            let reservasLegaisDebito = 0;
            let reservasEstatutariasCretido = 0;
            let reservasEstatutariasDebito = 0;
            let reservasLivresCretido = 0;
            let reservasLivresDebito = 0;
            let antesImpostosDiferidosCretido = 0;
            let antesImpostosDiferidosDebito = 0;
            let aimpostosDiferidosCretido = 0;
            let aimpostosDiferidosDebito = 0;
            let antesImpostosDiferidos2Cretido = 0;
            let antesImpostosDiferidos2Debito = 0;
            let aimpostosDiferidos2Cretido = 0;
            let aimpostosDiferidos2Debito = 0;
            let variacaoJustoValorInstrumentosFinanceirosDisponiveisParaVendaCretido = 0;
            let variacaoJustoValorInstrumentosFinanceirosDisponiveisParaVendaDebito = 0;
            let ajustamentosPorImpostosDiferidosCretido = 0;
            let ajustamentosPorImpostosDiferidosDebito = 0;
            let outrasVariacoesCretido = 0;
            let outrasVariacoesDebito = 0;
            let resultadosTransitadosCretido = 0;
            let resultadosTransitadosDebito = 0;
            let deMercadoriasCretido = 0;
            let deMercadoriasDebito = 0;
            let materiasPrimas2Cretido = 0;
            let materiasPrimas2Debito = 0;
            let materiasAuxiliares2Cretido = 0;
            let materiasAuxiliares2Debito = 0;
            let materiais2Cretido = 0;
            let materiais2Debito = 0;
            let activosBiologicosCretido = 0;
            let activosBiologicosDebito = 0;
            let produtosAcabadosIntermediosCretido = 0;
            let produtosAcabadosIntermediosDebito = 0;
            let subprodutosDesperdiciosResiduosRefugosCretido = 0;
            let subprodutosDesperdiciosResiduosRefugosDebito = 0;
            let produtosServicosEmCursosCretido = 0;
            let produtosServicosEmCursosDebito = 0;
            let remuneracaoDosOrgaosSociaisCretido = 0;
            let remuneracaoDosOrgaosSociaisDebito = 0;
            let remuneracaoDosTrabalhadoresCretido = 0;
            let remuneracaoDosTrabalhadoresDebito = 0;
            let encargosSobreRemuneracoesCretido = 0;
            let encargosSobreRemuneracoesDebito = 0;

            let beneficiosPosEmpregowaCretido = 0;
            let beneficiosPosEmpregowaDebito = 0;

            let ajudasCustosTributaveisCretido = 0;
            let ajudasCustosTributaveisDebito = 0;
            let ajudasCustosNaoTributaveisCretido = 0;
            let ajudasCustosNaoTributaveisDebito = 0;
            let indemnizacoesRiscoSeguravelCretido = 0;
            let indemnizacoesRiscoSeguravelDebito = 0;
            let indemnizacoesOutrasCretido = 0;
            let indemnizacoesOutrasDebito = 0;
            let segurosAcidentesNoTrabalhoDoencasProfissionaisCretido = 0;
            let segurosAcidentesNoTrabalhoDoencasProfissionaisDebito = 0;
            let gastosAccaoSocialCretido = 0;
            let gastosAccaoSocialDebito = 0;
            let outrosGastosComPessoalCretido = 0;
            let outrosGastosComPessoalDebito = 0;
            let subcontratosCretido = 0;
            let subcontratosDebito = 0;
            let aguaCretido = 0;
            let aguaDebito = 0;
            let eletricidadeCretido = 0;
            let eletricidadeDebito = 0;
            let gasoleoViaturasLigeirasPassageirosCretido = 0;
            let gasoleoViaturasLigeirasPassageirosDebito = 0;
            let gasoleoOutrosCretido = 0;
            let gasoleoOutrosDebito = 0;
            let restantesCombustiveisViaturasLigeirasPassageirosCretido = 0;
            let restantesCombustiveisViaturasLigeirasPassageirosDebito = 0;
            let restantesCombustiveisOutrosCretido = 0;
            let restantesCombustiveisOutrosDebito = 0;
            let lubrificantesViaturasLigeirasPassageirosCretido = 0;
            let lubrificantesViaturasLigeirasPassageirosDebito = 0;
            let lubrificantesOutrosCretido = 0;
            let lubrificantesOutrosDebito = 0;
            let ferramentasUtensiliosDesgasteRapidoCretido = 0;
            let ferramentasUtensiliosDesgasteRapidoDebito = 0;
            let materialManutencaoReparacaoViaturasLigeirasPassageirosCretido = 0;
            let materialManutencaoReparacaoViaturasLigeirasPassageirosDebito = 0;
            let materialManutencaoReparacaoOutrosCretido = 0;
            let materialManutencaoReparacaoOutrosDebito = 0;
            let materialEscritorioCretido = 0;
            let materialEscritorioDebito = 0;
            let livrosDocumentacaoTecnicaCretido = 0;
            let livrosDocumentacaoTecnicaDebito = 0;
            let artigosParaOfertasCretido = 0;
            let artigosParaOfertasDebito = 0;
            let manutencaoReparacaoCretido = 0;
            let manutencaoReparacaoDebito = 0;
            let transporteCargaCretido = 0;
            let transporteCargaDebito = 0;

            let transportePessoalCretido = 0;
            let transportePessoalDebito = 0;

            let comunicacoesCretido = 0;
            let comunicacoesDebito = 0;
            let honorariosCretido = 0;
            let honorariosDebito = 0;
            let comissoesIntermediariosCretido = 0;
            let comissoesIntermediariosDebito = 0;
            let publicidadePropagandaCampanhasPublicitariasCretido = 0;
            let publicidadePropagandaCampanhasPublicitariasDebito = 0;
            let publicidadePropagandaOutrosCretido = 0;
            let publicidadePropagandaOutrosDebito = 0;
            let deslocacoesEstadiasEmServicosCretido = 0;
            let deslocacoesEstadiasEmServicosDebito = 0;
            let deslocacoesEstadiasOutrasDeslocacoesCretido = 0;
            let deslocacoesEstadiasOutrasDeslocacoesDebito = 0;
            let despesasRepresentacaoCretido = 0;
            let despesasRepresentacaoDebito = 0;
            let contenciosoNotariadoCretido = 0;
            let contenciosoNotariadoDebito = 0;
            let rendasAlugueresLocacaoFinanceiraCretido = 0;
            let rendasAlugueresLocacaoFinanceiraDebito = 0;
            let seguroVidaAcidentesPessoaisDoencaCretido = 0;
            let seguroVidaAcidentesPessoaisDoencaDebito = 0;

            let royaltiesCretido = 0;
            let royaltiesDebito = 0;

            let limpezaHigieneConfortoCretido = 0;
            let limpezaHigieneConfortoDebito = 0;
            let vigilanciaSegurancaCretido = 0;
            let trabalhosEspecializadosCretido = 0;
            let trabalhosEspecializadosDebito = 0;
            let outrosFornecimentosServicosCretido = 0;
            let outrosFornecimentosServicosDebito = 0;
            let ajustamentosInventariosParaValorRealizavelLiquidoCretido = 0;
            let ajustamentosInventariosParaValorRealizavelLiquidoDebito = 0;
            let investimentosFinanceiros1Cretido = 0;
            let investimentosFinanceiros1Debito = 0;

            let activosTangiveiswqCretido = 0;
            let activosTangiveiswqDebito = 0;
            let activosIntangiveiswqCretido = 0;
            let activosIntangiveiswqDebito = 0;

            let activosNaoCorrentesDetidosParaVendaCretido = 0;
            let activosNaoCorrentesDetidosParaVendaDebito = 0;
            let activosTagiveisInvestimentoCretido = 0;
            let activosTagiveisInvestimentoDebito = 0;
            let activosExploracaoAvaliacaoRecursosMineraisCretido = 0;
            let activosExploracaoAvaliacaoRecursosMineraisDebito = 0;
            let contasReceberAjustamentosDentroDosLimitesFiscaisCretido = 0;
            let contasReceberAjustamentosDentroDosLimitesFiscaisDebito = 0;
            let contasReceberAjustamentosParaAlemDosLimitesFiscaisCretido = 0;
            let contasReceberAjustamentosParaAlemDosLimitesFiscaisDebito = 0;

            let activosTangiveiswq1Cretido = 0;
            let activosTangiveiswq1Debito = 0;
            let activosIntangiveiswq1Cretido = 0;
            let activosIntangiveiswq1Debito = 0;

            let activosTangiveisInvestimentos653Cretido = 0;
            let activosTangiveisInvestimentos653Debito = 0;
            let activosExploracaoAvaliacaoRecursosMinerais327Cretido = 0;
            let activosExploracaoAvaliacaoRecursosMinerais3287Debito = 0;
            let processosJudiciaisEmCursoCretido = 0;
            let processosJudiciaisEmCursoDebito = 0;
            let acidentesNoTrabalhoDoencasProfissionais482Cretido = 0;
            let acidentesNoTrabalhoDoencasProfissionais482Debito = 0;
            let impostos483Cretido = 0;
            let impostos483Debito = 0;
            let reestruturacaoNegocios484Cretido = 0;
            let reestruturacaoNegocios484Debito = 0;
            let contratosOnerososCretido = 0;
            let contratosOnerososDebito = 0;
            let garantiasClientes486Cretido = 0;
            let garantiasClientes486Debito = 0;
            let perdasContratosConstrucaoCretido = 0;
            let perdasContratosConstrucaoDebito = 0;
            let outrasProvisoes489Cretido = 0;
            let outrasProvisoes489Debito = 0;
            let instrumentosFinanceiros7412Cretido = 0;
            let instrumentosFinanceiros7412Debito = 0;

            let activosTangiveisInvestimento672Cretido = 0;
            let activosTangiveisInvestimento672Debito = 0;
            let activosBiologicos673Cretido = 0;
            let activosBiologicos673Debito = 0;
            let despesasInvestigacaoPesquisaCretido = 0;
            let despesasInvestigacaoPesquisaDebito = 0;
            let direitosAduaneirosCretido = 0;
            let direitosAduaneirosDebito = 0;
            let impostoSobreValorAcrescentadoCretido = 0;
            let impostoSobreValorAcrescentadoDebito = 0;
            let impostoSelo6823Cretido = 0;
            let impostoSelo6823Debito = 0;
            let impostoSobreVeiculosCretido = 0;
            let impostoSobreVeiculosDebito = 0;
            let impostoAutarquicos6825Cretido = 0;
            let impostoAutarquicos6825Debito = 0;
            let alienacao6831Cretido = 0;
            let alienacao6831Debito = 0;
            let abates6832Cretido = 0;
            let abates6832Debito = 0;
            let sinistros6833Cretido = 0;
            let sinistros6833Debito = 0;
            let sinistros6841Cretido = 0;
            let sinistros6841Debito = 0;
            let quebrasCretido = 0;
            let quebrasDebito = 0;
            let outrasCretido = 0;
            let outrasDebito = 0;
            let quotizacoesCretido = 0;
            let quotizacoesDebito = 0;
            let despesasConfidenciaisCretido = 0;
            let despesasConfidenciaisDebito = 0;
            let ofertasAmostrasInventariosCretido = 0;
            let ofertasAmostrasInventariosDebito = 0;
            let programasResponsabilidadeSocialCretido = 0;
            let programasResponsabilidadeSocialDebito = 0;
            let donativosAoEstadoCretido = 0;
            let donativosAoEstadoDebito = 0;
            let outrosDonativosAmbitoMecenatoCretido = 0;
            let outrosDonativosAmbitoMecenatoDebito = 0;
            let multasPenalidadesCretido = 0;
            let multasPenalidadesDebito = 0;
            let outros6899Cretido = 0;
            let outros6899Debito = 0;
            let emprestimosBancariosCretido = 0;
            let emprestimosBancariosDebito = 0;
            let emprestimosObrigacionistasTitulosParticipacaoCretido = 0;
            let emprestimosObrigacionistasTitulosParticipacaoDebito = 0;
            let emprestimosSociosAccionistasProprietariosCretido = 0;
            let emprestimosSociosAccionistasProprietariosDebito = 0;
            let outrosEmprestimosCretido = 0;
            let outrosEmprestimosDebito = 0;
            let descontoTitulosCretido = 0;
            let descontoTitulosDebito = 0;
            let jurosDeMoraCretido = 0;
            let jurosDeMoraDebito = 0;
            let jurosCompensatoriosCretido = 0;
            let jurosCompensatoriosDebito = 0;
            let outrosJurosCretido = 0;
            let outrosJurosDebito = 0;
            let realizadasCretido = 0;
            let realizadasDebito = 0;
            let naoRealizadasCretido = 0;
            let naoRealizadasDebito = 0;
            let descontosProdutoPagamentoConcedidosCretido = 0;
            let descontosProdutoPagamentoConcedidosDebito = 0;
            let servicosBancariosCretido = 0;
            let servicosBancariosDebito = 0;
            let diversosNaoEspecificadosCretido = 0;
            let diversosNaoEspecificadosDebito = 0;
            let produtosAcabadosIntermedios6121Cretido = 0;
            let produtosAcabadosIntermedios6121Debito = 0;
            let subprodutosDesperdiciosResiduosRefugos6122Cretido = 0;
            let subprodutosDesperdiciosResiduosRefugos6122Debito = 0;
            let activosBiologicosqqCretido = 0;
            let activosBiologicosqqDebito = 0;
            let ivaVendasComImpostoIncluidoCretido = 0;
            let ivaVendasComImpostoIncluidoDebito = 0;
            let devolucaoVendasCretido = 0;
            let devolucaoVendasDebito = 0;
            let descontosAbatimentosqqCretido = 0;
            let descontosAbatimentosqqDebito = 0;
            let ivaPrestacaoServicosComImpostoIncluidoCretido = 0;
            let ivaPrestacaoServicosComImpostoIncluidoDebito = 0;
            let descontosAbatimentos2Cretido = 0;
            let descontosAbatimentos2Debito = 0;

            let investimentosFinanceiroswaCretido = 0;
            let investimentosFinanceiroswaDebito = 0;
            let activosTangiveiswaCretido = 0;
            let activosTangiveiswaDebito = 0;
            let activosIntangiveiswaCretido = 0;
            let activosIntangiveiswaDebito = 0;

            let investimentosEmCursoCretido = 0;
            let investimentosEmCursoDebito = 0;
            let ajustamentosInvestimentosParaValorRealizavelLiquidoCretido = 0;
            let ajustamentosInvestimentosParaValorRealizavelLiquidoDebito = 0;
            let inventariosFinanceirosCretido = 0;
            let inventariosFinanceirosDebito = 0;

            let activosTangiveiswq2Cretido = 0;
            let activosTangiveiswq2Debito = 0;
            let activosIntangiveiswq2Cretido = 0;
            let activosIntangiveiswq2Debito = 0;

            let activosNaoCorrentesDetidosParaVendawaCretido = 0;
            let activosNaoCorrentesDetidosParaVendawaDebito = 0;

            let activosTangiveisInvestimentowaCretido = 0;
            let activosTangiveisInvestimentowaDebito = 0;

            let activosExploracaoAvaliacaoRecursosMineraisqqCretido = 0;
            let activosExploracaoAvaliacaoRecursosMineraisqqDebito = 0;
            let contasReceberCretido = 0;
            let contasReceberDebito = 0;

            let activosTangiveiswq3Cretido = 0;
            let activosTangiveiswq3Debito = 0;
            let activosIntangiveiswq3Cretido = 0;
            let activosIntangiveiswq3Debito = 0;

            let activosTangiveisInvestimento7423Cretido = 0;
            let activosTangiveisInvestimento7423Debito = 0;
            let activosExploracaoAvaliacaoRecursosMineraisqqqCretido = 0;
            let activosExploracaoAvaliacaoRecursosMineraisqqqDebito = 0;
            let processosJudiciaisEmCursoqqCretido = 0;
            let processosJudiciaisEmCursoqqDebito = 0;
            let acidentesTrabalhoDoencasProfissionaisCretido = 0;
            let acidentesTrabalhoDoencasProfissionaisDebito = 0;
            let impostosqqCretido = 0;
            let impostosqqDebito = 0;
            let reestruturacaoNegociosqqCretido = 0;
            let reestruturacaoNegociosqqDebito = 0;
            let contratosOnerososqqCretido = 0;
            let contratosOnerososqqDebito = 0;
            let garantiasClientesqqCretido = 0;
            let garantiasClientesqqDebito = 0;
            let perdasEmContratosConstrucaoqqCretido = 0;
            let perdasEmContratosConstrucaoqqDebito = 0;
            let outrasProvisoesqqCretido = 0;
            let outrasProvisoesqqDebito = 0;
            let servicosSociaisqqCretido = 0;
            let servicosSociaisqqDebito = 0;
            let aluguerEquipamentoqqCretido = 0;
            let aluguerEquipamentoqqDebito = 0;
            let vendaEnergiaCretido = 0;
            let vendaEnergiaDebito = 0;
            let estudosProjectosPesquisasInvestigacoesCretido = 0;
            let estudosProjectosPesquisasInvestigacoesDebito = 0;
            let assistenciaTecnicaCretido = 0;
            let assistenciaTecnicaDebito = 0;

            let royaltieswaCretido = 0;
            let royaltieswaDebito = 0;

            let cargosSociaisExerciciosNoutrasEmpresasCretido = 0;
            let cargosSociaisExerciciosNoutrasEmpresasDebito = 0;
            let outrosRendimentosSuplementaresInerentesAoValorAcrescentadoCretido = 0;
            let outrosRendimentosSuplementaresInerentesAoValorAcrescentadoDebito = 0;
            let doEstadoOutrosOrganismosPublicos7611Cretido = 0;
            let doEstadoOutrosOrganismosPublicos7611Debito = 0;
            let deOutrasEntidades7619Cretido = 0;
            let deOutrasEntidades7619Debito = 0;
            let doEstadoOutrosOrganismosPublicos7621Cretido = 0;
            let doEstadoOutrosOrganismosPublicos7621Debito = 0;
            let deOutras7629EntidadesCretido = 0;
            let deOutras7629EntidadesDebito = 0;
            let alienacao7631Cretido = 0;
            let alienacao7631Debito = 0;
            let sinistros7632Cretido = 0;
            let sinistros7632Debito = 0;
            let sinistros7641Cretido = 0;
            let sinistros7641Debito = 0;
            let sobras7642Cretido = 0;
            let sobras7642Debito = 0;
            let outros7649Cretido = 0;
            let outros7649Debito = 0;
            let restituicaoImpostosCretido = 0;
            let restituicaoImpostosDebito = 0;
            let beneficiosPenalidaesContratuaisCretido = 0;
            let beneficiosPenalidaesContratuaisDebito = 0;
            let excessoEstimativaParaImpostoCretido = 0;
            let excessoEstimativaParaImpostoDebito = 0;
            let outros7699Cretido = 0;
            let outros7699Debito = 0;
            let depositoBancariosCretido = 0;
            let depositoBancariosDebito = 0;
            let emprestimosCretido = 0;
            let emprestimosDebito = 0;
            let obrigacoesTitulosParticipacaoCretido = 0;
            let obrigacoesTitulosParticipacaoDebito = 0;
            let outrasAplicacoesTesourariaCretido = 0;
            let outrasAplicacoesTesourariaDebito = 0;
            let outrosJurosqqCretido = 0;
            let outrosJurosqqDebito = 0;
            let rendimentosActivosTangiveisInvestimentoCretido = 0;
            let rendimentosActivosTangiveisInvestimentoDebito = 0;
            let rendimentosInstrumentosFianceirosCretido = 0;
            let rendimentosInstrumentosFianceirosDebito = 0;
            let realizadas7841Cretido = 0;
            let realizadas7841Debito = 0;
            let naoRealizadas7842Cretido = 0;
            let naoRealizadas7842Debito = 0;
            let descontosProntoPagamentoObtidosCretido = 0;
            let descontosProntoPagamentoObtidosDebito = 0;
            let outrosRendimentosGanhosFinanceirosCretido = 0;
            let outrosRendimentosGanhosFinanceirosDebito = 0;
            let instrumentosFinanceiros791Cretido = 0;
            let instrumentosFinanceiros791Debito = 0;

            let activosTangiveisInvestimento792Cretido = 0;
            let activosTangiveisInvestimento792Debito = 0;
            let activosBiologicoswqCretido = 0;
            let activosBiologicoswqDebito = 0;













            let j = 0;
            let indices = [];
            function currencyFormat(num) {
                return num.toFixed(2).replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,')
            }
            fetch(url3)
                .then(res => res.json())
                .then(content => {
                    const data = content[0]['planoDeContas'];
                    console.log(content[0]);
                    for (var i = 0; i < data.length; i++) {
                        let lista = {
                            'name': `${content[0]['planoDeContas'][i]['tipoConta']}`,
                            'value': `${content[0]['planoDeContas'][i]['valor']}`,
                            'numero': `${content[0]['planoDeContas'][i]['numeroConta']}`,
                            'operacao': `${content[0]['planoDeContas'][i]['operacao']}`,
                        }
                        obj.push(lista);
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '11') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                caixaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                caixaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '121') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                depositowwaOrdemCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                depositowwaOrdemDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '122') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                depositoComPreAvisowwaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                depositoComPreAvisowwaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '123') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                depositoPrazowwaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                depositoPrazowwaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '131') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                derivadosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                derivadosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '132') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                detidosParaNegociacaoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                detidosParaNegociacaoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '133') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrosInstrumentosFinanceirosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrosInstrumentosFinanceirosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '21') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                comprasCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                comprasDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '211') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                mercadoriasCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                mercadoriasDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '2121') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                materiasPrimasCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                materiasPrimasDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '2122') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                materiasAuxiliaresCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                materiasAuxiliaresDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '2123') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                materiaisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                materiaisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '21231') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                combustiveisLubrificantesCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                combustiveisLubrificantesDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '21232') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                embalagensComerciaisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                embalagensComerciaisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '21233') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                pecasSobresalentesCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                pecasSobresalentesDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '21239') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                materiaisDiversosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                materiaisDiversosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '217') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                devolucoesComprasCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                devolucoesComprasDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '218') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                descontosAbatimentosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                descontosAbatimentosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '221') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                mercadoriasTransitoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                mercadoriasTransitoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '222') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                mercadoriasPoderCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                mercadoriasPoderDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '231') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                produtosAcabadosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                produtosAcabadosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '241') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                subprodutosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                subprodutosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '242') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                desperdiciosResiduosRefugosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                desperdiciosResiduosRefugosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '25') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                produtosServicosEmCursoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                produtosServicosEmCursoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '261') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                msteriasPrimas2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                msteriasPrimas2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '262') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                msteriasAuxiliares2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                msteriasAuxiliares2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '2631') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                combustiveisLubrificantes2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                combustiveisLubrificantes2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '2632') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                embalagensComerciais2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                embalagensComerciais2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '2633') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                pecasSobresalentes2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                pecasSobresalentes2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '2639') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                materiaisDiversos2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                materiaisDiversos2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '264') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                materiaisPrimasAuxiliaresMateriasEmTransitoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                materiaisPrimasAuxiliaresMateriasEmTransitoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '2711') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                animaisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                animaisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '2712') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                plantasCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                plantasDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '2721') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                animais2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                animais2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '2722') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                plantas2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                plantas2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '282') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                mercadorias2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                mercadorias2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '283') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                produtosAcabadosIntermedios2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                produtosAcabadosIntermedios2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '284') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                subprodutosDesperdiciosResiduosRefugos2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                subprodutosDesperdiciosResiduosRefugos2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '285') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                produtosServicosEmCurso2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                produtosServicosEmCurso2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '286') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                materiasPrimasAuxiliaresMateriais2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                materiasPrimasAuxiliaresMateriais2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '287') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosBiologicos2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosBiologicos2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '292') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                mercadorias3Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                mercadorias3Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '293') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                produtosAcabadosIntermedios3Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                produtosAcabadosIntermedios3Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '294') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                subprodutosDesperdiciosResiduosRefugos3Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                subprodutosDesperdiciosResiduosRefugos3Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '295') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                produtosServicosEmCurso3Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                produtosServicosEmCurso3Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '296') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                materiasPrimasAuxiliaresMateriais3Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                materiasPrimasAuxiliaresMateriais3Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '297') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosBiologicos3Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosBiologicos3Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '311') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                investimentosSubsidiariasCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                investimentosSubsidiariasDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '312') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                investimentosAssociadasCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                investimentosAssociadasDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '313') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                investimentosConjuntamenteControladasCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                investimentosConjuntamenteControladasDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '314') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrosIvestimentosFinanceirosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrosIvestimentosFinanceirosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '315') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                investimentosDetidosAteMaturidadeCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                investimentosDetidosAteMaturidadeDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '316') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrosInvestimentosDisponiveisParaVendaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrosInvestimentosDisponiveisParaVendaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '3211') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                edificiosIndustriaisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                edificiosIndustriaisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '3212') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                edificiosAdministrativosComerciaisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                edificiosAdministrativosComerciaisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '3213') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                edificiosParaHabitacaoOutrosFinsComerciaisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                edificiosParaHabitacaoOutrosFinsComerciaisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '3216') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                viasComunicacaoConstrucoesAfinsCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                viasComunicacaoConstrucoesAfinsDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '322') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                equipamentoBasicoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                equipamentoBasicoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '323') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                mobiliarioEquipamentoAdministrativoSocialCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                mobiliarioEquipamentoAdministrativoSocialDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '324') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                equipamentoTransporte324Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                equipamentoTransporte324Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '325') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                tarasVasilhameCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                tarasVasilhameDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '326') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                ferramentasUtensiliosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                ferramentasUtensiliosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '327') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosExploracaoAvaliacaoRecursosMinerais327Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosExploracaoAvaliacaoRecursosMinerais327Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '329') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrosActivosTangiveisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrosActivosTangiveisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '331') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                despesasDesenvolvimentoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                despesasDesenvolvimentoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '332') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                propriedadeIndustriailOutrosDireitosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                propriedadeIndustriailOutrosDireitosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '333') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                goodWillCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                goodWillDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '334') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosExploracaoAvaliacaoRecursosMinerais2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosExploracaoAvaliacaoRecursosMinerais2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '342') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosTangiveisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosTangiveisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '343') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosIntangiveisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosIntangiveisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '35') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosnaoCorrentesDetidosParaVendaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosnaoCorrentesDetidosParaVendaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '36') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosTangiveisInvestimentoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosTangiveisInvestimentoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '382') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosTangiveis2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosTangiveis2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '383') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosIntangiveis2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosIntangiveis2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '386') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosTangiveisInvestimento2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosTangiveisInvestimento2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '387') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosExploracaoAvaliacaoRecursosMinerais3Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosExploracaoAvaliacaoRecursosMinerais3Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '391') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                investimentosFinanceirosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                investimentosFinanceirosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '392') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosTangiveis3Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosTangiveis3Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '393') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosIntangiveis3Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosIntangiveis3Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '395') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosnaoCorrentesDetidosParaVenda2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosnaoCorrentesDetidosParaVenda2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '396') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosTangiveisInvestimento2aCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosTangiveisInvestimento2aDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '387') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosExploracaoAvaliacaoRecursosMinerais4Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosExploracaoAvaliacaoRecursosMinerais4Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '411') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                clientesCCCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                clientesCCDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '412') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                clientesTitulosReceberCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                clientesTitulosReceberDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '418') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                clientesCobrancaDuvidosaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                clientesCobrancaDuvidosaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '419') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                adiantamentosClientesCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                adiantamentosClientesDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '421') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                fornecedoresCCCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                fornecedoresCCDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '422') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                fornecedoresTitulosPagarCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                fornecedoresTitulosPagarDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '429') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                adiantamentosFornecedoreswaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                adiantamentosFornecedoreswaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4311') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                deCurtoPrazoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                deCurtoPrazoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4312') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                deMedioLongoPrazoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                deMedioLongoPrazoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4321') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                convertiveisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                convertiveisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4322') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                naoConvertivelCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                naoConvertivelDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '433') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                emprestimosTitulosPrestacaoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                emprestimosTitulosPrestacaoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '439') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrosEmprestimosObtidosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrosEmprestimosObtidosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4411') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                estimativaImpostoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                estimativaImpostoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4412') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                pagamentoPorContaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                pagamentoPorContaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4413') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                pagamentoEspecialPorContaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                pagamentoEspecialPorContaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4421') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                rentimentosTrabalhoDependenteCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                rentimentosTrabalhoDependenteDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4422') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                rentimentosProfissionaisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                rentimentosProfissionaisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4423') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                rentimentosCapitalCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                rentimentosCapitalDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4424') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                rentimentosPredialwaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                rentimentosPredialwaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4425') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrosRendimentosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrosRendimentosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '44311') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                inventariosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                inventariosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '44312') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosTangiveisIntagiveisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosTangiveisIntagiveisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '44313') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrosBensServicosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrosBensServicosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '44321') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                inventarios2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                inventarios2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '44322') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosTangiveisIntagiveis2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosTangiveisIntagiveis2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '44323') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrosBensServicos2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrosBensServicos2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '44331') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                operacoesGeraisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                operacoesGeraisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '44332') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                autoconsumosOperacoesGratuitasCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                autoconsumosOperacoesGratuitasDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '44333') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                operacoesEspeciaisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                operacoesEspeciaisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '44341') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                mensaisAfavorSujeitoPassivoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                mensaisAfavorSujeitoPassivoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '44342') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                mensaisAfavorEstadoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                mensaisAfavorEstadoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '44343') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                anuaisPorCalculoProRataDefinitivoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                anuaisPorCalculoProRataDefinitivoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4435') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                ivaApuramentoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                ivaApuramentoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4436') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                ivaLiguidacoesOficiosasCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                ivaLiguidacoesOficiosasDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4437') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                ivaPagarCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                ivaPagarDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4438') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                ivaRecuperarCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                ivaRecuperarDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4439') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                ivaReembolsosPedidosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                ivaReembolsosPedidosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4441') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                impostoSeloCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                impostoSeloDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4442') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                impostoAutarquicosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                impostoAutarquicosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '445') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                retificacoesImpostosContribuicoesOutrosTributosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                retificacoesImpostosContribuicoesOutrosTributosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4461') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosPorImpostosDiferidosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosPorImpostosDiferidosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4462') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                passivosPorImpostosDiferidosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                passivosPorImpostosDiferidosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '449') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                contribuicoesParaINSSCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                contribuicoesParaINSSDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4511') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                adiantamentoAosOrgaosSociaisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                adiantamentoAosOrgaosSociaisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4512') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                adiantamentoAosTrabalhadoresCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                adiantamentoAosTrabalhadoresDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4513') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                beneficiosPosEmprego4513Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                beneficiosPosEmprego4513Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4518') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrasOperacoesComOergaosSociaisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrasOperacoesComOergaosSociaisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4519') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrasOperacoesComTrabalhadoresCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrasOperacoesComTrabalhadoresDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4521') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                estadoOutrosOrganismosPublicosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                estadoOutrosOrganismosPublicosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4522') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                entidadesPrivadasCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                entidadesPrivadasDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4529') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrasEntidadesCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrasEntidadesDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '453') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                obrigacionistasCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                obrigacionistasDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4541') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                emprestimosConcedidosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                emprestimosConcedidosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4542') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                adiantamentoPorContaLucrosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                adiantamentoPorContaLucrosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4543') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                resultadosAtribuidosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                resultadosAtribuidosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4544') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                lucrosDisponiveisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                lucrosDisponiveisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4549') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrasOperacoesCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrasOperacoesDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4551') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                estadoOutrosOrganismosPublicos2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                estadoOutrosOrganismosPublicos2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4552') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                entidadesPrivadas2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                entidadesPrivadas2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '459') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                devedoresDiversosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                devedoresDiversosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4611') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                fornecedoresInvestimentosCapitalCCCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                fornecedoresInvestimentosCapitalCCDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4612') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                fornecedoresInvestimentosCapitalTituloApagarCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                fornecedoresInvestimentosCapitalTituloApagarDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4613') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                fornecedoresInvestimentosCapitalAdiantamentosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                fornecedoresInvestimentosCapitalAdiantamentosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4614') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                fornecedoresInvestimentosCapitalLocacaoFinanceiraCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                fornecedoresInvestimentosCapitalLocacaoFinanceiraDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4619') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrasOperacoeswaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrasOperacoeswaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4621') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                remuneracaoApagarAosOrgaosSociaisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                remuneracaoApagarAosOrgaosSociaisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4622') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                remuneracaoApagarAosTrabalhadoresCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                remuneracaoApagarAosTrabalhadoresDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4623') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                beneficiosPosEmpregowaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                beneficiosPosEmpregowaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4628') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrasOperacoesComOrgaosSociaisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrasOperacoesComOrgaosSociaisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4629') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrasOperacoesComOrgaosTrabalhadoresCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrasOperacoesComOrgaosTrabalhadoresDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '463') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                sindicatosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                sindicatosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '464') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                credoresPorSubscricoesNaoLiberadasCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                credoresPorSubscricoesNaoLiberadasDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '465') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                obricionistasCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                obricionistasDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '466') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                consultoresAssessoresIntermediariosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                consultoresAssessoresIntermediariosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4671') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                emprestimosObtidosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                emprestimosObtidosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4673') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                resultadosAtribuidoswaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                resultadosAtribuidoswaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4674') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                lucrosDisponiveiswaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                lucrosDisponiveiswaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '469') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                credoresDiversosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                credoresDiversosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '471') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                clientesCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                clientesDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '472') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                credoresDeversosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                credoresDeversosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '481') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                precessosJudiciaisEmCursoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                precessosJudiciaisEmCursoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '482') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                acidentesNoTrabalhoDoencasProfissionais482Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                acidentesNoTrabalhoDoencasProfissionais482Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '483') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                impostos483Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                impostos483Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '484') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                reestruturacaoNegocios484Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                reestruturacaoNegocios484Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '485') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                contratosOnorososCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                contratosOnorososDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '486') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                garantiasClientes486Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                garantiasClientes486Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '487') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                perdasEmContratosConstrucaoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                perdasEmContratosConstrucaoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '489') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrasProvisoes489Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrasProvisoes489Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4911') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                jurosAPagarCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                jurosAPagarDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4912') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                remuneracoesAPagarCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                remuneracoesAPagarDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4919') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrosAcrescimosGastosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrosAcrescimosGastosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4921') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                premiosEmissaoObrigacoesCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                premiosEmissaoObrigacoesDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4922') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                premiosEmissaoTitulosParticipacaoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                premiosEmissaoTitulosParticipacaoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4923') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                reditosContratosConstrucaoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                reditosContratosConstrucaoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4924') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                subsidiosParaInvestimentosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                subsidiosParaInvestimentosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4929') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrosRendimentosDiferidosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrosRendimentosDiferidosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4931') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                jurosReceberCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                jurosReceberDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4933') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                reditosContratosConstrucaowaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                reditosContratosConstrucaowaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4939') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrosAcrescimosRendimentosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrosAcrescimosRendimentosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4941') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                descontoEmissaoObrigacoesCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                descontoEmissaoObrigacoesDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4942') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                descontoEmissaoTitulosParticipacaoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                descontoEmissaoTitulosParticipacaoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '4949') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outroGastosDiferidosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outroGastosDiferidosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '51') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                capitalCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                capitalDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '521') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                valorNominalCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                valorNominalDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '522') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                desontosPremiosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                desontosPremiosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '53') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                prestacoesSuplementaresCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                prestacoesSuplementaresDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '54') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                premiosEmissaoAccoesQuotasCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                premiosEmissaoAccoesQuotasDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '551') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                reservasLegaisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                reservasLegaisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '552') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                reservasEstatutariasCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                reservasEstatutariasDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '553') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                reservasLivresCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                reservasLivresDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '5611') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                antesImpostosDiferidosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                antesImpostosDiferidosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '5612') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                aimpostosDiferidosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                aimpostosDiferidosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '5621') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                antesImpostosDiferidos2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                antesImpostosDiferidos2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '5622') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                aimpostosDiferidos2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                aimpostosDiferidos2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '581') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                variacaoJustoValorInstrumentosFinanceirosDisponiveisParaVendaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                variacaoJustoValorInstrumentosFinanceirosDisponiveisParaVendaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '582') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                ajustamentosPorImpostosDiferidosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                ajustamentosPorImpostosDiferidosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '589') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrasVariacoesCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrasVariacoesDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '59') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                resultadosTransitadosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                resultadosTransitadosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6112') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                deMercadoriasCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                deMercadoriasDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '61161') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                materiasPrimas2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                materiasPrimas2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '61162') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                materiasAuxiliares2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                materiasAuxiliares2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '61163') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                materiais2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                materiais2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6117') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosBiologicosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosBiologicosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6121') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                produtosAcabadosIntermedios6121Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                produtosAcabadosIntermedios6121Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6122') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                subprodutosDesperdiciosResiduosRefugos6122Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                subprodutosDesperdiciosResiduosRefugos6122Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6123') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                produtosServicosEmCursosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                produtosServicosEmCursosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '621') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                remuneracaoDosOrgaosSociaisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                remuneracaoDosOrgaosSociaisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '622') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                remuneracaoDosTrabalhadoresCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                remuneracaoDosTrabalhadoresDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '623') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                encargosSobreRemuneracoesCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                encargosSobreRemuneracoesDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '624') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                beneficiosPosEmpregowaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                beneficiosPosEmpregowaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6251') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                ajudasCustosTributaveisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                ajudasCustosTributaveisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6252') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                ajudasCustosNaoTributaveisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                ajudasCustosNaoTributaveisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6261') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                indemnizacoesRiscoSeguravelCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                indemnizacoesRiscoSeguravelDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6262') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                indemnizacoesOutrasCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                indemnizacoesOutrasDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '627') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                segurosAcidentesNoTrabalhoDoencasProfissionaisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                segurosAcidentesNoTrabalhoDoencasProfissionaisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '628') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                gastosAccaoSocialCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                gastosAccaoSocialDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '629') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrosGastosComPessoalCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrosGastosComPessoalDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '631') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                subcontratosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                subcontratosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '63211') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                aguaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                aguaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '63212') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                eletricidadeCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                eletricidadeDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6321311') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                gasoleoViaturasLigeirasPassageirosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                gasoleoViaturasLigeirasPassageirosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6321312') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                gasoleoOutrosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                gasoleoOutrosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6321321') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                restantesCombustiveisViaturasLigeirasPassageirosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                restantesCombustiveisViaturasLigeirasPassageirosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6321322') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                restantesCombustiveisOutrosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                restantesCombustiveisOutrosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6321331') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                lubrificantesViaturasLigeirasPassageirosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                lubrificantesViaturasLigeirasPassageirosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6321332') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                lubrificantesOutrosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                lubrificantesOutrosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '63214') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                ferramentasUtensiliosDesgasteRapidoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                ferramentasUtensiliosDesgasteRapidoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '632151') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                materialManutencaoReparacaoViaturasLigeirasPassageirosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                materialManutencaoReparacaoViaturasLigeirasPassageirosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '632152') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                materialManutencaoReparacaoOutrosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                materialManutencaoReparacaoOutrosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '63216') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                materialEscritorioCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                materialEscritorioDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '63217') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                livrosDocumentacaoTecnicaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                livrosDocumentacaoTecnicaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '63218') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                artigosParaOfertasCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                artigosParaOfertasDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '63221') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                manutencaoReparacaoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                manutencaoReparacaoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '63222') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                transporteCargaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                transporteCargaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '63223') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                transportePessoalCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                transportePessoalDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '63224') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                comunicacoesCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                comunicacoesDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '63225') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                honorariosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                honorariosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '63226') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                comissoesIntermediariosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                comissoesIntermediariosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '632271') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                publicidadePropagandaCampanhasPublicitariasCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                publicidadePropagandaCampanhasPublicitariasDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '632272') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                publicidadePropagandaOutrosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                publicidadePropagandaOutrosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '632281') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                deslocacoesEstadiasEmServicosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                deslocacoesEstadiasEmServicosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '632282') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                deslocacoesEstadiasOutrasDeslocacoesCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                deslocacoesEstadiasOutrasDeslocacoesDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '63229') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                despesasRepresentacaoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                despesasRepresentacaoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '63231') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                contenciosoNotariadoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                contenciosoNotariadoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '632321') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                rendasAlugueresLocacaoFinanceiraCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                rendasAlugueresLocacaoFinanceiraDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '632331') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                seguroVidaAcidentesPessoaisDoencaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                seguroVidaAcidentesPessoaisDoencaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '63234') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                royaltiesCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                royaltiesDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '63235') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                limpezaHigieneConfortoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                limpezaHigieneConfortoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '63236') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                vigilanciaSegurancaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                vigilanciaSegurancaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '63237') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                trabalhosEspecializadosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                trabalhosEspecializadosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '63299') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrosFornecimentosServicosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrosFornecimentosServicosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '641') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                ajustamentosInventariosParaValorRealizavelLiquidoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                ajustamentosInventariosParaValorRealizavelLiquidoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '642') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                investimentosFinanceiros1Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                investimentosFinanceiros1Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '643') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosTangiveiswqCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosTangiveiswqDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '644') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosIntangiveiswqCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosIntangiveiswqDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '645') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosNaoCorrentesDetidosParaVendaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosNaoCorrentesDetidosParaVendaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '646') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosTagiveisInvestimentoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosTagiveisInvestimentoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '647') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosExploracaoAvaliacaoRecursosMineraisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosExploracaoAvaliacaoRecursosMineraisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6481') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                contasReceberAjustamentosDentroDosLimitesFiscaisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                contasReceberAjustamentosDentroDosLimitesFiscaisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6482') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                contasReceberAjustamentosParaAlemDosLimitesFiscaisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                contasReceberAjustamentosParaAlemDosLimitesFiscaisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '651') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosTangiveiswq1Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosTangiveiswq1Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '652') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosIntangiveiswq1Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosIntangiveiswq1Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '653') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosTangiveisInvestimentos653Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosTangiveisInvestimentos653Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '654') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosExploracaoAvaliacaoRecursosMineraisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosExploracaoAvaliacaoRecursosMineraisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '661') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                processosJudiciaisEmCursoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                processosJudiciaisEmCursoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '662') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                acidentesNoTrabalhoDoencasProfissionaisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                acidentesNoTrabalhoDoencasProfissionaisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '663') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                impostosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                impostosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '664') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                reestruturacaoNegociosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                reestruturacaoNegociosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '665') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                contratosOnerososCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                contratosOnerososDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '666') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                garantiasClientesCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                garantiasClientesDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '667') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                perdasContratosConstrucaoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                perdasContratosConstrucaoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '669') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrasProvisoesCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrasProvisoesDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '671') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                instrumentosFinanceirosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                instrumentosFinanceirosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '672') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosTangiveisInvestimento672Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosTangiveisInvestimento672Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '673') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosBiologicos673Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosBiologicos673Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '681') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                despesasInvestigacaoPesquisaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                despesasInvestigacaoPesquisaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6821') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                direitosAduaneirosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                direitosAduaneirosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6822') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                impostoSobreValorAcrescentadoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                impostoSobreValorAcrescentadoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6823') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                impostoSelo6823Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                impostoSelo6823Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6824') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                impostoSobreVeiculosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                impostoSobreVeiculosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6825') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                impostoAutarquicos6825Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                impostoAutarquicos6825Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6831') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                alienacao6831Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                alienacao6831Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6832') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                abates6832Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                abates6832Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6833') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                sinistros6833Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                sinistros6833Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6841') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                sinistros6841Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                sinistros6841Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6842') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                quebrasCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                quebrasDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6849') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrasCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrasDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6891') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                quotizacoesCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                quotizacoesDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6892') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                despesasConfidenciaisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                despesasConfidenciaisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6893') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                ofertasAmostrasInventariosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                ofertasAmostrasInventariosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6894') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                programasResponsabilidadeSocialCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                programasResponsabilidadeSocialDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '68951') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                donativosAoEstadoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                donativosAoEstadoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '68952') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrosDonativosAmbitoMecenatoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrosDonativosAmbitoMecenatoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6896') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                multasPenalidadesCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                multasPenalidadesDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6899') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outros6899Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outros6899Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6911') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                emprestimosBancariosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                emprestimosBancariosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6912') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                emprestimosObrigacionistasTitulosParticipacaoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                emprestimosObrigacionistasTitulosParticipacaoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6913') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                emprestimosSociosAccionistasProprietariosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                emprestimosSociosAccionistasProprietariosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6914') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrosEmprestimosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrosEmprestimosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6915') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                descontoTitulosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                descontoTitulosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '69161') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                jurosDeMoraCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                jurosDeMoraDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '69162') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                jurosCompensatoriosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                jurosCompensatoriosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6919') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrosJurosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrosJurosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6941') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                realizadasCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                realizadasDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6942') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                naoRealizadasCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                naoRealizadasDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '695') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                descontosProdutoPagamentoConcedidosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                descontosProdutoPagamentoConcedidosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6981') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                servicosBancariosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                servicosBancariosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '6989') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                diversosNaoEspecificadosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                diversosNaoEspecificadosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '711') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                mercadoriasCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                mercadoriasDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '712') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                produtosAcabadosIntermediosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                produtosAcabadosIntermediosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '713') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                subprodutosDesperdiciosResiduosRefugosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                subprodutosDesperdiciosResiduosRefugosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '714') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosBiologicosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosBiologicosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '715') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                ivaVendasComImpostoIncluidoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                ivaVendasComImpostoIncluidoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '716') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                devolucaoVendasCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                devolucaoVendasDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '717') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                descontosAbatimentosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                descontosAbatimentosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '721') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                ivaPrestacaoServicosComImpostoIncluidoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                ivaPrestacaoServicosComImpostoIncluidoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '726') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                descontosAbatimentos2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                descontosAbatimentos2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '731') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                investimentosFinanceiroswaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                investimentosFinanceiroswaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '732') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosTangiveiswaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosTangiveiswaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '733') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosIntangiveiswaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosIntangiveiswaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '734') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                investimentosEmCursoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                investimentosEmCursoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7411') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                ajustamentosInvestimentosParaValorRealizavelLiquidoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                ajustamentosInvestimentosParaValorRealizavelLiquidoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7412') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                inventariosFinanceiros7412Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                inventariosFinanceiros7412Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7413') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosTangiveiswq2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosTangiveiswq2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7414') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosIntangiveiswq2Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosIntangiveiswq2Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7415') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosNaoCorrentesDetidosParaVendawaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosNaoCorrentesDetidosParaVendawaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7416') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosTangiveisInvestimentoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosTangiveisInvestimentoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7417') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosExploracaoAvaliacaoRecursosMineraisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosExploracaoAvaliacaoRecursosMineraisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7418') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                contasReceberCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                contasReceberDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7421') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosTangiveiswq3Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosTangiveiswq3Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7422') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosIntangiveiswq3Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosIntangiveiswq3Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7423') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosTangiveisInvestimento7423Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosTangiveisInvestimento7423Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7424') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosExploracaoAvaliacaoRecursosMineraisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosExploracaoAvaliacaoRecursosMineraisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7431') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                processosJudiciaisEmCursoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                processosJudiciaisEmCursoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7432') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                acidentesTrabalhoDoencasProfissionaisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                acidentesTrabalhoDoencasProfissionaisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7433') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                impostosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                impostosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7434') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                reestruturacaoNegociosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                reestruturacaoNegociosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7435') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                contratosOnerososCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                contratosOnerososDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7436') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                garantiasClientesCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                garantiasClientesDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7437') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                perdasEmContratosConstrucaoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                perdasEmContratosConstrucaoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7439') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrasProvisoesCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrasProvisoesDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '751') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                servicosSociaisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                servicosSociaisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '752') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                aluguerEquipamentoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                aluguerEquipamentoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '753') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                vendaEnergiaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                vendaEnergiaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '754') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                estudosProjectosPesquisasInvestigacoesCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                estudosProjectosPesquisasInvestigacoesDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '755') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                assistenciaTecnicaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                assistenciaTecnicaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '756') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                royaltieswaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                royaltieswaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '757') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                cargosSociaisExerciciosNoutrasEmpresasCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                cargosSociaisExerciciosNoutrasEmpresasDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '759') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrosRendimentosSuplementaresInerentesAoValorAcrescentadoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrosRendimentosSuplementaresInerentesAoValorAcrescentadoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7611') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                doEstadoOutrosOrganismosPublicos7611Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                doEstadoOutrosOrganismosPublicos7611Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7619') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                deOutrasEntidades7619Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                deOutrasEntidades7619Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7621') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                doEstadoOutrosOrganismosPublicos7621Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                doEstadoOutrosOrganismosPublicos7621Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7629') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                deOutras7629EntidadesCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                deOutras7629EntidadesDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7631') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                alienacao7631Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                alienacao7631Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7632') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                sinistros7632Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                sinistros7632Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7641') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                sinistros7641Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                sinistros7641Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7642') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                sobras7642Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                sobras7642Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7649') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outros7649Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outros7649Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7691') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                restituicaoImpostosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                restituicaoImpostosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7692') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                beneficiosPenalidaesContratuaisCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                beneficiosPenalidaesContratuaisDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7693') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                excessoEstimativaParaImpostoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                excessoEstimativaParaImpostoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7699') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outros7699Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outros7699Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7811') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                depositoBancariosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                depositoBancariosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7812') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                emprestimosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                emprestimosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7813') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                obrigacoesTitulosParticipacaoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                obrigacoesTitulosParticipacaoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7814') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrasAplicacoesTesourariaCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrasAplicacoesTesourariaDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7819') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrosJurosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrosJurosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '782') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                rendimentosActivosTangiveisInvestimentoCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                rendimentosActivosTangiveisInvestimentoDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '783') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                rendimentosInstrumentosFianceirosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                rendimentosInstrumentosFianceirosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7841') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                realizadas7841Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                realizadas7841Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '7842') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                naoRealizadas7842Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                naoRealizadas7842Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '785') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                descontosProntoPagamentoObtidosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                descontosProntoPagamentoObtidosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '789') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                outrosRendimentosGanhosFinanceirosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                outrosRendimentosGanhosFinanceirosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '791') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                instrumentosFinanceiros791Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                instrumentosFinanceiros791Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '792') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosTangiveisInvestimento792Cretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosTangiveisInvestimento792Debito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }
                        if (content[0]['planoDeContas'][i]['numeroConta'] == '793') {
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Crédito') {
                                activosBiologicosCretido += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                            if (content[0]['planoDeContas'][i]['operacao'] == 'Débito') {
                                activosBiologicosDebito += parseInt(content[0]['planoDeContas'][i]['valor']);
                            }
                        }

                    }

                    console.log(obj);
                    obj.forEach(function (d) {
                        if (holder.hasOwnProperty(d.numero)) {
                            holder[d.numero] = parseInt(holder[d.numero]) + parseInt(d.value);
                            total++
                        } else {
                            holder[d.numero] = d.value;
                        }
                    });
                    console.log(holder);
                    tamanho = obj.length - total;
                    console.log(tamanho);
                    for (var i = 0; i < obj.length; i++) {
                        for (var pop in holder) {
                            if (pop == obj[i]['numero']) {
                                if (holder2.hasOwnProperty(pop)) {
                                    console.log('Lucas')
                                } else {
                                    if (pop.length == 1) {
                                        let novoNumero = pop + '0000000'
                                        obj2.push({
                                            "name": parseInt(novoNumero),
                                            "operacao": `${obj[i]['operacao']}`,
                                            "nome": `${obj[i]['name']}`,
                                            "value": `${holder[pop]}`

                                        })
                                    }

                                    if (pop.length == 2) {
                                        let novoNumero = pop + '000000'
                                        obj2.push({
                                            "name": parseInt(novoNumero),
                                            "operacao": `${obj[i]['operacao']}`,
                                            "nome": `${obj[i]['name']}`,
                                            "value": `${holder[pop]}`

                                        })
                                    }
                                    if (pop.length == 3) {
                                        let novoNumero = pop + '00000'
                                        obj2.push({
                                            "name": parseInt(novoNumero),
                                            "operacao": `${obj[i]['operacao']}`,
                                            "nome": `${obj[i]['name']}`,
                                            "value": `${holder[pop]}`

                                        })
                                    }
                                    if (pop.length == 4) {
                                        let novoNumero = pop + '0000'
                                        obj2.push({
                                            "name": parseInt(novoNumero),
                                            "operacao": `${obj[i]['operacao']}`,
                                            "nome": `${obj[i]['name']}`,
                                            "value": `${holder[pop]}`

                                        })
                                    }
                                    if (pop.length == 5) {
                                        let novoNumero = pop + '000'
                                        obj2.push({
                                            "name": parseInt(novoNumero),
                                            "operacao": `${obj[i]['operacao']}`,
                                            "nome": `${obj[i]['name']}`,
                                            "value": `${holder[pop]}`

                                        })
                                    }
                                    if (pop.length == 6) {
                                        let novoNumero = pop + '00'
                                        obj2.push({
                                            "name": parseInt(novoNumero),
                                            "operacao": `${obj[i]['operacao']}`,
                                            "nome": `${obj[i]['name']}`,
                                            "value": `${holder[pop]}`

                                        })
                                    }
                                    if (pop.length == 7) {
                                        let novoNumero = pop + '0'
                                        obj3.push(pop);
                                        obj2.push({
                                            "name": parseInt(novoNumero),
                                            "operacao": `${obj[i]['operacao']}`,
                                            "nome": `${obj[i]['name']}`,
                                            "value": `${holder[pop]}`

                                        })
                                    }

                                    holder2[pop] = obj[i]['name'];
                                    if (pop.slice(0, 1) == "1") {
                                        classe1 += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "2") {
                                        classe2 += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "3") {
                                        classe3 += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "4") {
                                        classe4 += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "5") {
                                        classe5 += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "6") {
                                        classe6 += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "7") {
                                        classe7 += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "8") {
                                        classe8 += parseInt(holder[pop]);
                                    }
                                }

                            }
                        }
                    }

                    let sorted = obj2.sort((a, b) => {
                        return a.name - b.name;
                    });
                    console.log(sorted);
                    for (var i = 0; i < sorted.length; i++) {
                        var newRow = myRecruta.insertRow();
                        var newCell1 = newRow.insertCell(0);
                        var newCell2 = newRow.insertCell(1);
                        var newCell3 = newRow.insertCell(2);
                        var newCell4 = newRow.insertCell(3);
                        var newCell5 = newRow.insertCell(4);
                        var newCell6 = newRow.insertCell(5);
                        var newCell7 = newRow.insertCell(6);
                        let carg = sorted[i]['name'] / 10000000;
                        if (carg == '1.21') {
                            let saldoBanco = depositowwaOrdemCretido - depositowwaOrdemDebito;
                            if (saldoBanco >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(depositowwaOrdemDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(depositowwaOrdemCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBanco)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(depositowwaOrdemDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(depositowwaOrdemCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBanco))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '1.1') {
                            let saldoBalancete = caixaCretido - caixaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(caixaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(caixaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(caixaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(caixaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '1.22') {
                            let saldoBalancete = depositoComPreAvisowwaCretido - depositoComPreAvisowwaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(depositoComPreAvisowwaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(depositoComPreAvisowwaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(depositoComPreAvisowwaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(depositoComPreAvisowwaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '1.23') {
                            let saldoBalancete = depositoPrazowwaCretido - depositoPrazowwaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(depositoPrazowwaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(depositoPrazowwaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(depositoPrazowwaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(depositoPrazowwaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '1.31') {
                            let saldoBalancete = derivadosCretido - derivadosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(derivadosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(derivadosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(derivadosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(derivadosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '1.32') {
                            let saldoBalancete = detidosParaNegociacaoCretido - detidosParaNegociacaoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(detidosParaNegociacaoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(detidosParaNegociacaoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(detidosParaNegociacaoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(detidosParaNegociacaoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '1.33') {
                            let saldoBalancete = outrosInstrumentosFinanceirosCretido - outrosInstrumentosFinanceirosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosInstrumentosFinanceirosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosInstrumentosFinanceirosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosInstrumentosFinanceirosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosInstrumentosFinanceirosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.1') {
                            let saldoBalancete = comprasCretido - comprasDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(comprasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(comprasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(comprasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(comprasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.11') {
                            let saldoBalancete = mercadoriasCretido - mercadoriasDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(mercadoriasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(mercadoriasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(mercadoriasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(mercadoriasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.121') {
                            let saldoBalancete = materiasPrimasCretido - materiasPrimasDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(materiasPrimasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(materiasPrimasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(materiasPrimasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(materiasPrimasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.122') {
                            let saldoBalancete = materiasAuxiliaresCretido - materiasAuxiliaresDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(materiasAuxiliaresDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(materiasAuxiliaresCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(materiasAuxiliaresDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(materiasAuxiliaresCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.123') {
                            let saldoBalancete = materiaisCretido - materiaisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(materiaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(materiaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(materiaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(materiaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.1231') {
                            let saldoBalancete = combustiveisLubrificantesCretido - combustiveisLubrificantesDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(combustiveisLubrificantesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(combustiveisLubrificantesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(combustiveisLubrificantesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(combustiveisLubrificantesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.1232') {
                            let saldoBalancete = embalagensComerciaisCretido - embalagensComerciaisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(embalagensComerciaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(embalagensComerciaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(embalagensComerciaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(embalagensComerciaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.1233') {
                            let saldoBalancete = pecasSobresalentesCretido - pecasSobresalentesDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(pecasSobresalentesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(pecasSobresalentesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(pecasSobresalentesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(pecasSobresalentesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.1239') {
                            let saldoBalancete = materiaisDiversosCretido - materiaisDiversosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(materiaisDiversosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(materiaisDiversosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(materiaisDiversosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(materiaisDiversosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.17') {
                            let saldoBalancete = devolucoesComprasCretido - devolucoesComprasDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(devolucoesComprasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(devolucoesComprasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(devolucoesComprasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(devolucoesComprasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.18') {
                            let saldoBalancete = descontosAbatimentosCretido - descontosAbatimentosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(descontosAbatimentosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(descontosAbatimentosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(descontosAbatimentosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(descontosAbatimentosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.21') {
                            let saldoBalancete = mercadoriasTransitoCretido - mercadoriasTransitoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(mercadoriasTransitoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(mercadoriasTransitoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(mercadoriasTransitoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(mercadoriasTransitoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.22') {
                            let saldoBalancete = mercadoriasPoderCretido - mercadoriasPoderDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(mercadoriasPoderDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(mercadoriasPoderCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(mercadoriasPoderDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(mercadoriasPoderCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.31') {
                            let saldoBalancete = produtosAcabadosCretido - produtosAcabadosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(produtosAcabadosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(produtosAcabadosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(produtosAcabadosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(produtosAcabadosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.41') {
                            let saldoBalancete = subprodutosCretido - subprodutosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(subprodutosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(subprodutosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(subprodutosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(subprodutosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.42') {
                            let saldoBalancete = desperdiciosResiduosRefugosCretido - desperdiciosResiduosRefugosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(desperdiciosResiduosRefugosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(desperdiciosResiduosRefugosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(desperdiciosResiduosRefugosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(desperdiciosResiduosRefugosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.5') {
                            let saldoBalancete = produtosServicosEmCursoCretido - produtosServicosEmCursoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(produtosServicosEmCursoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(produtosServicosEmCursoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(produtosServicosEmCursoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(produtosServicosEmCursoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.61') {
                            let saldoBalancete = msteriasPrimas2Cretido - msteriasPrimas2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(msteriasPrimas2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(msteriasPrimas2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(msteriasPrimas2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(msteriasPrimas2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.62') {
                            let saldoBalancete = msteriasAuxiliares2Cretido - msteriasAuxiliares2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(msteriasAuxiliares2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(msteriasAuxiliares2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(msteriasAuxiliares2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(msteriasAuxiliares2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.631') {
                            let saldoBalancete = combustiveisLubrificantes2Cretido - combustiveisLubrificantes2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(combustiveisLubrificantes2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(combustiveisLubrificantes2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(combustiveisLubrificantes2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(combustiveisLubrificantes2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.632') {
                            let saldoBalancete = embalagensComerciais2Cretido - embalagensComerciais2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(embalagensComerciais2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(embalagensComerciais2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(embalagensComerciais2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(embalagensComerciais2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.633') {
                            let saldoBalancete = pecasSobresalentes2Cretido - pecasSobresalentes2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(pecasSobresalentes2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(pecasSobresalentes2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(pecasSobresalentes2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(pecasSobresalentes2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.639') {
                            let saldoBalancete = materiaisDiversos2Cretido - materiaisDiversos2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(materiaisDiversos2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(materiaisDiversos2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(materiaisDiversos2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(materiaisDiversos2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.64') {
                            let saldoBalancete = materiaisPrimasAuxiliaresMateriasEmTransitoCretido - materiaisPrimasAuxiliaresMateriasEmTransitoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(materiaisPrimasAuxiliaresMateriasEmTransitoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(materiaisPrimasAuxiliaresMateriasEmTransitoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(materiaisPrimasAuxiliaresMateriasEmTransitoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(materiaisPrimasAuxiliaresMateriasEmTransitoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.711') {
                            let saldoBalancete = animaisCretido - animaisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(animaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(animaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(animaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(animaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.712') {
                            let saldoBalancete = plantasCretido - plantasDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(plantasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(plantasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(plantasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(plantasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.721') {
                            let saldoBalancete = animais2Cretido - animais2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(animais2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(animais2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(animais2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(animais2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.722') {
                            let saldoBalancete = plantas2Cretido - plantas2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(plantas2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(plantas2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(plantas2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(plantas2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.82') {
                            let saldoBalancete = mercadorias2Cretido - mercadorias2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(mercadorias2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(mercadorias2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(mercadorias2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(mercadorias2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.83') {
                            let saldoBalancete = produtosAcabadosIntermedios2Cretido - produtosAcabadosIntermedios2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(produtosAcabadosIntermedios2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(produtosAcabadosIntermedios2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(produtosAcabadosIntermedios2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(produtosAcabadosIntermedios2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.84') {
                            let saldoBalancete = subprodutosDesperdiciosResiduosRefugos2Cretido - subprodutosDesperdiciosResiduosRefugos2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(subprodutosDesperdiciosResiduosRefugos2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(subprodutosDesperdiciosResiduosRefugos2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(subprodutosDesperdiciosResiduosRefugos2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(subprodutosDesperdiciosResiduosRefugos2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.85') {
                            let saldoBalancete = produtosServicosEmCurso2Cretido - produtosServicosEmCurso2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(produtosServicosEmCurso2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(produtosServicosEmCurso2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(produtosServicosEmCurso2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(produtosServicosEmCurso2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.86') {
                            let saldoBalancete = materiasPrimasAuxiliaresMateriais2Cretido - materiasPrimasAuxiliaresMateriais2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(materiasPrimasAuxiliaresMateriais2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(materiasPrimasAuxiliaresMateriais2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(materiasPrimasAuxiliaresMateriais2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(materiasPrimasAuxiliaresMateriais2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.87') {
                            let saldoBalancete = activosBiologicos2Cretido - activosBiologicos2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosBiologicos2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosBiologicos2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosBiologicos2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosBiologicos2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.92') {
                            let saldoBalancete = mercadorias3Cretido - mercadorias3Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(mercadorias3Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(mercadorias3Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(mercadorias3Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(mercadorias3Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.93') {
                            let saldoBalancete = produtosAcabadosIntermedios3Cretido - produtosAcabadosIntermedios3Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(produtosAcabadosIntermedios3Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(produtosAcabadosIntermedios3Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(produtosAcabadosIntermedios3Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(produtosAcabadosIntermedios3Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.94') {
                            let saldoBalancete = subprodutosDesperdiciosResiduosRefugos3Cretido - subprodutosDesperdiciosResiduosRefugos3Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(subprodutosDesperdiciosResiduosRefugos3Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(subprodutosDesperdiciosResiduosRefugos3Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(subprodutosDesperdiciosResiduosRefugos3Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(subprodutosDesperdiciosResiduosRefugos3Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.95') {
                            let saldoBalancete = produtosServicosEmCurso3Cretido - produtosServicosEmCurso3Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(produtosServicosEmCurso3Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(produtosServicosEmCurso3Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(produtosServicosEmCurso3Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(produtosServicosEmCurso3Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.96') {
                            let saldoBalancete = materiasPrimasAuxiliaresMateriais3Cretido - materiasPrimasAuxiliaresMateriais3Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(materiasPrimasAuxiliaresMateriais3Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(materiasPrimasAuxiliaresMateriais3Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(materiasPrimasAuxiliaresMateriais3Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(materiasPrimasAuxiliaresMateriais3Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '2.97') {
                            let saldoBalancete = activosBiologicos3Cretido - activosBiologicos3Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosBiologicos3Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosBiologicos3Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosBiologicos3Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosBiologicos3Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '3.11') {
                            let saldoBalancete = investimentosSubsidiariasCretido - investimentosSubsidiariasDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(investimentosSubsidiariasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(investimentosSubsidiariasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(investimentosSubsidiariasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(investimentosSubsidiariasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '3.12') {
                            let saldoBalancete = investimentosAssociadasCretido - investimentosAssociadasDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(investimentosAssociadasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(investimentosAssociadasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(investimentosAssociadasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(investimentosAssociadasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '3.13') {
                            let saldoBalancete = investimentosConjuntamenteControladasCretido - investimentosConjuntamenteControladasDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(investimentosConjuntamenteControladasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(investimentosConjuntamenteControladasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(investimentosConjuntamenteControladasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(investimentosConjuntamenteControladasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '3.14') {
                            let saldoBalancete = outrosIvestimentosFinanceirosCretido - outrosIvestimentosFinanceirosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosIvestimentosFinanceirosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosIvestimentosFinanceirosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosIvestimentosFinanceirosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosIvestimentosFinanceirosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '3.15') {
                            let saldoBalancete = investimentosDetidosAteMaturidadeCretido - investimentosDetidosAteMaturidadeDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(investimentosDetidosAteMaturidadeDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(investimentosDetidosAteMaturidadeCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(investimentosDetidosAteMaturidadeDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(investimentosDetidosAteMaturidadeCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '3.16') {
                            let saldoBalancete = outrosInvestimentosDisponiveisParaVendaCretido - outrosInvestimentosDisponiveisParaVendaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosInvestimentosDisponiveisParaVendaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosInvestimentosDisponiveisParaVendaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosInvestimentosDisponiveisParaVendaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosInvestimentosDisponiveisParaVendaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '3.211') {
                            let saldoBalancete = edificiosIndustriaisCretido - edificiosIndustriaisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(edificiosIndustriaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(edificiosIndustriaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(edificiosIndustriaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(edificiosIndustriaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '3.212') {
                            let saldoBalancete = edificiosAdministrativosComerciaisCretido - edificiosAdministrativosComerciaisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(edificiosAdministrativosComerciaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(edificiosAdministrativosComerciaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(edificiosAdministrativosComerciaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(edificiosAdministrativosComerciaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '3.213') {
                            let saldoBalancete = edificiosParaHabitacaoOutrosFinsComerciaisCretido - edificiosParaHabitacaoOutrosFinsComerciaisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(edificiosParaHabitacaoOutrosFinsComerciaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(edificiosParaHabitacaoOutrosFinsComerciaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(edificiosParaHabitacaoOutrosFinsComerciaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(edificiosParaHabitacaoOutrosFinsComerciaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '3.216') {
                            let saldoBalancete = viasComunicacaoConstrucoesAfinsCretido - viasComunicacaoConstrucoesAfinsDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(viasComunicacaoConstrucoesAfinsDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(viasComunicacaoConstrucoesAfinsCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(viasComunicacaoConstrucoesAfinsDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(viasComunicacaoConstrucoesAfinsCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '3.22') {
                            let saldoBalancete = equipamentoBasicoCretido - equipamentoBasicoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(equipamentoBasicoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(equipamentoBasicoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(equipamentoBasicoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(equipamentoBasicoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '3.23') {
                            let saldoBalancete = mobiliarioEquipamentoAdministrativoSocialCretido - mobiliarioEquipamentoAdministrativoSocialDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(mobiliarioEquipamentoAdministrativoSocialDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(mobiliarioEquipamentoAdministrativoSocialCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(mobiliarioEquipamentoAdministrativoSocialDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(mobiliarioEquipamentoAdministrativoSocialCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '3.24') {
                            let saldoBalancete = equipamentoTransporte324Cretido - equipamentoTransporte324Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(equipamentoTransporte324Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(equipamentoTransporte324Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(equipamentoTransporte324Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(equipamentoTransporte324Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '3.25') {
                            let saldoBalancete = tarasVasilhameCretido - tarasVasilhameDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(tarasVasilhameDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(tarasVasilhameCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(tarasVasilhameDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(tarasVasilhameCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '3.26') {
                            let saldoBalancete = ferramentasUtensiliosCretido - ferramentasUtensiliosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(ferramentasUtensiliosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(ferramentasUtensiliosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(ferramentasUtensiliosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(ferramentasUtensiliosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '3.27') {
                            let saldoBalancete = activosExploracaoAvaliacaoRecursosMinerais327Cretido - activosExploracaoAvaliacaoRecursosMinerais3287Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosExploracaoAvaliacaoRecursosMinerais3287Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosExploracaoAvaliacaoRecursosMinerais327Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosExploracaoAvaliacaoRecursosMinerais3287Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosExploracaoAvaliacaoRecursosMinerais327Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '3.29') {
                            let saldoBalancete = outrosActivosTangiveisCretido - outrosActivosTangiveisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosActivosTangiveisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosActivosTangiveisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosActivosTangiveisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosActivosTangiveisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '3.31') {
                            let saldoBalancete = despesasDesenvolvimentoCretido - despesasDesenvolvimentoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(despesasDesenvolvimentoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(despesasDesenvolvimentoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(despesasDesenvolvimentoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(despesasDesenvolvimentoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '3.32') {
                            let saldoBalancete = propriedadeIndustriailOutrosDireitosCretido - propriedadeIndustriailOutrosDireitosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(propriedadeIndustriailOutrosDireitosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(propriedadeIndustriailOutrosDireitosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(propriedadeIndustriailOutrosDireitosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(propriedadeIndustriailOutrosDireitosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '3.33') {
                            let saldoBalancete = goodWillCretido - goodWillDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(goodWillDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(goodWillCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(goodWillDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(goodWillCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '3.34') {
                            let saldoBalancete = activosExploracaoAvaliacaoRecursosMinerais2Cretido - activosExploracaoAvaliacaoRecursosMinerais2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosExploracaoAvaliacaoRecursosMinerais2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosExploracaoAvaliacaoRecursosMinerais2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosExploracaoAvaliacaoRecursosMinerais2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosExploracaoAvaliacaoRecursosMinerais2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }

                        }
                        if (carg == '3.42') {
                            let saldoBalancete = activosTangiveisCretido - activosTangiveisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '3.43') {
                            let saldoBalancete = activosIntangiveisCretido - activosIntangiveisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosIntangiveisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosIntangiveisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosIntangiveisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosIntangiveisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '3.5') {
                            let saldoBalancete = activosnaoCorrentesDetidosParaVendaCretido - activosnaoCorrentesDetidosParaVendaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosnaoCorrentesDetidosParaVendaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosnaoCorrentesDetidosParaVendaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosnaoCorrentesDetidosParaVendaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosnaoCorrentesDetidosParaVendaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '3.6') {
                            let saldoBalancete = activosTangiveisInvestimentoCretido - activosTangiveisInvestimentoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveisInvestimentoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveisInvestimentoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveisInvestimentoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveisInvestimentoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '3.82') {
                            let saldoBalancete = activosTangiveis2Cretido - activosTangiveis2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveis2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveis2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveis2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveis2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '3.83') {
                            let saldoBalancete = activosIntangiveis2Cretido - activosIntangiveis2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosIntangiveis2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosIntangiveis2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosIntangiveis2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosIntangiveis2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '3.86') {
                            let saldoBalancete = activosTangiveisInvestimento2Cretido - activosTangiveisInvestimento2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveisInvestimento2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveisInvestimento2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveisInvestimento2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveisInvestimento2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '3.87') {
                            let saldoBalancete = activosExploracaoAvaliacaoRecursosMinerais3Cretido - activosExploracaoAvaliacaoRecursosMinerais3Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosExploracaoAvaliacaoRecursosMinerais3Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosExploracaoAvaliacaoRecursosMinerais3Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosExploracaoAvaliacaoRecursosMinerais3Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosExploracaoAvaliacaoRecursosMinerais3Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '3.91') {
                            let saldoBalancete = investimentosFinanceirosCretido - investimentosFinanceirosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(investimentosFinanceirosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(investimentosFinanceirosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(investimentosFinanceirosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(investimentosFinanceirosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '3.92') {
                            let saldoBalancete = activosTangiveis3Cretido - activosTangiveis3Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveis3Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveis3Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveis3Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveis3Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '3.93') {
                            let saldoBalancete = activosIntangiveis3Cretido - activosIntangiveis3Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosIntangiveis3Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosIntangiveis3Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosIntangiveis3Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosIntangiveis3Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '3.95') {
                            let saldoBalancete = activosnaoCorrentesDetidosParaVenda2Cretido - activosnaoCorrentesDetidosParaVenda2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosnaoCorrentesDetidosParaVenda2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosnaoCorrentesDetidosParaVenda2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosnaoCorrentesDetidosParaVenda2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosnaoCorrentesDetidosParaVenda2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '3.96') {
                            let saldoBalancete = activosTangiveisInvestimento2aCretido - activosTangiveisInvestimento2aDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveisInvestimento2aDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveisInvestimento2aCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveisInvestimento2aDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveisInvestimento2aCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '3.97') {
                            let saldoBalancete = activosExploracaoAvaliacaoRecursosMinerais4Cretido - activosExploracaoAvaliacaoRecursosMinerais4Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosExploracaoAvaliacaoRecursosMinerais4Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosExploracaoAvaliacaoRecursosMinerais4Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosExploracaoAvaliacaoRecursosMinerais4Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosExploracaoAvaliacaoRecursosMinerais4Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.11') {
                            let saldoBalancete = clientesCCCretido - clientesCCDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(clientesCCDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(clientesCCCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(clientesCCDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(clientesCCCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.12') {
                            let saldoBalancete = clientesTitulosReceberCretido - clientesTitulosReceberDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(clientesTitulosReceberDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(clientesTitulosReceberCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(clientesTitulosReceberDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(clientesTitulosReceberCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.18') {
                            let saldoBalancete = clientesCobrancaDuvidosaCretido - clientesCobrancaDuvidosaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(clientesCobrancaDuvidosaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(clientesCobrancaDuvidosaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(clientesCobrancaDuvidosaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(clientesCobrancaDuvidosaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.19') {
                            let saldoBalancete = adiantamentosClientesCretido - adiantamentosClientesDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(adiantamentosClientesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(adiantamentosClientesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(adiantamentosClientesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(adiantamentosClientesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.21') {
                            let saldoBalancete = fornecedoresCCCretido - fornecedoresCCDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(fornecedoresCCDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(fornecedoresCCCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(fornecedoresCCDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(fornecedoresCCCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.22') {
                            let saldoBalancete = fornecedoresTitulosPagarCretido - fornecedoresTitulosPagarDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(fornecedoresTitulosPagarDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(fornecedoresTitulosPagarCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(fornecedoresTitulosPagarDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(fornecedoresTitulosPagarCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.29') {
                            let saldoBalancete = adiantamentosFornecedoreswaCretido - adiantamentosFornecedoreswaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(adiantamentosFornecedoreswaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(adiantamentosFornecedoreswaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(adiantamentosFornecedoreswaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(adiantamentosFornecedoreswaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.311') {
                            let saldoBalancete = deCurtoPrazoCretido - deCurtoPrazoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(deCurtoPrazoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(deCurtoPrazoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(deCurtoPrazoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(deCurtoPrazoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.312') {
                            let saldoBalancete = deMedioLongoPrazoCretido - deMedioLongoPrazoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(deMedioLongoPrazoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(deMedioLongoPrazoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(deMedioLongoPrazoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(deMedioLongoPrazoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.321') {
                            let saldoBalancete = convertiveisCretido - convertiveisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(convertiveisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(convertiveisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(convertiveisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(convertiveisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.322') {
                            let saldoBalancete = naoConvertivelCretido - naoConvertivelDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(naoConvertivelDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(naoConvertivelCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(naoConvertivelDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(naoConvertivelCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.33') {
                            let saldoBalancete = emprestimosTitulosPrestacaoCretido - emprestimosTitulosPrestacaoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(emprestimosTitulosPrestacaoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(emprestimosTitulosPrestacaoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(emprestimosTitulosPrestacaoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(emprestimosTitulosPrestacaoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.39') {
                            let saldoBalancete = outrosEmprestimosObtidosCretido - outrosEmprestimosObtidosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosEmprestimosObtidosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosEmprestimosObtidosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosEmprestimosObtidosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosEmprestimosObtidosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.411') {
                            let saldoBalancete = estimativaImpostoCretido - estimativaImpostoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(estimativaImpostoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(estimativaImpostoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(estimativaImpostoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(estimativaImpostoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.412') {
                            let saldoBalancete = pagamentoPorContaCretido - pagamentoPorContaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(pagamentoPorContaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(pagamentoPorContaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(pagamentoPorContaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(pagamentoPorContaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.413') {
                            let saldoBalancete = pagamentoEspecialPorContaCretido - pagamentoEspecialPorContaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(pagamentoEspecialPorContaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(pagamentoEspecialPorContaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(pagamentoEspecialPorContaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(pagamentoEspecialPorContaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.421') {
                            let saldoBalancete = rentimentosTrabalhoDependenteCretido - rentimentosTrabalhoDependenteDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(rentimentosTrabalhoDependenteDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(rentimentosTrabalhoDependenteCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(rentimentosTrabalhoDependenteDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(rentimentosTrabalhoDependenteCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.422') {
                            let saldoBalancete = rentimentosProfissionaisCretido - rentimentosProfissionaisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(rentimentosProfissionaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(rentimentosProfissionaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(rentimentosProfissionaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(rentimentosProfissionaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.423') {
                            let saldoBalancete = rentimentosCapitalCretido - rentimentosCapitalDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(rentimentosCapitalDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(rentimentosCapitalCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(rentimentosCapitalDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(rentimentosCapitalCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.424') {
                            let saldoBalancete = rentimentosPredialwaCretido - rentimentosPredialwaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(rentimentosPredialwaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(rentimentosPredialwaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(rentimentosPredialwaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(rentimentosPredialwaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.425') {
                            let saldoBalancete = outrosRendimentosCretido - outrosRendimentosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosRendimentosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosRendimentosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosRendimentosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosRendimentosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.4311') {
                            let saldoBalancete = inventariosCretido - inventariosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(inventariosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(inventariosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(inventariosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(inventariosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.4312') {
                            let saldoBalancete = activosTangiveisIntagiveisCretido - activosTangiveisIntagiveisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveisIntagiveisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveisIntagiveisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveisIntagiveisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveisIntagiveisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.4313') {
                            let saldoBalancete = outrosBensServicosCretido - outrosBensServicosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosBensServicosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosBensServicosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosBensServicosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosBensServicosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.4321') {
                            let saldoBalancete = inventarios2Cretido - inventarios2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(inventarios2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(inventarios2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(inventarios2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(inventarios2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.4322') {
                            let saldoBalancete = activosTangiveisIntagiveis2Cretido - activosTangiveisIntagiveis2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveisIntagiveis2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveisIntagiveis2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveisIntagiveis2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveisIntagiveis2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.4323') {
                            let saldoBalancete = outrosBensServicos2Cretido - outrosBensServicos2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosBensServicos2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosBensServicos2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosBensServicos2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosBensServicos2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.4331') {
                            let saldoBalancete = operacoesGeraisCretido - operacoesGeraisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(operacoesGeraisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(operacoesGeraisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(operacoesGeraisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(operacoesGeraisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.4332') {
                            let saldoBalancete = autoconsumosOperacoesGratuitasCretido - autoconsumosOperacoesGratuitasDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(autoconsumosOperacoesGratuitasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(autoconsumosOperacoesGratuitasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(autoconsumosOperacoesGratuitasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(autoconsumosOperacoesGratuitasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.4333') {
                            let saldoBalancete = operacoesEspeciaisCretido - operacoesEspeciaisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(operacoesEspeciaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(operacoesEspeciaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(operacoesEspeciaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(operacoesEspeciaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.4341') {
                            let saldoBalancete = mensaisAfavorSujeitoPassivoCretido - mensaisAfavorSujeitoPassivoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(mensaisAfavorSujeitoPassivoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(mensaisAfavorSujeitoPassivoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(mensaisAfavorSujeitoPassivoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(mensaisAfavorSujeitoPassivoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.4342') {
                            let saldoBalancete = mensaisAfavorEstadoCretido - mensaisAfavorEstadoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(mensaisAfavorEstadoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(mensaisAfavorEstadoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(mensaisAfavorEstadoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(mensaisAfavorEstadoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.4343') {
                            let saldoBalancete = anuaisPorCalculoProRataDefinitivoCretido - anuaisPorCalculoProRataDefinitivoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(anuaisPorCalculoProRataDefinitivoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(anuaisPorCalculoProRataDefinitivoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(anuaisPorCalculoProRataDefinitivoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(anuaisPorCalculoProRataDefinitivoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.435') {
                            let saldoBalancete = ivaApuramentoCretido - ivaApuramentoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(ivaApuramentoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(ivaApuramentoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(ivaApuramentoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(ivaApuramentoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.436') {
                            let saldoBalancete = ivaLiguidacoesOficiosasCretido - ivaLiguidacoesOficiosasDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(ivaLiguidacoesOficiosasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(ivaLiguidacoesOficiosasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(ivaLiguidacoesOficiosasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(ivaLiguidacoesOficiosasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.437') {
                            let saldoBalancete = ivaPagarCretido - ivaPagarDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(ivaPagarDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(ivaPagarCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(ivaPagarDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(ivaPagarCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.438') {
                            let saldoBalancete = ivaRecuperarCretido - ivaRecuperarDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(ivaRecuperarDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(ivaRecuperarCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(ivaRecuperarDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(ivaRecuperarCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.439') {
                            let saldoBalancete = ivaReembolsosPedidosCretido - ivaReembolsosPedidosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(ivaReembolsosPedidosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(ivaReembolsosPedidosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(ivaReembolsosPedidosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(ivaReembolsosPedidosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.441') {
                            let saldoBalancete = impostoSeloCretido - impostoSeloDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(impostoSeloDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(impostoSeloCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(impostoSeloDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(impostoSeloCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.442') {
                            let saldoBalancete = impostoAutarquicosCretido - impostoAutarquicosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(impostoAutarquicosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(impostoAutarquicosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(impostoAutarquicosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(impostoAutarquicosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.45') {
                            let saldoBalancete = retificacoesImpostosContribuicoesOutrosTributosCretido - retificacoesImpostosContribuicoesOutrosTributosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(retificacoesImpostosContribuicoesOutrosTributosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(retificacoesImpostosContribuicoesOutrosTributosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(retificacoesImpostosContribuicoesOutrosTributosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(retificacoesImpostosContribuicoesOutrosTributosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.461') {
                            let saldoBalancete = activosPorImpostosDiferidosCretido - activosPorImpostosDiferidosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosPorImpostosDiferidosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosPorImpostosDiferidosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosPorImpostosDiferidosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosPorImpostosDiferidosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.462') {
                            let saldoBalancete = passivosPorImpostosDiferidosCretido - passivosPorImpostosDiferidosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(passivosPorImpostosDiferidosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(passivosPorImpostosDiferidosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(passivosPorImpostosDiferidosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(passivosPorImpostosDiferidosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.49') {
                            let saldoBalancete = contribuicoesParaINSSCretido - contribuicoesParaINSSDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(contribuicoesParaINSSDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(contribuicoesParaINSSCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(contribuicoesParaINSSDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(contribuicoesParaINSSCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.511') {
                            let saldoBalancete = adiantamentoAosOrgaosSociaisCretido - adiantamentoAosOrgaosSociaisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(adiantamentoAosOrgaosSociaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(adiantamentoAosOrgaosSociaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(adiantamentoAosOrgaosSociaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(adiantamentoAosOrgaosSociaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.512') {
                            let saldoBalancete = adiantamentoAosTrabalhadoresCretido - adiantamentoAosTrabalhadoresDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(adiantamentoAosTrabalhadoresDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(adiantamentoAosTrabalhadoresCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(adiantamentoAosTrabalhadoresDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(adiantamentoAosTrabalhadoresCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.513') {
                            let saldoBalancete = beneficiosPosEmpregowa4513Cretido - beneficiosPosEmpregowa4513Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(beneficiosPosEmpregowa4513Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(beneficiosPosEmpregowa4513Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(beneficiosPosEmpregowa4513Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(beneficiosPosEmpregowa4513Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.518') {
                            let saldoBalancete = outrasOperacoesComOergaosSociaisCretido - outrasOperacoesComOergaosSociaisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrasOperacoesComOergaosSociaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrasOperacoesComOergaosSociaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrasOperacoesComOergaosSociaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrasOperacoesComOergaosSociaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.519') {
                            let saldoBalancete = outrasOperacoesComTrabalhadoresCretido - outrasOperacoesComTrabalhadoresDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrasOperacoesComTrabalhadoresDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrasOperacoesComTrabalhadoresCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrasOperacoesComTrabalhadoresDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrasOperacoesComTrabalhadoresCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.521') {
                            let saldoBalancete = estadoOutrosOrganismosPublicosCretido - estadoOutrosOrganismosPublicosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(estadoOutrosOrganismosPublicosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(estadoOutrosOrganismosPublicosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(estadoOutrosOrganismosPublicosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(estadoOutrosOrganismosPublicosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.522') {
                            let saldoBalancete = entidadesPrivadasCretido - entidadesPrivadasDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(entidadesPrivadasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(entidadesPrivadasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(entidadesPrivadasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(entidadesPrivadasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.529') {
                            let saldoBalancete = outrasEntidadesCretido - outrasEntidadesDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrasEntidadesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrasEntidadesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrasEntidadesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrasEntidadesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.53') {
                            let saldoBalancete = obrigacionistasCretido - obrigacionistasDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(obrigacionistasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(obrigacionistasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(obrigacionistasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(obrigacionistasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.541') {
                            let saldoBalancete = emprestimosConcedidosCretido - emprestimosConcedidosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(emprestimosConcedidosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(emprestimosConcedidosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(emprestimosConcedidosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(emprestimosConcedidosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.542') {
                            let saldoBalancete = adiantamentoPorContaLucrosCretido - adiantamentoPorContaLucrosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(adiantamentoPorContaLucrosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(adiantamentoPorContaLucrosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(adiantamentoPorContaLucrosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(adiantamentoPorContaLucrosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.543') {
                            let saldoBalancete = resultadosAtribuidosCretido - resultadosAtribuidosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(resultadosAtribuidosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(resultadosAtribuidosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(resultadosAtribuidosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(resultadosAtribuidosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.544') {
                            let saldoBalancete = lucrosDisponiveisCretido - lucrosDisponiveisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(lucrosDisponiveisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(lucrosDisponiveisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(lucrosDisponiveisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(lucrosDisponiveisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.549') {
                            let saldoBalancete = outrasOperacoesCretido - outrasOperacoesDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrasOperacoesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrasOperacoesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrasOperacoesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrasOperacoesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.551') {
                            let saldoBalancete = estadoOutrosOrganismosPublicos2Cretido - estadoOutrosOrganismosPublicos2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(estadoOutrosOrganismosPublicos2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(estadoOutrosOrganismosPublicos2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(estadoOutrosOrganismosPublicos2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(estadoOutrosOrganismosPublicos2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.552') {
                            let saldoBalancete = entidadesPrivadas2Cretido - entidadesPrivadas2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(entidadesPrivadas2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(entidadesPrivadas2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(entidadesPrivadas2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(entidadesPrivadas2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.59') {
                            let saldoBalancete = devedoresDiversosCretido - devedoresDiversosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(devedoresDiversosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(devedoresDiversosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(devedoresDiversosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(devedoresDiversosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.611') {
                            let saldoBalancete = fornecedoresInvestimentosCapitalCCCretido - fornecedoresInvestimentosCapitalCCDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(fornecedoresInvestimentosCapitalCCDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(fornecedoresInvestimentosCapitalCCCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(fornecedoresInvestimentosCapitalCCDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(fornecedoresInvestimentosCapitalCCCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.611') {
                            let saldoBalancete = fornecedoresInvestimentosCapitalCCCretido - fornecedoresInvestimentosCapitalCCDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(fornecedoresInvestimentosCapitalCCDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(fornecedoresInvestimentosCapitalCCCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(fornecedoresInvestimentosCapitalCCDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(fornecedoresInvestimentosCapitalCCCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.612') {
                            let saldoBalancete = fornecedoresInvestimentosCapitalTituloApagarCretido - fornecedoresInvestimentosCapitalTituloApagarDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(fornecedoresInvestimentosCapitalTituloApagarDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(fornecedoresInvestimentosCapitalTituloApagarCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(fornecedoresInvestimentosCapitalTituloApagarDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(fornecedoresInvestimentosCapitalTituloApagarCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.613') {
                            let saldoBalancete = fornecedoresInvestimentosCapitalAdiantamentosCretido - fornecedoresInvestimentosCapitalAdiantamentosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(fornecedoresInvestimentosCapitalAdiantamentosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(fornecedoresInvestimentosCapitalAdiantamentosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(fornecedoresInvestimentosCapitalAdiantamentosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(fornecedoresInvestimentosCapitalAdiantamentosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.614') {
                            let saldoBalancete = fornecedoresInvestimentosCapitalLocacaoFinanceiraCretido - fornecedoresInvestimentosCapitalLocacaoFinanceiraDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(fornecedoresInvestimentosCapitalLocacaoFinanceiraDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(fornecedoresInvestimentosCapitalLocacaoFinanceiraCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(fornecedoresInvestimentosCapitalLocacaoFinanceiraDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(fornecedoresInvestimentosCapitalLocacaoFinanceiraCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.619') {
                            let saldoBalancete = outrasOperacoeswaCretido - outrasOperacoeswaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrasOperacoeswaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrasOperacoeswaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrasOperacoeswaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrasOperacoeswaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.621') {
                            let saldoBalancete = remuneracaoApagarAosOrgaosSociaisCretido - remuneracaoApagarAosOrgaosSociaisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(remuneracaoApagarAosOrgaosSociaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(remuneracaoApagarAosOrgaosSociaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(remuneracaoApagarAosOrgaosSociaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(remuneracaoApagarAosOrgaosSociaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.622') {
                            let saldoBalancete = remuneracaoApagarAosTrabalhadoresCretido - remuneracaoApagarAosTrabalhadoresDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(remuneracaoApagarAosTrabalhadoresDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(remuneracaoApagarAosTrabalhadoresCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(remuneracaoApagarAosTrabalhadoresDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(remuneracaoApagarAosTrabalhadoresCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.623') {
                            let saldoBalancete = beneficiosPosEmpregowaCretido - beneficiosPosEmpregowaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(beneficiosPosEmpregowaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(beneficiosPosEmpregowaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(beneficiosPosEmpregowaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(beneficiosPosEmpregowaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.628') {
                            let saldoBalancete = outrasOperacoesComOrgaosSociaisCretido - outrasOperacoesComOrgaosSociaisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrasOperacoesComOrgaosSociaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrasOperacoesComOrgaosSociaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrasOperacoesComOrgaosSociaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrasOperacoesComOrgaosSociaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.629') {
                            let saldoBalancete = outrasOperacoesComOrgaosTrabalhadoresCretido - outrasOperacoesComOrgaosTrabalhadoresDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrasOperacoesComOrgaosTrabalhadoresDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrasOperacoesComOrgaosTrabalhadoresCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrasOperacoesComOrgaosTrabalhadoresDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrasOperacoesComOrgaosTrabalhadoresCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.64') {
                            let saldoBalancete = credoresPorSubscricoesNaoLiberadasCretido - credoresPorSubscricoesNaoLiberadasDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(credoresPorSubscricoesNaoLiberadasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(credoresPorSubscricoesNaoLiberadasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(credoresPorSubscricoesNaoLiberadasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(credoresPorSubscricoesNaoLiberadasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.65') {
                            let saldoBalancete = obricionistasCretido - obricionistasDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(obricionistasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(obricionistasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(obricionistasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(obricionistasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.66') {
                            let saldoBalancete = consultoresAssessoresIntermediariosCretido - consultoresAssessoresIntermediariosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(consultoresAssessoresIntermediariosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(consultoresAssessoresIntermediariosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(consultoresAssessoresIntermediariosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(consultoresAssessoresIntermediariosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.671') {
                            let saldoBalancete = emprestimosObtidosCretido - emprestimosObtidosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(emprestimosObtidosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(emprestimosObtidosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(emprestimosObtidosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(emprestimosObtidosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.673') {
                            let saldoBalancete = resultadosAtribuidoswaCretido - resultadosAtribuidoswaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(resultadosAtribuidoswaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(resultadosAtribuidoswaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(resultadosAtribuidoswaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(resultadosAtribuidoswaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.674') {
                            let saldoBalancete = lucrosDisponiveiswaCretido - lucrosDisponiveiswaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(lucrosDisponiveiswaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(lucrosDisponiveiswaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(lucrosDisponiveiswaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(lucrosDisponiveiswaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.69') {
                            let saldoBalancete = credoresDiversosCretido - credoresDiversosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(credoresDiversosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(credoresDiversosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(credoresDiversosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(credoresDiversosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.71') {
                            let saldoBalancete = clientesCretido - clientesDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(clientesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(clientesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(clientesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(clientesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.72') {
                            let saldoBalancete = credoresDeversosCretido - credoresDeversosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(credoresDeversosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(credoresDeversosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(credoresDeversosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(credoresDeversosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.81') {
                            let saldoBalancete = precessosJudiciaisEmCursoCretido - precessosJudiciaisEmCursoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(precessosJudiciaisEmCursoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(precessosJudiciaisEmCursoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(precessosJudiciaisEmCursoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(precessosJudiciaisEmCursoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.82') {
                            let saldoBalancete = acidentesNoTrabalhoDoencasProfissionais482Cretido - acidentesNoTrabalhoDoencasProfissionais482Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(acidentesNoTrabalhoDoencasProfissionais482Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(acidentesNoTrabalhoDoencasProfissionais482Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(acidentesNoTrabalhoDoencasProfissionais482Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(acidentesNoTrabalhoDoencasProfissionais482Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.83') {
                            let saldoBalancete = impostos483Cretido - impostos483Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(impostos483Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(impostos483Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(impostos483Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(impostos483Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.84') {
                            let saldoBalancete = reestruturacaoNegocios484Cretido - reestruturacaoNegocios484Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(reestruturacaoNegocios484Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(reestruturacaoNegocios484Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(reestruturacaoNegocios484Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(reestruturacaoNegocios484Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.85') {
                            let saldoBalancete = contratosOnorososCretido - contratosOnorososDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(contratosOnorososDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(contratosOnorososCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(contratosOnorososDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(contratosOnorososCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.86') {
                            let saldoBalancete = garantiasClientes486Cretido - garantiasClientes486Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(garantiasClientes486Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(garantiasClientes486Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(garantiasClientes486Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(garantiasClientes486Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.87') {
                            let saldoBalancete = perdasEmContratosConstrucaoCretido - perdasEmContratosConstrucaoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(perdasEmContratosConstrucaoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(perdasEmContratosConstrucaoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(perdasEmContratosConstrucaoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(perdasEmContratosConstrucaoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.89') {
                            let saldoBalancete = outrasProvisoes489Cretido - outrasProvisoes489Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrasProvisoes489Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrasProvisoes489Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrasProvisoes489Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrasProvisoes489Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.911') {
                            let saldoBalancete = jurosAPagarCretido - jurosAPagarDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(jurosAPagarDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(jurosAPagarCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(jurosAPagarDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(jurosAPagarCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.912') {
                            let saldoBalancete = remuneracoesAPagarCretido - remuneracoesAPagarDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(remuneracoesAPagarDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(remuneracoesAPagarCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(remuneracoesAPagarDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(remuneracoesAPagarCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.919') {
                            let saldoBalancete = outrosAcrescimosGastosCretido - outrosAcrescimosGastosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosAcrescimosGastosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosAcrescimosGastosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosAcrescimosGastosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosAcrescimosGastosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.921') {
                            let saldoBalancete = premiosEmissaoObrigacoesCretido - premiosEmissaoObrigacoesDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(premiosEmissaoObrigacoesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(premiosEmissaoObrigacoesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(premiosEmissaoObrigacoesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(premiosEmissaoObrigacoesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.922') {
                            let saldoBalancete = premiosEmissaoTitulosParticipacaoCretido - premiosEmissaoTitulosParticipacaoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(premiosEmissaoTitulosParticipacaoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(premiosEmissaoTitulosParticipacaoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(premiosEmissaoTitulosParticipacaoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(premiosEmissaoTitulosParticipacaoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.923') {
                            let saldoBalancete = reditosContratosConstrucaoCretido - reditosContratosConstrucaoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(reditosContratosConstrucaoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(reditosContratosConstrucaoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(reditosContratosConstrucaoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(reditosContratosConstrucaoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.924') {
                            let saldoBalancete = subsidiosParaInvestimentosCretido - subsidiosParaInvestimentosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(subsidiosParaInvestimentosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(subsidiosParaInvestimentosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(subsidiosParaInvestimentosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(subsidiosParaInvestimentosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.929') {
                            let saldoBalancete = outrosRendimentosDiferidosCretido - outrosRendimentosDiferidosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosRendimentosDiferidosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosRendimentosDiferidosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosRendimentosDiferidosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosRendimentosDiferidosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.931') {
                            let saldoBalancete = jurosReceberCretido - jurosReceberDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(jurosReceberDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(jurosReceberCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(jurosReceberDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(jurosReceberCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.933') {
                            let saldoBalancete = reditosContratosConstrucaowaCretido - reditosContratosConstrucaowaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(reditosContratosConstrucaowaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(reditosContratosConstrucaowaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(reditosContratosConstrucaowaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(reditosContratosConstrucaowaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.939') {
                            let saldoBalancete = outrosAcrescimosRendimentosCretido - outrosAcrescimosRendimentosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosAcrescimosRendimentosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosAcrescimosRendimentosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosAcrescimosRendimentosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosAcrescimosRendimentosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.941') {
                            let saldoBalancete = descontoEmissaoObrigacoesCretido - descontoEmissaoObrigacoesDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(descontoEmissaoObrigacoesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(descontoEmissaoObrigacoesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(descontoEmissaoObrigacoesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(descontoEmissaoObrigacoesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.942') {
                            let saldoBalancete = descontoEmissaoTitulosParticipacaoCretido - descontoEmissaoTitulosParticipacaoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(descontoEmissaoTitulosParticipacaoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(descontoEmissaoTitulosParticipacaoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(descontoEmissaoTitulosParticipacaoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(descontoEmissaoTitulosParticipacaoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '4.949') {
                            let saldoBalancete = outroGastosDiferidosCretido - outroGastosDiferidosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outroGastosDiferidosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outroGastosDiferidosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outroGastosDiferidosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outroGastosDiferidosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '5.1') {
                            let saldoBalancete = capitalCretido - capitalDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(capitalDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(capitalCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(capitalDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(capitalCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '5.21') {
                            let saldoBalancete = valorNominalCretido - valorNominalDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(valorNominalDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(valorNominalCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(valorNominalDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(valorNominalCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '5.22') {
                            let saldoBalancete = desontosPremiosCretido - desontosPremiosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(desontosPremiosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(desontosPremiosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(desontosPremiosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(desontosPremiosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '5.3') {
                            let saldoBalancete = prestacoesSuplementaresCretido - prestacoesSuplementaresDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(prestacoesSuplementaresDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(prestacoesSuplementaresCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(prestacoesSuplementaresDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(prestacoesSuplementaresCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '5.4') {
                            let saldoBalancete = premiosEmissaoAccoesQuotasCretido - premiosEmissaoAccoesQuotasDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(premiosEmissaoAccoesQuotasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(premiosEmissaoAccoesQuotasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(premiosEmissaoAccoesQuotasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(premiosEmissaoAccoesQuotasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '5.51') {
                            let saldoBalancete = reservasLegaisCretido - reservasLegaisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(reservasLegaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(reservasLegaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(reservasLegaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(reservasLegaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '5.52') {
                            let saldoBalancete = reservasEstatutariasCretido - reservasEstatutariasDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(reservasEstatutariasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(reservasEstatutariasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(reservasEstatutariasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(reservasEstatutariasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '5.53') {
                            let saldoBalancete = reservasLivresCretido - reservasLivresDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(reservasLivresDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(reservasLivresCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(reservasLivresDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(reservasLivresCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '5.611') {
                            let saldoBalancete = antesImpostosDiferidosCretido - antesImpostosDiferidosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(antesImpostosDiferidosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(antesImpostosDiferidosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(antesImpostosDiferidosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(antesImpostosDiferidosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '5.612') {
                            let saldoBalancete = aimpostosDiferidosCretido - aimpostosDiferidosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(aimpostosDiferidosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(aimpostosDiferidosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(aimpostosDiferidosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(aimpostosDiferidosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '5.621') {
                            let saldoBalancete = antesImpostosDiferidos2Cretido - antesImpostosDiferidos2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(antesImpostosDiferidos2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(antesImpostosDiferidos2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(antesImpostosDiferidos2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(antesImpostosDiferidos2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '5.622') {
                            let saldoBalancete = aimpostosDiferidos2Cretido - aimpostosDiferidos2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(aimpostosDiferidos2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(aimpostosDiferidos2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(aimpostosDiferidos2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(aimpostosDiferidos2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '5.81') {
                            let saldoBalancete = variacaoJustoValorInstrumentosFinanceirosDisponiveisParaVendaCretido - variacaoJustoValorInstrumentosFinanceirosDisponiveisParaVendaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(variacaoJustoValorInstrumentosFinanceirosDisponiveisParaVendaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(variacaoJustoValorInstrumentosFinanceirosDisponiveisParaVendaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(variacaoJustoValorInstrumentosFinanceirosDisponiveisParaVendaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(variacaoJustoValorInstrumentosFinanceirosDisponiveisParaVendaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '5.82') {
                            let saldoBalancete = ajustamentosPorImpostosDiferidosCretido - ajustamentosPorImpostosDiferidosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(ajustamentosPorImpostosDiferidosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(ajustamentosPorImpostosDiferidosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(ajustamentosPorImpostosDiferidosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(ajustamentosPorImpostosDiferidosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '5.89') {
                            let saldoBalancete = outrasVariacoesCretido - outrasVariacoesDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrasVariacoesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrasVariacoesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrasVariacoesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrasVariacoesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '5.9') {
                            let saldoBalancete = resultadosTransitadosCretido - resultadosTransitadosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(resultadosTransitadosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(resultadosTransitadosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(resultadosTransitadosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(resultadosTransitadosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.112') {
                            let saldoBalancete = deMercadoriasCretido - deMercadoriasDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(deMercadoriasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(deMercadoriasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(deMercadoriasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(deMercadoriasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.1161') {
                            let saldoBalancete = materiasPrimas2Cretido - materiasPrimas2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(materiasPrimas2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(materiasPrimas2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(materiasPrimas2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(materiasPrimas2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.1162') {
                            let saldoBalancete = materiasAuxiliares2Cretido - materiasAuxiliares2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(materiasAuxiliares2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(materiasAuxiliares2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(materiasAuxiliares2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(materiasAuxiliares2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.1163') {
                            let saldoBalancete = materiais2Cretido - materiais2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(materiais2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(materiais2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(materiais2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(materiais2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.117') {
                            let saldoBalancete = activosBiologicosCretido - activosBiologicosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosBiologicosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosBiologicosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosBiologicosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosBiologicosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.121') {
                            let saldoBalancete = produtosAcabadosIntermedios6121Cretido - produtosAcabadosIntermedios6121Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(produtosAcabadosIntermedios6121Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(produtosAcabadosIntermedios6121Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(produtosAcabadosIntermedios6121Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(produtosAcabadosIntermedios6121Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.122') {
                            let saldoBalancete = subprodutosDesperdiciosResiduosRefugos6122Cretido - subprodutosDesperdiciosResiduosRefugos6122Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(subprodutosDesperdiciosResiduosRefugos6122Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(subprodutosDesperdiciosResiduosRefugos6122Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(subprodutosDesperdiciosResiduosRefugos6122Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(subprodutosDesperdiciosResiduosRefugos6122Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.123') {
                            let saldoBalancete = produtosServicosEmCursosCretido - produtosServicosEmCursosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(produtosServicosEmCursosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(produtosServicosEmCursosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(produtosServicosEmCursosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(produtosServicosEmCursosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.21') {
                            let saldoBalancete = remuneracaoDosOrgaosSociaisCretido - remuneracaoDosOrgaosSociaisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(remuneracaoDosOrgaosSociaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(remuneracaoDosOrgaosSociaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(remuneracaoDosOrgaosSociaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(remuneracaoDosOrgaosSociaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.22') {
                            let saldoBalancete = remuneracaoDosTrabalhadoresCretido - remuneracaoDosTrabalhadoresDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(remuneracaoDosTrabalhadoresDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(remuneracaoDosTrabalhadoresCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(remuneracaoDosTrabalhadoresDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(remuneracaoDosTrabalhadoresCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.23') {
                            let saldoBalancete = encargosSobreRemuneracoesCretido - encargosSobreRemuneracoesDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(encargosSobreRemuneracoesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(encargosSobreRemuneracoesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(encargosSobreRemuneracoesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(encargosSobreRemuneracoesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.24') {
                            let saldoBalancete = beneficiosPosEmpregowaCretido - beneficiosPosEmpregowaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(beneficiosPosEmpregowaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(beneficiosPosEmpregowaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(beneficiosPosEmpregowaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(beneficiosPosEmpregowaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.251') {
                            let saldoBalancete = ajudasCustosTributaveisCretido - ajudasCustosTributaveisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(ajudasCustosTributaveisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(ajudasCustosTributaveisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(ajudasCustosTributaveisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(ajudasCustosTributaveisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.252') {
                            let saldoBalancete = ajudasCustosNaoTributaveisCretido - ajudasCustosNaoTributaveisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(ajudasCustosNaoTributaveisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(ajudasCustosNaoTributaveisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(ajudasCustosNaoTributaveisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(ajudasCustosNaoTributaveisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.261') {
                            let saldoBalancete = indemnizacoesRiscoSeguravelCretido - indemnizacoesRiscoSeguravelDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(indemnizacoesRiscoSeguravelDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(indemnizacoesRiscoSeguravelCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(indemnizacoesRiscoSeguravelDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(indemnizacoesRiscoSeguravelCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.262') {
                            let saldoBalancete = indemnizacoesOutrasCretido - indemnizacoesOutrasDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(indemnizacoesOutrasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(indemnizacoesOutrasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(indemnizacoesOutrasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(indemnizacoesOutrasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.27') {
                            let saldoBalancete = segurosAcidentesNoTrabalhoDoencasProfissionaisCretido - segurosAcidentesNoTrabalhoDoencasProfissionaisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(segurosAcidentesNoTrabalhoDoencasProfissionaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(segurosAcidentesNoTrabalhoDoencasProfissionaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(segurosAcidentesNoTrabalhoDoencasProfissionaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(segurosAcidentesNoTrabalhoDoencasProfissionaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.28') {
                            let saldoBalancete = gastosAccaoSocialCretido - gastosAccaoSocialDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(gastosAccaoSocialDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(gastosAccaoSocialCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(gastosAccaoSocialDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(gastosAccaoSocialCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.29') {
                            let saldoBalancete = outrosGastosComPessoalCretido - outrosGastosComPessoalDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosGastosComPessoalDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosGastosComPessoalCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosGastosComPessoalDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosGastosComPessoalCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.31') {
                            let saldoBalancete = subcontratosCretido - subcontratosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(subcontratosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(subcontratosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(subcontratosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(subcontratosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.3211') {
                            let saldoBalancete = aguaCretido - aguaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(aguaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(aguaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(aguaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(aguaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.3212') {
                            let saldoBalancete = eletricidadeCretido - eletricidadeDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(eletricidadeDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(eletricidadeCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(eletricidadeDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(eletricidadeCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.321311') {
                            let saldoBalancete = gasoleoViaturasLigeirasPassageirosCretido - gasoleoViaturasLigeirasPassageirosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(gasoleoViaturasLigeirasPassageirosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(gasoleoViaturasLigeirasPassageirosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(gasoleoViaturasLigeirasPassageirosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(gasoleoViaturasLigeirasPassageirosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.321312') {
                            let saldoBalancete = gasoleoOutrosCretido - gasoleoOutrosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(gasoleoOutrosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(gasoleoOutrosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(gasoleoOutrosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(gasoleoOutrosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.321321') {
                            let saldoBalancete = restantesCombustiveisViaturasLigeirasPassageirosCretido - restantesCombustiveisViaturasLigeirasPassageirosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(restantesCombustiveisViaturasLigeirasPassageirosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(restantesCombustiveisViaturasLigeirasPassageirosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(restantesCombustiveisViaturasLigeirasPassageirosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(restantesCombustiveisViaturasLigeirasPassageirosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.321322') {
                            let saldoBalancete = restantesCombustiveisOutrosCretido - restantesCombustiveisOutrosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(restantesCombustiveisOutrosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(restantesCombustiveisOutrosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(restantesCombustiveisOutrosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(restantesCombustiveisOutrosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.321331') {
                            let saldoBalancete = lubrificantesViaturasLigeirasPassageirosCretido - lubrificantesViaturasLigeirasPassageirosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(lubrificantesViaturasLigeirasPassageirosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(lubrificantesViaturasLigeirasPassageirosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(lubrificantesViaturasLigeirasPassageirosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(lubrificantesViaturasLigeirasPassageirosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.321332') {
                            let saldoBalancete = lubrificantesOutrosCretido - lubrificantesOutrosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(lubrificantesOutrosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(lubrificantesOutrosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(lubrificantesOutrosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(lubrificantesOutrosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.3214') {
                            let saldoBalancete = ferramentasUtensiliosDesgasteRapidoCretido - ferramentasUtensiliosDesgasteRapidoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(ferramentasUtensiliosDesgasteRapidoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(ferramentasUtensiliosDesgasteRapidoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(ferramentasUtensiliosDesgasteRapidoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(ferramentasUtensiliosDesgasteRapidoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.32151') {
                            let saldoBalancete = materialManutencaoReparacaoViaturasLigeirasPassageirosCretido - materialManutencaoReparacaoViaturasLigeirasPassageirosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(materialManutencaoReparacaoViaturasLigeirasPassageirosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(materialManutencaoReparacaoViaturasLigeirasPassageirosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(materialManutencaoReparacaoViaturasLigeirasPassageirosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(materialManutencaoReparacaoViaturasLigeirasPassageirosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.32152') {
                            let saldoBalancete = materialManutencaoReparacaoOutrosCretido - materialManutencaoReparacaoOutrosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(materialManutencaoReparacaoOutrosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(materialManutencaoReparacaoOutrosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(materialManutencaoReparacaoOutrosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(materialManutencaoReparacaoOutrosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.3216') {
                            let saldoBalancete = materialEscritorioCretido - materialEscritorioDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(materialEscritorioDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(materialEscritorioCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(materialEscritorioDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(materialEscritorioCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.3216') {
                            let saldoBalancete = materialEscritorioCretido - materialEscritorioDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(materialEscritorioDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(materialEscritorioCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(materialEscritorioDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(materialEscritorioCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.3217') {
                            let saldoBalancete = livrosDocumentacaoTecnicaCretido - livrosDocumentacaoTecnicaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(livrosDocumentacaoTecnicaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(livrosDocumentacaoTecnicaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(livrosDocumentacaoTecnicaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(livrosDocumentacaoTecnicaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.3218') {
                            let saldoBalancete = artigosParaOfertasCretido - artigosParaOfertasDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(artigosParaOfertasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(artigosParaOfertasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(artigosParaOfertasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(artigosParaOfertasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.3221') {
                            let saldoBalancete = manutencaoReparacaoCretido - manutencaoReparacaoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(manutencaoReparacaoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(manutencaoReparacaoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(manutencaoReparacaoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(manutencaoReparacaoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.3222') {
                            let saldoBalancete = transporteCargaCretido - transporteCargaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(transporteCargaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(transporteCargaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(transporteCargaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(transporteCargaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.3223') {
                            let saldoBalancete = transportePessoalCretido - transportePessoalDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(transportePessoalDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(transportePessoalCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(transportePessoalDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(transportePessoalCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.3224') {
                            let saldoBalancete = comunicacoesCretido - comunicacoesDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(comunicacoesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(comunicacoesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(comunicacoesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(comunicacoesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.3225') {
                            let saldoBalancete = honorariosCretido - honorariosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(honorariosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(honorariosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(honorariosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(honorariosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.3226') {
                            let saldoBalancete = comissoesIntermediariosCretido - comissoesIntermediariosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(comissoesIntermediariosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(comissoesIntermediariosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(comissoesIntermediariosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(comissoesIntermediariosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.32271') {
                            let saldoBalancete = publicidadePropagandaCampanhasPublicitariasCretido - publicidadePropagandaCampanhasPublicitariasDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(publicidadePropagandaCampanhasPublicitariasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(publicidadePropagandaCampanhasPublicitariasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(publicidadePropagandaCampanhasPublicitariasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(publicidadePropagandaCampanhasPublicitariasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.32272') {
                            let saldoBalancete = publicidadePropagandaOutrosCretido - publicidadePropagandaOutrosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(publicidadePropagandaOutrosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(publicidadePropagandaOutrosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(publicidadePropagandaOutrosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(publicidadePropagandaOutrosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.32281') {
                            let saldoBalancete = deslocacoesEstadiasEmServicosCretido - deslocacoesEstadiasEmServicosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(deslocacoesEstadiasEmServicosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(deslocacoesEstadiasEmServicosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(deslocacoesEstadiasEmServicosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(deslocacoesEstadiasEmServicosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.32282') {
                            let saldoBalancete = deslocacoesEstadiasOutrasDeslocacoesCretido - deslocacoesEstadiasOutrasDeslocacoesDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(deslocacoesEstadiasOutrasDeslocacoesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(deslocacoesEstadiasOutrasDeslocacoesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(deslocacoesEstadiasOutrasDeslocacoesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(deslocacoesEstadiasOutrasDeslocacoesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.3229') {
                            let saldoBalancete = despesasRepresentacaoCretido - despesasRepresentacaoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(despesasRepresentacaoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(despesasRepresentacaoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(despesasRepresentacaoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(despesasRepresentacaoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.3231') {
                            let saldoBalancete = contenciosoNotariadoCretido - contenciosoNotariadoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(contenciosoNotariadoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(contenciosoNotariadoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(contenciosoNotariadoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(contenciosoNotariadoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.32321') {
                            let saldoBalancete = rendasAlugueresLocacaoFinanceiraCretido - rendasAlugueresLocacaoFinanceiraDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(rendasAlugueresLocacaoFinanceiraDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(rendasAlugueresLocacaoFinanceiraCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(rendasAlugueresLocacaoFinanceiraDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(rendasAlugueresLocacaoFinanceiraCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.32331') {
                            let saldoBalancete = seguroVidaAcidentesPessoaisDoencaCretido - seguroVidaAcidentesPessoaisDoencaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(seguroVidaAcidentesPessoaisDoencaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(seguroVidaAcidentesPessoaisDoencaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(seguroVidaAcidentesPessoaisDoencaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(seguroVidaAcidentesPessoaisDoencaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.3234') {
                            let saldoBalancete = royaltiesCretido - royaltiesDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(royaltiesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(royaltiesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(royaltiesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(royaltiesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.3235') {
                            let saldoBalancete = limpezaHigieneConfortoCretido - limpezaHigieneConfortoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(limpezaHigieneConfortoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(limpezaHigieneConfortoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(limpezaHigieneConfortoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(limpezaHigieneConfortoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.3236') {
                            let saldoBalancete = vigilanciaSegurancaCretido - vigilanciaSegurancaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(vigilanciaSegurancaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(vigilanciaSegurancaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(vigilanciaSegurancaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(vigilanciaSegurancaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.3237') {
                            let saldoBalancete = trabalhosEspecializadosCretido - trabalhosEspecializadosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(trabalhosEspecializadosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(trabalhosEspecializadosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(trabalhosEspecializadosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(trabalhosEspecializadosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.3299') {
                            let saldoBalancete = outrosFornecimentosServicosCretido - outrosFornecimentosServicosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosFornecimentosServicosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosFornecimentosServicosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosFornecimentosServicosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosFornecimentosServicosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.41') {
                            let saldoBalancete = ajustamentosInventariosParaValorRealizavelLiquidoCretido - ajustamentosInventariosParaValorRealizavelLiquidoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(ajustamentosInventariosParaValorRealizavelLiquidoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(ajustamentosInventariosParaValorRealizavelLiquidoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(ajustamentosInventariosParaValorRealizavelLiquidoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(ajustamentosInventariosParaValorRealizavelLiquidoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.42') {
                            let saldoBalancete = investimentosFinanceiros1Cretido - investimentosFinanceiros1Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(investimentosFinanceiros1Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(investimentosFinanceiros1Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(investimentosFinanceiros1Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(investimentosFinanceiros1Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.43') {
                            let saldoBalancete = activosTangiveiswqCretido - activosTangiveiswqDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveiswqDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveiswqCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveiswqDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveiswqCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.44') {
                            let saldoBalancete = activosIntangiveiswqCretido - activosIntangiveiswqDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosIntangiveiswqDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosIntangiveiswqCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosIntangiveiswqDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosIntangiveiswqCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.45') {
                            let saldoBalancete = activosNaoCorrentesDetidosParaVendaCretido - activosNaoCorrentesDetidosParaVendaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosNaoCorrentesDetidosParaVendaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosNaoCorrentesDetidosParaVendaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosNaoCorrentesDetidosParaVendaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosNaoCorrentesDetidosParaVendaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.46') {
                            let saldoBalancete = activosTagiveisInvestimentoCretido - activosTagiveisInvestimentoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTagiveisInvestimentoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTagiveisInvestimentoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTagiveisInvestimentoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTagiveisInvestimentoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.47') {
                            let saldoBalancete = activosExploracaoAvaliacaoRecursosMineraisCretido - activosExploracaoAvaliacaoRecursosMineraisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosExploracaoAvaliacaoRecursosMineraisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosExploracaoAvaliacaoRecursosMineraisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosExploracaoAvaliacaoRecursosMineraisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosExploracaoAvaliacaoRecursosMineraisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.481') {
                            let saldoBalancete = contasReceberAjustamentosDentroDosLimitesFiscaisCretido - contasReceberAjustamentosDentroDosLimitesFiscaisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(contasReceberAjustamentosDentroDosLimitesFiscaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(contasReceberAjustamentosDentroDosLimitesFiscaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(contasReceberAjustamentosDentroDosLimitesFiscaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(contasReceberAjustamentosDentroDosLimitesFiscaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.482') {
                            let saldoBalancete = contasReceberAjustamentosParaAlemDosLimitesFiscaisCretido - contasReceberAjustamentosParaAlemDosLimitesFiscaisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(contasReceberAjustamentosParaAlemDosLimitesFiscaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(contasReceberAjustamentosParaAlemDosLimitesFiscaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(contasReceberAjustamentosParaAlemDosLimitesFiscaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(contasReceberAjustamentosParaAlemDosLimitesFiscaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.51') {
                            let saldoBalancete = activosTangiveiswq1Cretido - activosTangiveiswq1Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveiswq1Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveiswq1Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveiswq1Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveiswq1Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.52') {
                            let saldoBalancete = activosIntangiveiswq1Cretido - activosIntangiveiswq1Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosIntangiveiswq1Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosIntangiveiswq1Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosIntangiveiswq1Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosIntangiveiswq1Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.53') {
                            let saldoBalancete = activosTangiveisInvestimentos653Cretido - activosTangiveisInvestimentos653Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveisInvestimentos653Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveisInvestimentos653Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveisInvestimentos653Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveisInvestimentos653Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.54') {
                            let saldoBalancete = activosExploracaoAvaliacaoRecursosMineraisCretido - activosExploracaoAvaliacaoRecursosMineraisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosExploracaoAvaliacaoRecursosMineraisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosExploracaoAvaliacaoRecursosMineraisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosExploracaoAvaliacaoRecursosMineraisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosExploracaoAvaliacaoRecursosMineraisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.61') {
                            let saldoBalancete = processosJudiciaisEmCursoCretido - processosJudiciaisEmCursoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(processosJudiciaisEmCursoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(processosJudiciaisEmCursoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(processosJudiciaisEmCursoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(processosJudiciaisEmCursoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.62') {
                            let saldoBalancete = acidentesNoTrabalhoDoencasProfissionaisCretido - acidentesNoTrabalhoDoencasProfissionaisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(acidentesNoTrabalhoDoencasProfissionaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(acidentesNoTrabalhoDoencasProfissionaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(acidentesNoTrabalhoDoencasProfissionaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(acidentesNoTrabalhoDoencasProfissionaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.63') {
                            let saldoBalancete = impostosCretido - impostosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(impostosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(impostosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(impostosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(impostosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.64') {
                            let saldoBalancete = reestruturacaoNegociosCretido - reestruturacaoNegociosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(reestruturacaoNegociosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(reestruturacaoNegociosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(reestruturacaoNegociosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(reestruturacaoNegociosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.65') {
                            let saldoBalancete = contratosOnerososCretido - contratosOnerososDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(contratosOnerososDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(contratosOnerososCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(contratosOnerososDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(contratosOnerososCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.66') {
                            let saldoBalancete = garantiasClientesCretido - garantiasClientesDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(garantiasClientesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(garantiasClientesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(garantiasClientesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(garantiasClientesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.67') {
                            let saldoBalancete = perdasContratosConstrucaoCretido - perdasContratosConstrucaoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(perdasContratosConstrucaoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(perdasContratosConstrucaoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(perdasContratosConstrucaoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(perdasContratosConstrucaoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.69') {
                            let saldoBalancete = outrasProvisoesCretido - outrasProvisoesDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrasProvisoesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrasProvisoesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrasProvisoesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrasProvisoesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.71') {
                            let saldoBalancete = instrumentosFinanceirosCretido - instrumentosFinanceirosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(instrumentosFinanceirosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(instrumentosFinanceirosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(instrumentosFinanceirosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(instrumentosFinanceirosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.72') {
                            let saldoBalancete = activosTangiveisInvestimento672Cretido - activosTangiveisInvestimento672Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveisInvestimento672Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveisInvestimento672Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveisInvestimento672Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveisInvestimento672Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.73') {
                            let saldoBalancete = activosBiologicos673Cretido - activosBiologicos673Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosBiologicos673Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosBiologicos673Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosBiologicos673Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosBiologicos673Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.81') {
                            let saldoBalancete = despesasInvestigacaoPesquisaCretido - despesasInvestigacaoPesquisaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(despesasInvestigacaoPesquisaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(despesasInvestigacaoPesquisaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(despesasInvestigacaoPesquisaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(despesasInvestigacaoPesquisaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.821') {
                            let saldoBalancete = direitosAduaneirosCretido - direitosAduaneirosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(direitosAduaneirosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(direitosAduaneirosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(direitosAduaneirosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(direitosAduaneirosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.822') {
                            let saldoBalancete = impostoSobreValorAcrescentadoCretido - impostoSobreValorAcrescentadoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(impostoSobreValorAcrescentadoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(impostoSobreValorAcrescentadoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(impostoSobreValorAcrescentadoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(impostoSobreValorAcrescentadoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.823') {
                            let saldoBalancete = impostoSelo6823Cretido - impostoSelo6823Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(impostoSelo6823Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(impostoSelo6823Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(impostoSelo6823Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(impostoSelo6823Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.824') {
                            let saldoBalancete = impostoSobreVeiculosCretido - impostoSobreVeiculosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(impostoSobreVeiculosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(impostoSobreVeiculosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(impostoSobreVeiculosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(impostoSobreVeiculosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.825') {
                            let saldoBalancete = impostoAutarquicos6825Cretido - impostoAutarquicos6825Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(impostoAutarquicos6825Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(impostoAutarquicos6825Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(impostoAutarquicos6825Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(impostoAutarquicos6825Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.831') {
                            let saldoBalancete = alienacao6831Cretido - alienacao6831Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(alienacao6831Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(alienacao6831Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(alienacao6831Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(alienacao6831Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.832') {
                            let saldoBalancete = abates6832Cretido - abates6832Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(abates6832Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(abates6832Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(abates6832Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(abates6832Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.833') {
                            let saldoBalancete = sinistros6833Cretido - sinistros6833Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(sinistros6833Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(sinistros6833Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(sinistros6833Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(sinistros6833Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.841') {
                            let saldoBalancete = sinistros6841Cretido - sinistros6841Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(sinistros6841Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(sinistros6841Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(sinistros6841Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(sinistros6841Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.842') {
                            let saldoBalancete = quebrasCretido - quebrasDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(quebrasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(quebrasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(quebrasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(quebrasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.849') {
                            let saldoBalancete = outrasCretido - outrasDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.891') {
                            let saldoBalancete = quotizacoesCretido - quotizacoesDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(quotizacoesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(quotizacoesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(quotizacoesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(quotizacoesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.892') {
                            let saldoBalancete = despesasConfidenciaisCretido - despesasConfidenciaisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(despesasConfidenciaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(despesasConfidenciaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(despesasConfidenciaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(despesasConfidenciaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.893') {
                            let saldoBalancete = ofertasAmostrasInventariosCretido - ofertasAmostrasInventariosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(ofertasAmostrasInventariosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(ofertasAmostrasInventariosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(ofertasAmostrasInventariosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(ofertasAmostrasInventariosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.894') {
                            let saldoBalancete = programasResponsabilidadeSocialCretido - programasResponsabilidadeSocialDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(programasResponsabilidadeSocialDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(programasResponsabilidadeSocialCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(programasResponsabilidadeSocialDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(programasResponsabilidadeSocialCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.8951') {
                            let saldoBalancete = donativosAoEstadoCretido - donativosAoEstadoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(donativosAoEstadoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(donativosAoEstadoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(donativosAoEstadoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(donativosAoEstadoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.8952') {
                            let saldoBalancete = outrosDonativosAmbitoMecenatoCretido - outrosDonativosAmbitoMecenatoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosDonativosAmbitoMecenatoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosDonativosAmbitoMecenatoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosDonativosAmbitoMecenatoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosDonativosAmbitoMecenatoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.896') {
                            let saldoBalancete = multasPenalidadesCretido - multasPenalidadesDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(multasPenalidadesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(multasPenalidadesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(multasPenalidadesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(multasPenalidadesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.899') {
                            let saldoBalancete = outros6899Cretido - outros6899Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outros6899Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outros6899Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outros6899Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outros6899Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.911') {
                            let saldoBalancete = emprestimosBancariosCretido - emprestimosBancariosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(emprestimosBancariosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(emprestimosBancariosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(emprestimosBancariosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(emprestimosBancariosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.912') {
                            let saldoBalancete = emprestimosObrigacionistasTitulosParticipacaoCretido - emprestimosObrigacionistasTitulosParticipacaoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(emprestimosObrigacionistasTitulosParticipacaoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(emprestimosObrigacionistasTitulosParticipacaoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(emprestimosObrigacionistasTitulosParticipacaoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(emprestimosObrigacionistasTitulosParticipacaoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.913') {
                            let saldoBalancete = emprestimosSociosAccionistasProprietariosCretido - emprestimosSociosAccionistasProprietariosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(emprestimosSociosAccionistasProprietariosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(emprestimosSociosAccionistasProprietariosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(emprestimosSociosAccionistasProprietariosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(emprestimosSociosAccionistasProprietariosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.914') {
                            let saldoBalancete = outrosEmprestimosCretido - outrosEmprestimosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosEmprestimosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosEmprestimosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosEmprestimosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosEmprestimosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.915') {
                            let saldoBalancete = descontoTitulosCretido - descontoTitulosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(descontoTitulosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(descontoTitulosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(descontoTitulosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(descontoTitulosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.9161') {
                            let saldoBalancete = jurosDeMoraCretido - jurosDeMoraDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(jurosDeMoraDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(jurosDeMoraCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(jurosDeMoraDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(jurosDeMoraCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.9162') {
                            let saldoBalancete = jurosCompensatoriosCretido - jurosCompensatoriosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(jurosCompensatoriosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(jurosCompensatoriosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(jurosCompensatoriosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(jurosCompensatoriosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.919') {
                            let saldoBalancete = outrosJurosCretido - outrosJurosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosJurosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosJurosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosJurosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosJurosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.941') {
                            let saldoBalancete = realizadasCretido - realizadasDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(realizadasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(realizadasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(realizadasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(realizadasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.941') {
                            let saldoBalancete = naoRealizadasCretido - naoRealizadasDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(naoRealizadasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(naoRealizadasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(naoRealizadasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(naoRealizadasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.95') {
                            let saldoBalancete = descontosProdutoPagamentoConcedidosCretido - descontosProdutoPagamentoConcedidosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(descontosProdutoPagamentoConcedidosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(descontosProdutoPagamentoConcedidosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(descontosProdutoPagamentoConcedidosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(descontosProdutoPagamentoConcedidosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.981') {
                            let saldoBalancete = servicosBancariosCretido - servicosBancariosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(servicosBancariosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(servicosBancariosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(servicosBancariosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(servicosBancariosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '6.989') {
                            let saldoBalancete = diversosNaoEspecificadosCretido - diversosNaoEspecificadosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(diversosNaoEspecificadosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(diversosNaoEspecificadosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(diversosNaoEspecificadosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(diversosNaoEspecificadosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.11') {
                            let saldoBalancete = mercadoriasCretido - mercadoriasDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(mercadoriasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(mercadoriasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(mercadoriasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(mercadoriasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.12') {
                            let saldoBalancete = produtosAcabadosIntermediosCretido - produtosAcabadosIntermediosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(produtosAcabadosIntermediosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(produtosAcabadosIntermediosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(produtosAcabadosIntermediosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(produtosAcabadosIntermediosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.13') {
                            let saldoBalancete = subprodutosDesperdiciosResiduosRefugosCretido - subprodutosDesperdiciosResiduosRefugosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(subprodutosDesperdiciosResiduosRefugosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(subprodutosDesperdiciosResiduosRefugosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(subprodutosDesperdiciosResiduosRefugosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(subprodutosDesperdiciosResiduosRefugosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.14') {
                            let saldoBalancete = activosBiologicosCretido - activosBiologicosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosBiologicosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosBiologicosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosBiologicosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosBiologicosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.15') {
                            let saldoBalancete = ivaVendasComImpostoIncluidoCretido - ivaVendasComImpostoIncluidoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(ivaVendasComImpostoIncluidoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(ivaVendasComImpostoIncluidoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(ivaVendasComImpostoIncluidoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(ivaVendasComImpostoIncluidoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.16') {
                            let saldoBalancete = devolucaoVendasCretido - devolucaoVendasDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(devolucaoVendasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(devolucaoVendasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(devolucaoVendasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(devolucaoVendasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.17') {
                            let saldoBalancete = descontosAbatimentosCretido - descontosAbatimentosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(descontosAbatimentosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(descontosAbatimentosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(descontosAbatimentosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(descontosAbatimentosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.21') {
                            let saldoBalancete = ivaPrestacaoServicosComImpostoIncluidoCretido - ivaPrestacaoServicosComImpostoIncluidoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(ivaPrestacaoServicosComImpostoIncluidoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(ivaPrestacaoServicosComImpostoIncluidoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(ivaPrestacaoServicosComImpostoIncluidoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(ivaPrestacaoServicosComImpostoIncluidoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.26') {
                            let saldoBalancete = descontosAbatimentos2Cretido - descontosAbatimentos2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(descontosAbatimentos2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(descontosAbatimentos2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(descontosAbatimentos2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(descontosAbatimentos2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.31') {
                            let saldoBalancete = investimentosFinanceiroswaCretido - investimentosFinanceiroswaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(investimentosFinanceiroswaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(investimentosFinanceiroswaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(investimentosFinanceiroswaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(investimentosFinanceiroswaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.32') {
                            let saldoBalancete = activosTangiveiswaCretido - activosTangiveiswaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveiswaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveiswaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveiswaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveiswaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.33') {
                            let saldoBalancete = activosIntangiveiswaCretido - activosIntangiveiswaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosIntangiveiswaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosIntangiveiswaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosIntangiveiswaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosIntangiveiswaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.34') {
                            let saldoBalancete = investimentosEmCursoCretido - investimentosEmCursoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(investimentosEmCursoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(investimentosEmCursoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(investimentosEmCursoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(investimentosEmCursoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.411') {
                            let saldoBalancete = ajustamentosInvestimentosParaValorRealizavelLiquidoCretido - ajustamentosInvestimentosParaValorRealizavelLiquidoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(ajustamentosInvestimentosParaValorRealizavelLiquidoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(ajustamentosInvestimentosParaValorRealizavelLiquidoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(ajustamentosInvestimentosParaValorRealizavelLiquidoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(ajustamentosInvestimentosParaValorRealizavelLiquidoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.412') {
                            let saldoBalancete = inventariosFinanceiros7412Cretido - inventariosFinanceiros7412Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(inventariosFinanceiros7412Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(inventariosFinanceiros7412Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(inventariosFinanceiros7412Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(inventariosFinanceiros7412Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.413') {
                            let saldoBalancete = activosTangiveiswq2Cretido - activosTangiveiswq2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveiswq2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveiswq2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveiswq2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveiswq2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.414') {
                            let saldoBalancete = activosIntangiveiswq2Cretido - activosIntangiveiswq2Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosIntangiveiswq2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosIntangiveiswq2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosIntangiveiswq2Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosIntangiveiswq2Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.415') {
                            let saldoBalancete = activosNaoCorrentesDetidosParaVendawaCretido - activosNaoCorrentesDetidosParaVendawaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosNaoCorrentesDetidosParaVendawaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosNaoCorrentesDetidosParaVendawaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosNaoCorrentesDetidosParaVendawaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosNaoCorrentesDetidosParaVendawaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.416') {
                            let saldoBalancete = activosTangiveisInvestimentoCretido - activosTangiveisInvestimentoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveisInvestimentoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveisInvestimentoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveisInvestimentoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveisInvestimentoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.417') {
                            let saldoBalancete = activosExploracaoAvaliacaoRecursosMineraisCretido - activosExploracaoAvaliacaoRecursosMineraisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosExploracaoAvaliacaoRecursosMineraisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosExploracaoAvaliacaoRecursosMineraisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosExploracaoAvaliacaoRecursosMineraisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosExploracaoAvaliacaoRecursosMineraisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.418') {
                            let saldoBalancete = contasReceberCretido - contasReceberDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(contasReceberDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(contasReceberCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(contasReceberDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(contasReceberCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.421') {
                            let saldoBalancete = activosTangiveiswq3Cretido - activosTangiveiswq3Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveiswq3Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveiswq3Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveiswq3Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveiswq3Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.422') {
                            let saldoBalancete = activosIntangiveiswq3Cretido - activosIntangiveiswq3Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosIntangiveiswq3Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosIntangiveiswq3Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosIntangiveiswq3Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosIntangiveiswq3Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.423') {
                            let saldoBalancete = activosTangiveisInvestimento7423Cretido - activosTangiveisInvestimento7423Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveisInvestimento7423Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveisInvestimento7423Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveisInvestimento7423Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveisInvestimento7423Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.424') {
                            let saldoBalancete = activosExploracaoAvaliacaoRecursosMineraisCretido - activosExploracaoAvaliacaoRecursosMineraisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosExploracaoAvaliacaoRecursosMineraisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosExploracaoAvaliacaoRecursosMineraisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosExploracaoAvaliacaoRecursosMineraisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosExploracaoAvaliacaoRecursosMineraisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.431') {
                            let saldoBalancete = processosJudiciaisEmCursoCretido - processosJudiciaisEmCursoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(processosJudiciaisEmCursoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(processosJudiciaisEmCursoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(processosJudiciaisEmCursoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(processosJudiciaisEmCursoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.432') {
                            let saldoBalancete = acidentesTrabalhoDoencasProfissionaisCretido - acidentesTrabalhoDoencasProfissionaisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(acidentesTrabalhoDoencasProfissionaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(acidentesTrabalhoDoencasProfissionaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(acidentesTrabalhoDoencasProfissionaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(acidentesTrabalhoDoencasProfissionaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.433') {
                            let saldoBalancete = impostosCretido - impostosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(impostosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(impostosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(impostosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(impostosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.434') {
                            let saldoBalancete = reestruturacaoNegociosCretido - reestruturacaoNegociosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(reestruturacaoNegociosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(reestruturacaoNegociosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(reestruturacaoNegociosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(reestruturacaoNegociosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.435') {
                            let saldoBalancete = contratosOnerososCretido - contratosOnerososDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(contratosOnerososDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(contratosOnerososCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(contratosOnerososDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(contratosOnerososCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.436') {
                            let saldoBalancete = garantiasClientesCretido - garantiasClientesDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(garantiasClientesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(garantiasClientesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(garantiasClientesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(garantiasClientesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.437') {
                            let saldoBalancete = perdasEmContratosConstrucaoCretido - perdasEmContratosConstrucaoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(perdasEmContratosConstrucaoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(perdasEmContratosConstrucaoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(perdasEmContratosConstrucaoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(perdasEmContratosConstrucaoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.439') {
                            let saldoBalancete = outrasProvisoesCretido - outrasProvisoesDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrasProvisoesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrasProvisoesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrasProvisoesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrasProvisoesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.51') {
                            let saldoBalancete = servicosSociaisCretido - servicosSociaisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(servicosSociaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(servicosSociaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(servicosSociaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(servicosSociaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.52') {
                            let saldoBalancete = aluguerEquipamentoCretido - aluguerEquipamentoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(aluguerEquipamentoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(aluguerEquipamentoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(aluguerEquipamentoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(aluguerEquipamentoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.53') {
                            let saldoBalancete = vendaEnergiaCretido - vendaEnergiaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(vendaEnergiaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(vendaEnergiaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(vendaEnergiaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(vendaEnergiaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.54') {
                            let saldoBalancete = estudosProjectosPesquisasInvestigacoesCretido - estudosProjectosPesquisasInvestigacoesDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(estudosProjectosPesquisasInvestigacoesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(estudosProjectosPesquisasInvestigacoesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(estudosProjectosPesquisasInvestigacoesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(estudosProjectosPesquisasInvestigacoesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.55') {
                            let saldoBalancete = assistenciaTecnicaCretido - assistenciaTecnicaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(assistenciaTecnicaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(assistenciaTecnicaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(assistenciaTecnicaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(assistenciaTecnicaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.56') {
                            let saldoBalancete = royaltieswaCretido - royaltieswaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(royaltieswaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(royaltieswaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(royaltieswaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(royaltieswaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.57') {
                            let saldoBalancete = cargosSociaisExerciciosNoutrasEmpresasCretido - cargosSociaisExerciciosNoutrasEmpresasDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(cargosSociaisExerciciosNoutrasEmpresasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(cargosSociaisExerciciosNoutrasEmpresasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(cargosSociaisExerciciosNoutrasEmpresasDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(cargosSociaisExerciciosNoutrasEmpresasCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.59') {
                            let saldoBalancete = outrosRendimentosSuplementaresInerentesAoValorAcrescentadoCretido - outrosRendimentosSuplementaresInerentesAoValorAcrescentadoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosRendimentosSuplementaresInerentesAoValorAcrescentadoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosRendimentosSuplementaresInerentesAoValorAcrescentadoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosRendimentosSuplementaresInerentesAoValorAcrescentadoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosRendimentosSuplementaresInerentesAoValorAcrescentadoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.611') {
                            let saldoBalancete = doEstadoOutrosOrganismosPublicos7611Cretido - doEstadoOutrosOrganismosPublicos7611Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(doEstadoOutrosOrganismosPublicos7611Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(doEstadoOutrosOrganismosPublicos7611Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(doEstadoOutrosOrganismosPublicos7611Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(doEstadoOutrosOrganismosPublicos7611Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.619') {
                            let saldoBalancete = deOutrasEntidades7619Cretido - deOutrasEntidades7619Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(deOutrasEntidades7619Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(deOutrasEntidades7619Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(deOutrasEntidades7619Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(deOutrasEntidades7619Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.621') {
                            let saldoBalancete = doEstadoOutrosOrganismosPublicos7621Cretido - doEstadoOutrosOrganismosPublicos7621Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(doEstadoOutrosOrganismosPublicos7621Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(doEstadoOutrosOrganismosPublicos7621Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(doEstadoOutrosOrganismosPublicos7621Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(doEstadoOutrosOrganismosPublicos7621Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.629') {
                            let saldoBalancete = deOutras7629EntidadesCretido - deOutras7629EntidadesDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(deOutras7629EntidadesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(deOutras7629EntidadesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(deOutras7629EntidadesDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(deOutras7629EntidadesCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.631') {
                            let saldoBalancete = alienacao7631Cretido - alienacao7631Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(alienacao7631Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(alienacao7631Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(alienacao7631Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(alienacao7631Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.632') {
                            let saldoBalancete = sinistros7632Cretido - sinistros7632Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(sinistros7632Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(sinistros7632Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(sinistros7632Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(sinistros7632Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.641') {
                            let saldoBalancete = sinistros7641Cretido - sinistros7641Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(sinistros7641Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(sinistros7641Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(sinistros7641Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(sinistros7641Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.642') {
                            let saldoBalancete = sobras7642Cretido - sobras7642Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(sobras7642Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(sobras7642Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(sobras7642Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(sobras7642Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.649') {
                            let saldoBalancete = outros7649Cretido - outros7649Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outros7649Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outros7649Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outros7649Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outros7649Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.691') {
                            let saldoBalancete = restituicaoImpostosCretido - restituicaoImpostosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(restituicaoImpostosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(restituicaoImpostosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(restituicaoImpostosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(restituicaoImpostosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.692') {
                            let saldoBalancete = beneficiosPenalidaesContratuaisCretido - beneficiosPenalidaesContratuaisDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(beneficiosPenalidaesContratuaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(beneficiosPenalidaesContratuaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(beneficiosPenalidaesContratuaisDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(beneficiosPenalidaesContratuaisCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.693') {
                            let saldoBalancete = excessoEstimativaParaImpostoCretido - excessoEstimativaParaImpostoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(excessoEstimativaParaImpostoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(excessoEstimativaParaImpostoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(excessoEstimativaParaImpostoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(excessoEstimativaParaImpostoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.699') {
                            let saldoBalancete = outros7699Cretido - outros7699Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outros7699Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outros7699Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outros7699Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outros7699Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.811') {
                            let saldoBalancete = depositoBancariosCretido - depositoBancariosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(depositoBancariosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(depositoBancariosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(depositoBancariosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(depositoBancariosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.812') {
                            let saldoBalancete = emprestimosCretido - emprestimosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(emprestimosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(emprestimosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(emprestimosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(emprestimosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.813') {
                            let saldoBalancete = obrigacoesTitulosParticipacaoCretido - obrigacoesTitulosParticipacaoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(obrigacoesTitulosParticipacaoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(obrigacoesTitulosParticipacaoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(obrigacoesTitulosParticipacaoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(obrigacoesTitulosParticipacaoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.814') {
                            let saldoBalancete = outrasAplicacoesTesourariaCretido - outrasAplicacoesTesourariaDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrasAplicacoesTesourariaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrasAplicacoesTesourariaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrasAplicacoesTesourariaDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrasAplicacoesTesourariaCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.82') {
                            let saldoBalancete = rendimentosActivosTangiveisInvestimentoCretido - rendimentosActivosTangiveisInvestimentoDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(rendimentosActivosTangiveisInvestimentoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(rendimentosActivosTangiveisInvestimentoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(rendimentosActivosTangiveisInvestimentoDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(rendimentosActivosTangiveisInvestimentoCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.83') {
                            let saldoBalancete = rendimentosInstrumentosFianceirosCretido - rendimentosInstrumentosFianceirosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(rendimentosInstrumentosFianceirosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(rendimentosInstrumentosFianceirosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(rendimentosInstrumentosFianceirosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(rendimentosInstrumentosFianceirosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.841') {
                            let saldoBalancete = realizadas7841Cretido - realizadas7841Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(realizadas7841Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(realizadas7841Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(realizadas7841Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(realizadas7841Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.842') {
                            let saldoBalancete = naoRealizadas7842Cretido - naoRealizadas7842Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(naoRealizadas7842Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(naoRealizadas7842Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(naoRealizadas7842Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(naoRealizadas7842Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.85') {
                            let saldoBalancete = descontosProntoPagamentoObtidosCretido - descontosProntoPagamentoObtidosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(descontosProntoPagamentoObtidosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(descontosProntoPagamentoObtidosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(descontosProntoPagamentoObtidosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(descontosProntoPagamentoObtidosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.89') {
                            let saldoBalancete = outrosRendimentosGanhosFinanceirosCretido - outrosRendimentosGanhosFinanceirosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosRendimentosGanhosFinanceirosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosRendimentosGanhosFinanceirosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(outrosRendimentosGanhosFinanceirosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(outrosRendimentosGanhosFinanceirosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.91') {
                            let saldoBalancete = instrumentosFinanceiros791Cretido - instrumentosFinanceiros791Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(instrumentosFinanceiros791Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(instrumentosFinanceiros791Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(instrumentosFinanceiros791Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(instrumentosFinanceiros791Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.92') {
                            let saldoBalancete = activosTangiveisInvestimento792Cretido - activosTangiveisInvestimento792Debito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveisInvestimento792Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveisInvestimento792Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosTangiveisInvestimento792Debito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosTangiveisInvestimento792Cretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }
                        if (carg == '7.93') {
                            let saldoBalancete = activosBiologicosCretido - activosBiologicosDebito;
                            if (saldoBalancete >= 0) {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosBiologicosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosBiologicosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(0)}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(saldoBalancete)}</div>`;
                            } else {
                                newCell1.innerHTML = `<div class="nu">${i + 1}</div>`;
                                newCell2.innerHTML = `<div class="numeroConta">${sorted[i]['name'] / 10000000}</div>`;
                                newCell3.innerHTML = `<div class="tipoConta">${sorted[i]['nome']}</div>`;
                                newCell4.innerHTML = `<div class="credito">${currencyFormat(activosBiologicosDebito)}</div>`;
                                newCell5.innerHTML = `<div class="debito">${currencyFormat(activosBiologicosCretido)}</div>`;
                                newCell6.innerHTML = `<div class="saldoCredito">${currencyFormat(Math.abs(saldoBalancete))}</div>`;
                                newCell7.innerHTML = `<div class="saldoDebito">${currencyFormat(0)}</div>`;
                            }
                        }

                    }
                    for (var i = 0; i < obj2.length; i++) {
                        if (obj2[i]['operacao'] == 'Débito') {
                            debito += parseInt(obj2[i]['value'])
                        } else {
                            cretido += parseInt(obj2[i]['value'])
                        }
                    }
                    let saldoCaixa = caixaCretido - caixaDebito;
                    let saldoBanco = bancoCretido - bancoDebito;
                    localStorage.setItem('saldoCaixa', saldoCaixa);
                    localStorage.setItem('saldoBanco', saldoBanco);
                    var newRow1 = myRecruta2.insertRow();
                    var newCell11 = newRow1.insertCell(0);
                    var newCell21 = newRow1.insertCell(1);
                    var newCell31 = newRow1.insertCell(2);
                    newCell11.innerHTML = `<div class="total">Total</div>`;
                    newCell21.innerHTML = `<div class="debito">${currencyFormat(debito - (caixaCretido + bancoCretido))}</div>`;
                    newCell31.innerHTML = `<div class="credito">${currencyFormat(cretido + caixaCretido + bancoCretido)}</div>`;
                    let classe8r = classe7 - classe6;

                    $(document).ready(function () {
                        $('#tabbb').DataTable({
                            "scrollX": true,
                            "scrollY": 600,
                        });
                    });
                    $(document).ready(function () {
                        $('#tabbb2').DataTable({
                            "scrollX": true,
                            "scrollY": 50,
                        });
                    });
                });

        }
        balancete();
    }
    if (e.target.id == "balanco") {
        function balanco() {
            nada = '';
            nada = ` 
        <div class="animate__animated animate__pulse card3 text-center mr-4">
        <div class="row align-items-center">
            <div class="col-md-6">
              <h1 class="mb-4 text-black"><span class="text-black">Balanço</span></h1>
            </div>
            <div class="col-md-6 d-none d-sm-none d-md-block">
              <img src="pics/Stocks2.png" alt="tours pics" class="img-fluid">
            </div>
          </div>
        </div>
        <div class="butoes m-4">
        
        </div>
        <div id="cargos"></div>
        <div id="parametro"></div>
        <div class="text-center card4">
            <h3 class="text-black">Patrimônio Líquido: <span id="patrimonioLiquido" class="text-black"></span></h3> 
            <h5 class="text-black">Patrimônio Líquido = Conta do Activo - Conta do Passivo</h5> 
        </div>
        <div class="text-center card4">
            <h1 class="text-black">Conta do Activo: <span id="contaActivo" class="text-black"></span></h1>
            <h5 class="text-black">Conta do Activo = Conta do Activo Circulante + Conta do Activo Não Circulante</h5> 
        </div>
        <div class="text-center card4">
            <h3 class="text-black">Conta do Activo Circulante: <span id="contaActivoCirculante" class="text-black"></span></h3> 
        </div>

        <div class="text-center cardTab animate__animated animate__pulse">
            <table class="table m-2" id="tabbb2">
                <thead>
                    <tr class="bg-gradient-primary text-center text-black">
                        <th scope="col">Conta</th>
                        <th scope="col">Soma do Saldo</th>
                    </tr>
                </thead>
                <tbody id="myRecruta" class="tt text-center text-black">                     
                </tbody>
            </table>
        </div>

        <div class="text-center card4">
            <h3 class="text-black">Conta do Activo Não Circulante: <span id="contaActivoNaoCirculante" class="text-black"></span></h3> 
        </div>

        <div class="text-center cardTab animate__animated animate__pulse">
            <table class="table m-2" id="tabbb">
                <thead>
                    <tr class="bg-gradient-primary text-center text-black">
                        <th scope="col">Conta</th>
                        <th scope="col">Soma do Saldo</th>
                    </tr>
                </thead>
                <tbody id="myRecruta2" class="tt text-center text-black">                     
                </tbody>
            </table>
        </div>

        <div class="text-center card4">
            <h1 class="text-black">Capital Próprio + Conta do Passivo: <span id="capitalProprioidMaisPassivos" class="text-black"></span></h1>
        </div>
        <div class="text-center card4">
            <h1 class="text-black">Capital Próprio: <span id="capitalProprioid" class="text-black"></span></h1>
        </div>

    <div class="text-center cardTab animate__animated animate__pulse">
        <table class="table m-2" id="tabbb5">
            <thead>
                <tr class="bg-gradient-primary text-center text-black">
                    <th scope="col">Conta</th>
                    <th scope="col">Soma do Saldo</th>
                </tr>
            </thead>
            <tbody id="myRecruta5" class="tt text-center text-black">                     
            </tbody>
        </table>
    </div>

        <div class="text-center card4">
            <h1 class="text-black">Conta do Passivo: <span id="contaPassivo" class="text-black"></span></h1>
            <h5 class="text-black">Conta do Passivo = Conta do Passivo Circulante + Conta do Passivo Não Circulante</h5>
        </div>
        <div class="text-center card4">
            <h3 class="text-black">Conta do Passivo Circulante: <span id="contaPassivoCirculante" class="text-black"></span></h3> 
        </div>

        <div class="text-center cardTab animate__animated animate__pulse">
            <table class="table m-2" id="tabbb3">
                <thead>
                    <tr class="bg-gradient-primary text-center text-black">
                        <th scope="col">Conta</th>
                        <th scope="col">Soma do Saldo</th>
                    </tr>
                </thead>
                <tbody id="myRecruta3" class="tt text-center text-black">                     
                </tbody>
            </table>
        </div>
        <div class="text-center card4">
            <h3 class="text-black">Conta do Passivo Não Circulante: <span id="contaPassivoNaoCirculante" class="text-black"></span></h3> 
        </div>
        <div class="text-center cardTab animate__animated animate__pulse">
            <table class="table m-2" id="tabbb4">
                <thead>
                    <tr class="bg-gradient-primary text-center text-black">
                        <th scope="col">Conta</th>
                        <th scope="col">Soma do Saldo</th>
                    </tr>
                </thead>
                <tbody id="myRecruta4" class="tt text-center text-black">                     
                </tbody>
            </table>
        </div>
        
                  
        `;
            contrudo.innerHTML = nada;

            // const totalGeral = document.getElementById('totalGeral');
            const myRecruta4 = document.getElementById('myRecruta4');
            const myRecruta3 = document.getElementById('myRecruta3');
            const myRecruta2 = document.getElementById('myRecruta2');
            const myRecruta5 = document.getElementById('myRecruta5');

            const contaActivoid = document.getElementById('contaActivo');
            const contaActivoCirculanteid = document.getElementById('contaActivoCirculante');
            const contaActivoNaoCirculanteid = document.getElementById('contaActivoNaoCirculante');

            const contaPassivoid = document.getElementById('contaPassivo');
            const capitalProprioidMaisPassivos = document.getElementById('capitalProprioidMaisPassivos');
            const capitalProprioid = document.getElementById('capitalProprioid');
            const contaPassivoCirculanteid = document.getElementById('contaPassivoCirculante');
            const contaPassivoNaoCirculanteid = document.getElementById('contaPassivoNaoCirculante');
            const patrimonioLiquidoid = document.getElementById('patrimonioLiquido');
            const myRecruta = document.getElementById('myRecruta');
            const empresa2 = localStorage.getItem('empresa');
            const url3 = `https://stocksmanager1.herokuapp.com/getAllDataPequenas/${empresa2}`;
            let obj = [];
            var obj2 = [];
            let obj3 = [];
            let ativoCirculante = [];
            let ativoNaoCirculante = [];
            let passivoCirculante = [];
            let passivoNaoCirculante = [];
            let capitalProprio = [];
            let holder = {};
            let holder2 = {};
            let holder3 = {};
            let total = 0;
            let ativo = 0;
            let ativoCirculanteSaldo = 0;
            let ativoNaoCirculanteSaldo = 0;
            let passivo = 0;
            let passivoCirculanteSaldo = 0;
            let passivoNaoCirculanteSaldo = 0;
            let patrimonioLiquido = 0;
            let capitalProprioSaldo = 0;
            let classe1 = 0;
            let classe2 = 0;
            let classe3 = 0;
            let classe4 = 0;
            let classe5 = 0;
            let classe6 = 0;
            let classe7 = 0;
            let classe8 = 0;
            let debito = 0;
            let cretido = 0;
            let j = 0;
            let indices = [];
            let tamanho = 0;

            function currencyFormat(num) {
                return num.toFixed(2).replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,')
            }
            fetch(url3)
                .then(res => res.json())
                .then(content => {
                    const data = content[0]['planoDeContas'];
                    console.log(content[0]);
                    for (var i = 0; i < data.length; i++) {
                        let lista = {
                            'name': `${content[0]['planoDeContas'][i]['tipoConta']}`,
                            'value': `${content[0]['planoDeContas'][i]['valor']}`,
                            'numero': `${content[0]['planoDeContas'][i]['numeroConta']}`,
                            'operacao': `${content[0]['planoDeContas'][i]['operacao']}`,
                        }
                        obj.push(lista);

                    }
                    console.log(obj);
                    obj.forEach(function (d) {
                        if (holder.hasOwnProperty(d.numero)) {
                            holder[d.numero] = parseInt(holder[d.numero]) + parseInt(d.value);
                            total++
                        } else {
                            holder[d.numero] = d.value;
                        }
                    });



                    console.log(holder);
                    tamanho = obj.length - total;
                    console.log(tamanho);
                    for (var i = 0; i < obj.length; i++) {
                        for (var pop in holder) {
                            if (pop == obj[i]['numero']) {
                                if (holder2.hasOwnProperty(pop)) {
                                    console.log('Lucas')
                                } else {
                                    console.log(pop.slice(0, 1));
                                    obj3.push(pop);
                                    obj2.push({
                                        "name": parseInt(pop),
                                        "operacao": `${obj[i]['operacao']}`,
                                        "nome": `${obj[i]['name']}`,
                                        "value": `${holder[pop]}`

                                    })
                                    holder2[pop] = obj[i]['name'];
                                    if (pop.slice(0, 1) == "1") {
                                        classe1 += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "2") {
                                        classe2 += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "3") {
                                        classe3 += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "4") {
                                        classe4 += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "5") {
                                        classe5 += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "6") {
                                        classe6 += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "7") {
                                        classe7 += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "8") {
                                        classe8 += parseInt(holder[pop]);
                                    }
                                }

                            }
                        }
                    }
                    for (var i = 0; i < obj2.length; i++) {
                        for (var pop in holder) {
                            if (pop == obj2[i]['name']) {
                                if (holder3.hasOwnProperty(pop)) {
                                    console.log('Lucas')
                                } else {
                                    holder3[pop] = obj2[i]['name'];
                                    if (pop.slice(0, 1) == "1") {
                                        ativoCirculante.push({
                                            "nome": `${obj2[i]['nome']}`,
                                            "value": `${holder[pop]}`
                                        })
                                        ativoCirculanteSaldo += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "2") {
                                        ativoCirculante.push({
                                            "nome": `${obj2[i]['nome']}`,
                                            "value": `${holder[pop]}`
                                        })
                                        ativoCirculanteSaldo += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "3") {
                                        ativoNaoCirculante.push({
                                            "nome": `${obj2[i]['nome']}`,
                                            "value": `${holder[pop]}`
                                        })
                                        ativoNaoCirculanteSaldo += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "4") {
                                        passivoCirculante.push({
                                            "nome": `${obj2[i]['nome']}`,
                                            "value": `${holder[pop]}`
                                        })
                                        passivoCirculanteSaldo += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "5") {
                                        capitalProprio.push({
                                            "nome": `${obj2[i]['nome']}`,
                                            "value": `${holder[pop]}`
                                        })

                                        capitalProprioSaldo += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "6") {
                                        passivoCirculante.push({
                                            "nome": `${obj2[i]['nome']}`,
                                            "value": `${holder[pop]}`
                                        })
                                        passivoCirculanteSaldo += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "7") {
                                        passivoNaoCirculante.push({
                                            "nome": `${obj2[i]['nome']}`,
                                            "value": `${holder[pop]}`
                                        })
                                        passivoNaoCirculanteSaldo += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "8") {
                                    }
                                }

                            }
                        }
                    }
                    if (true) {
                        capitalProprio.push({
                            "nome": "Resultado Liquido",
                            "value": `${resultadoLiquidoGuardar1}`
                        });
                        capitalProprioSaldo += parseInt(resultadoLiquidoGuardar1);
                    }
                    ativo += ativoCirculanteSaldo + ativoNaoCirculanteSaldo;
                    passivo += passivoCirculanteSaldo + passivoNaoCirculanteSaldo;

                    contaActivoid.innerHTML = currencyFormat(ativo);
                    contaActivoCirculanteid.innerHTML = currencyFormat(ativoCirculanteSaldo);
                    contaActivoNaoCirculanteid.innerHTML = currencyFormat(ativoNaoCirculanteSaldo);

                    contaPassivoid.innerHTML = currencyFormat(passivo);
                    contaPassivoCirculanteid.innerHTML = currencyFormat(passivoCirculanteSaldo);
                    contaPassivoNaoCirculanteid.innerHTML = currencyFormat(passivoNaoCirculanteSaldo);
                    capitalProprioid.innerHTML = currencyFormat(capitalProprioSaldo);
                    patrimonioLiquidoid.innerHTML = currencyFormat(ativo - passivo);
                    // totalGeral.innerHTML = currencyFormat(ativo + passivo);
                    capitalProprioidMaisPassivos.innerHTML = currencyFormat(capitalProprioSaldo + passivo);
                    console.log(obj2);
                    console.log(ativoCirculante);
                    for (var i = 0; i < ativoCirculante.length; i++) {
                        if (ativoCirculante[i]['nome'] == 'Caixa') {
                            var newRow = myRecruta.insertRow();
                            var newCell1 = newRow.insertCell(0);
                            var newCell2 = newRow.insertCell(1);
                            newCell1.innerHTML = `<div class="total">${ativoCirculante[i]['nome']}</div>`;
                            newCell2.innerHTML = `<div class="debito">${currencyFormat(parseInt(saldoCaixa))}</div>`;
                        } else {
                            if (ativoCirculante[i]['nome'] == 'Depósitos à Ordem') {
                                var newRow = myRecruta.insertRow();
                                var newCell1 = newRow.insertCell(0);
                                var newCell2 = newRow.insertCell(1);
                                newCell1.innerHTML = `<div class="total">${ativoCirculante[i]['nome']}</div>`;
                                newCell2.innerHTML = `<div class="debito">${currencyFormat(parseInt(saldoBanco))}</div>`;
                            } else {
                                var newRow = myRecruta.insertRow();
                                var newCell1 = newRow.insertCell(0);
                                var newCell2 = newRow.insertCell(1);
                                newCell1.innerHTML = `<div class="total">${ativoCirculante[i]['nome']}</div>`;
                                newCell2.innerHTML = `<div class="debito">${currencyFormat(parseInt(ativoCirculante[i]['value']))}</div>`;
                            }
                        }

                    }

                    for (var i = 0; i < ativoNaoCirculante.length; i++) {
                        var newRow1 = myRecruta2.insertRow();
                        var newCell11 = newRow1.insertCell(0);
                        var newCell21 = newRow1.insertCell(1);
                        newCell11.innerHTML = `<div class="total">${ativoNaoCirculante[i]['nome']}</div>`;
                        newCell21.innerHTML = `<div class="debito">${currencyFormat(parseInt(ativoNaoCirculante[i]['value']))}</div>`;
                    }
                    let classe8r = classe7 - classe6;

                    for (var i = 0; i < passivoCirculante.length; i++) {
                        var newRow2 = myRecruta3.insertRow();
                        var newCell111 = newRow2.insertCell(0);
                        var newCell112 = newRow2.insertCell(1);
                        newCell111.innerHTML = `<div class="total">${passivoCirculante[i]['nome']}</div>`;
                        newCell112.innerHTML = `<div class="total">${currencyFormat(parseInt(passivoCirculante[i]['value']))}</div>`;
                    }

                    for (var i = 0; i < passivoNaoCirculante.length; i++) {
                        var newRow3 = myRecruta4.insertRow();
                        var newCell1111 = newRow3.insertCell(0);
                        var newCell1122 = newRow3.insertCell(1);
                        newCell1111.innerHTML = `<div class="total">${passivoNaoCirculante[i]['nome']}</div>`;
                        newCell1122.innerHTML = `<div class="total">${currencyFormat(parseInt(passivoNaoCirculante[i]['value']))}</div>`;
                    }

                    for (var i = 0; i < capitalProprio.length; i++) {
                        var newRow4 = myRecruta5.insertRow();
                        var newCell11111 = newRow4.insertCell(0);
                        var newCell11222 = newRow4.insertCell(1);
                        newCell11111.innerHTML = `<div class="total">${capitalProprio[i]['nome']}</div>`;
                        newCell11222.innerHTML = `<div class="total">${currencyFormat(parseInt(capitalProprio[i]['value']))}</div>`;
                    }

                    $(document).ready(function () {
                        $('#tabbb').DataTable({
                            "scrollX": true,
                            "scrollY": 200,
                        });
                    });
                    $(document).ready(function () {
                        $('#tabbb2').DataTable({
                            "scrollX": true,
                            "scrollY": 200,
                        });
                    });
                    $(document).ready(function () {
                        $('#tabbb3').DataTable({
                            "scrollX": true,
                            "scrollY": 200,
                        });
                    });
                    $(document).ready(function () {
                        $('#tabbb4').DataTable({
                            "scrollX": true,
                            "scrollY": 200,
                        });
                    });
                    $(document).ready(function () {
                        $('#tabbb5').DataTable({
                            "scrollX": true,
                            "scrollY": 200,
                        });
                    });
                });

        }
        balanco();
    }
    if (e.target.id == "demostracaoResultados") {
        function demostracaoResultados() {
            nada = '';
            nada = ` 
        <div class="animate__animated animate__pulse card3 text-center mr-4">
        <div class="row align-items-center">
            <div class="col-md-6">
              <h1 class="mb-4 text-black"><span class="text-black">Demostração de Resultados</span></h1>
                <div class="card text-center">
                    <a href="#" class="text-center btn btn-lg btn-block" id="gerarPDF">Gerar PDF</a>   
                </div>
            </div>
            <div class="col-md-6 d-none d-sm-none d-md-block">
              <img src="pics/Stocks2.png" alt="tours pics" class="img-fluid">
            </div>
          </div>
        </div>
        <div class="butoes m-4">
        
        </div>
        <div id="cargos"></div>
        <div id="parametro"></div>
        <div class="text-center card4">
            <h3 class="text-black">Resultados Operacionais(Conta 8.1): <span id="patrimonioLiquido" class="text-black"></span></h3> 
            <h5 class="text-black">Resultados Operacionais(Conta 8.1) = Rendimentos e Ganhos(Contas 7.1 a 7.6) - Gastos e Perdas(Contas 6.1 a 6.8)</h5> 
        </div>
        <div class="text-center card4">
            <h3 class="text-black">Rendimentos e Ganhos(Contas 7.1 a 7.6): <span id="contaActivoCirculante" class="text-black"></span></h3> 
        </div>

        <div class="text-center cardTab animate__animated animate__pulse">
            <table class="table m-2" id="tabbb2">
                <thead>
                    <tr class="bg-gradient-primary text-center text-black">
                        <th scope="col">Conta</th>
                        <th scope="col">Soma do Saldo</th>
                    </tr>
                </thead>
                <tbody id="myRecruta" class="tt text-center text-black">                     
                </tbody>
            </table>
        </div>

        <div class="text-center card4">
            <h3 class="text-black">Gastos e Perdas(Contas 6.1 a 6.8): <span id="contaActivoNaoCirculante" class="text-black"></span></h3> 
        </div>

        <div class="text-center cardTab animate__animated animate__pulse">
            <table class="table m-2" id="tabbb">
                <thead>
                    <tr class="bg-gradient-primary text-center text-black">
                        <th scope="col">Conta</th>
                        <th scope="col">Soma do Saldo</th>
                    </tr>
                </thead>
                <tbody id="myRecruta2" class="tt text-center text-black">                     
                </tbody>
            </table>
        </div>
        <div class="text-center card4">
            <h3 class="text-black">Resultados Financeiros(Conta 8.2): <span id="contaPassivoCirculante" class="text-black"></span></h3> 
            <h5 class="text-black">Resultados Financeiros(Conta 8.2) = Rendimentos e Ganhos Finaceiros(Conta 7.8) - Gastos e Ganhos Finaceiros(Conta 6.9)</h5>
        </div>
        <div class="text-center card4">
            <h3 class="text-black">Rendimentos e Ganhos Finaceiros(Conta 7.8): <span id="contaPassivoCirculante2" class="text-black"></span></h3> 
            
        </div>

        <div class="text-center cardTab animate__animated animate__pulse">
            <table class="table m-2" id="tabbb3">
                <thead>
                    <tr class="bg-gradient-primary text-center text-black">
                        <th scope="col">Conta</th>
                        <th scope="col">Soma do Saldo</th>
                    </tr>
                </thead>
                <tbody id="myRecruta3" class="tt text-center text-black">                     
                </tbody>
            </table>
        </div>
        <div class="text-center card4">
            <h3 class="text-black">Gastos e Ganhos Finaceiros(Conta 6.9): <span id="contaPassivoNaoCirculante" class="text-black"></span></h3> 
            
        </div>
        <div class="text-center cardTab animate__animated animate__pulse">
            <table class="table m-2" id="tabbb4">
                <thead>
                    <tr class="bg-gradient-primary text-center text-black">
                        <th scope="col">Conta</th>
                        <th scope="col">Soma do Saldo</th>
                    </tr>
                </thead>
                <tbody id="myRecruta4" class="tt text-center text-black">                     
                </tbody>
            </table>
        </div>
        <div class="text-center card4">
            <h3 class="text-black">Resultado Líquido do Período(Conta 8.8): <span id="resultadoLiquido" class="text-black"></span></h3> 
            <h5 class="text-black">Resultado Líquido do Período = Resultados Correntes(Conta 8.3) - Imposto Sobre o Rendimento(Conta 8.5)</h5>
        </div>
        <div class="text-center card4">
            <h3 class="text-black">Resultados Correntes(Conta 8.3): <span id="resultadosCorrentes" class="text-black"></span></h3> 
            <h5 class="text-black">Resultados Correntes(Conta 8.3) = Resultados Operacionais(Conta 8.1) + Resultados Financeiros(Conta 8.2)</h5>
        </div>
        
        <div class="text-center card4">
            <h3 class="text-black">Imposto Sobre o Rendimento(Conta 8.5): <span id="impostoSobreRendimento" class="text-black"></span></h3> 
            
        </div>

        <div class="text-center cardTab animate__animated animate__pulse">
            <table class="table m-2" id="tabbb5">
                <thead>
                    <tr class="bg-gradient-primary text-center text-black">
                        <th scope="col">Conta</th>
                        <th scope="col">Soma do Saldo</th>
                    </tr>
                </thead>
                <tbody id="myRecruta5" class="tt text-center text-black">                     
                </tbody>
            </table>
        </div>
                  
        `;
            contrudo.innerHTML = nada;

            // const totalGeral = document.getElementById('totalGeral');
            const myRecruta4 = document.getElementById('myRecruta4');
            const myRecruta3 = document.getElementById('myRecruta3');
            const myRecruta2 = document.getElementById('myRecruta2');
            const gerarPDF = document.getElementById('gerarPDF');

            const myRecruta5 = document.getElementById('myRecruta5');
            const resultadoLiquido = document.getElementById('resultadoLiquido');
            const impostoSobreRendimento = document.getElementById('impostoSobreRendimento');
            const contaPassivoCirculante2 = document.getElementById('contaPassivoCirculante2');
            const contaActivoCirculanteid = document.getElementById('contaActivoCirculante');
            const contaActivoNaoCirculanteid = document.getElementById('contaActivoNaoCirculante');

            const contaPassivoid = document.getElementById('contaPassivo');
            const contaPassivoCirculanteid = document.getElementById('contaPassivoCirculante');
            const contaPassivoNaoCirculanteid = document.getElementById('contaPassivoNaoCirculante');
            const patrimonioLiquidoid = document.getElementById('patrimonioLiquido');
            const myRecruta = document.getElementById('myRecruta');
            const empresa2 = localStorage.getItem('empresa');
            const url3 = `https://stocksmanager1.herokuapp.com/getAllDataPequenas/${empresa2}`;
            let obj = [];
            var obj2 = [];
            let obj3 = [];
            let ativoCirculante = [];
            let ativoNaoCirculante = [];
            let passivoCirculante = [];
            let passivoNaoCirculante = [];
            let holder = {};
            let holder2 = {};
            let holder3 = {};
            let total = 0;
            let ativo = 0;
            let ativoCirculanteSaldo = 0;
            let ativoNaoCirculanteSaldo = 0;
            let passivo = 0;
            let passivoCirculanteSaldo = 0;
            let passivoNaoCirculanteSaldo = 0;
            let patrimonioLiquido = 0;
            let classe1 = 0;
            let classe2 = 0;
            let classe3 = 0;
            let classe4 = 0;
            let classe5 = 0;
            let classe6 = 0;
            let classe7 = 0;
            let classe8 = 0;
            let debito = 0;
            let cretido = 0;
            let j = 0;
            let indices = [];
            let tamanho = 0;
            let classe7Lista = [];
            let classe6Lista = [];
            let classe1Lista = [];
            let classe2Lista = [];
            let classe4Lista = [];
            let meiosFinanceiros = 0;
            let inventariosActivosBiologicos = 0;
            let resultadosFinanceiros = 0;
            let rendimentosGanhos = 0;
            let gastosPerdas = 0;
            let resultadosOperacionais = 0;
            let impostos = 0;
            function currencyFormat(num) {
                return num.toFixed(2).replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,')
            }
            fetch(url3)
                .then(res => res.json())
                .then(content => {
                    const data = content[0]['planoDeContas'];
                    console.log(content[0]);
                    for (var i = 0; i < data.length; i++) {
                        let lista = {
                            'name': `${content[0]['planoDeContas'][i]['tipoConta']}`,
                            'value': `${content[0]['planoDeContas'][i]['valor']}`,
                            'numero': `${content[0]['planoDeContas'][i]['numeroConta']}`,
                            'operacao': `${content[0]['planoDeContas'][i]['operacao']}`,
                        }
                        obj.push(lista);

                    }
                    console.log(obj);
                    obj.forEach(function (d) {
                        if (holder.hasOwnProperty(d.numero)) {
                            holder[d.numero] = parseInt(holder[d.numero]) + parseInt(d.value);
                            total++
                        } else {
                            holder[d.numero] = d.value;
                        }
                    });



                    console.log(holder);
                    tamanho = obj.length - total;
                    console.log(tamanho);
                    for (var i = 0; i < obj.length; i++) {
                        for (var pop in holder) {
                            if (pop == obj[i]['numero']) {
                                if (holder2.hasOwnProperty(pop)) {
                                    console.log('Lucas')
                                } else {
                                    console.log(pop.slice(0, 1));
                                    obj3.push(pop);
                                    obj2.push({
                                        "name": parseInt(pop),
                                        "operacao": `${obj[i]['operacao']}`,
                                        "nome": `${obj[i]['name']}`,
                                        "value": `${holder[pop]}`

                                    })
                                    holder2[pop] = obj[i]['name'];
                                    if (pop.slice(0, 1) == "1") {
                                        classe1 += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "2") {
                                        classe2 += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "3") {
                                        classe3 += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "4") {
                                        classe4 += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "5") {
                                        classe5 += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "6") {
                                        classe6 += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "7") {
                                        classe7 += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "8") {
                                        classe8 += parseInt(holder[pop]);
                                    }
                                }

                            }
                        }
                    }
                    for (var i = 0; i < obj2.length; i++) {
                        for (var pop in holder) {
                            if (pop == obj2[i]['name']) {
                                if (holder3.hasOwnProperty(pop)) {
                                    console.log('Lucas')
                                } else {
                                    holder3[pop] = obj2[i]['name'];
                                    if (pop.slice(0, 1) == "1") {
                                        ativoCirculante.push({
                                            "numero": `${obj2[i]['name']}`,
                                            "nome": `${obj2[i]['nome']}`,
                                            "value": `${holder[pop]}`
                                        });
                                        classe1Lista.push({
                                            "numero": `${obj2[i]['name']}`,
                                            "nome": `${obj2[i]['nome']}`,
                                            "value": `${holder[pop]}`
                                        });
                                        ativoCirculanteSaldo += parseInt(holder[pop]);
                                        meiosFinanceiros += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "2") {
                                        ativoCirculante.push({
                                            "numero": `${obj2[i]['name']}`,
                                            "nome": `${obj2[i]['nome']}`,
                                            "value": `${holder[pop]}`
                                        })
                                        classe2Lista.push({
                                            "numero": `${obj2[i]['name']}`,
                                            "nome": `${obj2[i]['nome']}`,
                                            "value": `${holder[pop]}`
                                        });
                                        ativoCirculanteSaldo += parseInt(holder[pop]);
                                        inventariosActivosBiologicos += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "3") {
                                        ativoNaoCirculante.push({
                                            "numero": `${obj2[i]['name']}`,
                                            "nome": `${obj2[i]['nome']}`,
                                            "value": `${holder[pop]}`
                                        })
                                        ativoNaoCirculanteSaldo += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "4") {
                                        passivoCirculante.push({
                                            "numero": `${obj2[i]['name']}`,
                                            "nome": `${obj2[i]['nome']}`,
                                            "value": `${holder[pop]}`
                                        });
                                        classe4Lista.push({
                                            "numero": `${obj2[i]['name']}`,
                                            "nome": `${obj2[i]['nome']}`,
                                            "value": `${holder[pop]}`
                                        });
                                        passivoCirculanteSaldo += parseInt(holder[pop]);
                                        impostos += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "5") {
                                        passivoCirculante.push({
                                            "numero": `${obj2[i]['name']}`,
                                            "nome": `${obj2[i]['nome']}`,
                                            "value": `${holder[pop]}`
                                        })

                                        passivoCirculanteSaldo += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "6") {
                                        passivoCirculante.push({
                                            "numero": `${obj2[i]['name']}`,
                                            "nome": `${obj2[i]['nome']}`,
                                            "value": `${holder[pop]}`
                                        });
                                        classe6Lista.push({
                                            "numero": `${obj2[i]['name']}`,
                                            "nome": `${obj2[i]['nome']}`,
                                            "value": `${holder[pop]}`
                                        });
                                        passivoCirculanteSaldo += parseInt(holder[pop]);
                                        gastosPerdas += parseInt(holder[pop]);
                                    }
                                    if (pop.slice(0, 1) == "7") {
                                        passivoNaoCirculante.push({
                                            "numero": `${obj2[i]['name']}`,
                                            "nome": `${obj2[i]['nome']}`,
                                            "value": `${holder[pop]}`
                                        });
                                        classe7Lista.push({
                                            "numero": `${obj2[i]['name']}`,
                                            "nome": `${obj2[i]['nome']}`,
                                            "value": `${holder[pop]}`
                                        });
                                        passivoNaoCirculanteSaldo += parseInt(holder[pop]);
                                        rendimentosGanhos += parseInt(holder[pop]);
                                    }

                                }

                            }
                        }
                    }

                    let rendimentosGanhosLista = [];
                    let gastosPerdasLista = [];
                    let impostoSobreRendimentoLista = [];
                    let rendimentosGanhosValor = 0;
                    let gastosPerdasValor = 0;
                    let impostoSobreRendimentoValor = 0;

                    let rendimentosGanhosFinanceirosLista = [];
                    let gastosPerdasFinanceirosLista = [];
                    let rendimentosGanhosFinanceirosValor = 0;
                    let gastosPerdasFinanceirosValor = 0;

                    if (true) {
                        rendimentosGanhosLista.push({
                            "numero": "71",
                            "nome": "Vendas",
                            "value": `${totalEstoqueew}`
                        });
                        rendimentosGanhosValor += parseInt(totalEstoqueew);
                    }

                    const resultadosCorrentes = document.getElementById('resultadosCorrentes');

                    for (var i = 0; i < classe7Lista.length; i++) {

                        if (classe7Lista[i]['numero'] == "711") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "712") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "713") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "714") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "715") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "716") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "717") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }

                        if (classe7Lista[i]['numero'] == "72") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "721") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "726") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }

                        if (classe7Lista[i]['numero'] == "73") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "731") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "732") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "733") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "734") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }

                        if (classe7Lista[i]['numero'] == "74") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "741") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7411") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7412") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7413") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7414") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "742") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7421") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7422") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7423") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "743") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7431") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7432") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7433") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7434") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7435") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7436") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7437") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7439") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }

                        if (classe7Lista[i]['numero'] == "75") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "76") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }

                        if (classe7Lista[i]['numero'] == "761") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7611") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7619") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "762") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7621") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7629") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "763") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7631") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7632") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "764") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7641") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7642") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7649") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "769") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7691") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7692") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7693") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7699") {
                            rendimentosGanhosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosValor += parseInt(classe7Lista[i]['value']);
                        }

                        if (classe7Lista[i]['numero'] == "78") {
                            rendimentosGanhosFinanceirosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosFinanceirosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "781") {
                            rendimentosGanhosFinanceirosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosFinanceirosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7811") {
                            rendimentosGanhosFinanceirosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosFinanceirosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7812") {
                            rendimentosGanhosFinanceirosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosFinanceirosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7814") {
                            rendimentosGanhosFinanceirosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosFinanceirosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7819") {
                            rendimentosGanhosFinanceirosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosFinanceirosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "782") {
                            rendimentosGanhosFinanceirosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosFinanceirosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "783") {
                            rendimentosGanhosFinanceirosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosFinanceirosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "784") {
                            rendimentosGanhosFinanceirosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosFinanceirosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7841") {
                            rendimentosGanhosFinanceirosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosFinanceirosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "7842") {
                            rendimentosGanhosFinanceirosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosFinanceirosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "785") {
                            rendimentosGanhosFinanceirosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosFinanceirosValor += parseInt(classe7Lista[i]['value']);
                        }
                        if (classe7Lista[i]['numero'] == "789") {
                            rendimentosGanhosFinanceirosLista.push({
                                "numero": `${classe7Lista[i]['numero']}`,
                                "nome": `${classe7Lista[i]['nome']}`,
                                "value": `${classe7Lista[i]['value']}`
                            });
                            rendimentosGanhosFinanceirosValor += parseInt(classe7Lista[i]['value']);
                        }
                    }
                    for (var i = 0; i < classe6Lista.length; i++) {
                        if (classe6Lista[i]['numero'] == "61") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "611") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6112") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6116") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "61161") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "61162") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "61163") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6117") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "612") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6121") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6122") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6123") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }

                        if (classe6Lista[i]['numero'] == "62") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "621") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "622") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "623") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "625") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6251") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6252") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "626") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6261") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6262") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "627") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "628") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "629") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }

                        if (classe6Lista[i]['numero'] == "63") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "631") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "632") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "63211") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "63212") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "63213") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "632131") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6321311") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6321312") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "632132") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6321321") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6321322") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "632133") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6321331") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6321332") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "63214") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "63215") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "632151") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "632152") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "63216") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "63217") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "63218") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "63221") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "63222") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "63223") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "63224") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "63225") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "63226") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "63227") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "632271") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "632272") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "63228") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "632281") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "632282") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "63229") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "63231") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "63232") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "632321") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "63233") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "632331") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "63234") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "63235") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "63236") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "63237") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "63299") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }

                        if (classe6Lista[i]['numero'] == "64") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "641") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "642") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "643") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "644") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6441") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6442") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }

                        if (classe6Lista[i]['numero'] == "65") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "651") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "652") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "653") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }

                        if (classe6Lista[i]['numero'] == "66") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "661") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "662") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "663") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "664") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "665") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "666") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "667") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "669") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }

                        if (classe6Lista[i]['numero'] == "68") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "681") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "682") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6821") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6822") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6823") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6824") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6825") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "683") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6831") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6832") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6833") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "684") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6841") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6842") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6849") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "689") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6891") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6892") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6893") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6894") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6895") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "68951") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "68952") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6896") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6899") {
                            gastosPerdasLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasValor += parseInt(classe6Lista[i]['value']);
                        }

                        if (classe6Lista[i]['numero'] == "69") {
                            gastosPerdasFinanceirosLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasFinanceirosValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "691") {
                            gastosPerdasFinanceirosLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasFinanceirosValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6911") {
                            gastosPerdasFinanceirosLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasFinanceirosValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6913") {
                            gastosPerdasFinanceirosLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasFinanceirosValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6914") {
                            gastosPerdasFinanceirosLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasFinanceirosValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6915") {
                            gastosPerdasFinanceirosLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasFinanceirosValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6916") {
                            gastosPerdasFinanceirosLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasFinanceirosValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "69161") {
                            gastosPerdasFinanceirosLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasFinanceirosValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "69162") {
                            gastosPerdasFinanceirosLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasFinanceirosValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6919") {
                            gastosPerdasFinanceirosLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasFinanceirosValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "694") {
                            gastosPerdasFinanceirosLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasFinanceirosValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6941") {
                            gastosPerdasFinanceirosLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasFinanceirosValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6942") {
                            gastosPerdasFinanceirosLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasFinanceirosValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "695") {
                            gastosPerdasFinanceirosLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasFinanceirosValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "698") {
                            gastosPerdasFinanceirosLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasFinanceirosValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6981") {
                            gastosPerdasFinanceirosLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasFinanceirosValor += parseInt(classe6Lista[i]['value']);
                        }
                        if (classe6Lista[i]['numero'] == "6989") {
                            gastosPerdasFinanceirosLista.push({
                                "numero": `${classe6Lista[i]['numero']}`,
                                "nome": `${classe6Lista[i]['nome']}`,
                                "value": `${classe6Lista[i]['value']}`
                            });
                            gastosPerdasFinanceirosValor += parseInt(classe6Lista[i]['value']);
                        }
                    }
                    for (var i = 0; i < classe4Lista.length; i++) {
                        if (classe4Lista[i]['numero'] == "44") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "441") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "4411") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "4412") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "4413") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "442") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "4421") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "4422") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "4423") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "4424") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "4425") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "443") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "4431") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "44311") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "44312") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "44313") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "4432") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "44321") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "44322") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "44323") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "4433") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "44331") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "44332") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "44333") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "4434") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "44341") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "44342") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "44343") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "4435") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "4436") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "4437") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "4438") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "4439") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "444") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "4441") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "4442") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "445") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                        if (classe4Lista[i]['numero'] == "449") {
                            impostoSobreRendimentoLista.push({
                                "numero": `${classe4Lista[i]['numero']}`,
                                "nome": `${classe4Lista[i]['nome']}`,
                                "value": `${classe4Lista[i]['value']}`
                            });
                            impostoSobreRendimentoValor += parseInt(classe4Lista[i]['value']);
                        }
                    }

                    ativo += ativoCirculanteSaldo + ativoNaoCirculanteSaldo;
                    passivo += passivoCirculanteSaldo + passivoNaoCirculanteSaldo;
                    resultadosFinanceiros += rendimentosGanhosFinanceirosValor - gastosPerdasFinanceirosValor;
                    resultadosOperacionais += rendimentosGanhosValor - gastosPerdasValor;
                    // contaActivoid.innerHTML = currencyFormat(ativo);

                    resultadosCorrentes.innerHTML = currencyFormat(resultadosOperacionais + resultadosFinanceiros);
                    contaActivoCirculanteid.innerHTML = currencyFormat(rendimentosGanhosValor);
                    contaActivoNaoCirculanteid.innerHTML = currencyFormat(gastosPerdas);
                    contaPassivoCirculante2.innerHTML = currencyFormat(rendimentosGanhosFinanceirosValor);

                    resultadoLiquido.innerHTML = currencyFormat(resultadosOperacionais + resultadosFinanceiros - impostoSobreRendimentoValor);
                    let resultadoLiquidoGuardar = resultadosOperacionais + resultadosFinanceiros - impostoSobreRendimentoValor;
                    localStorage.setItem('resultadoLiquidoGuardar', resultadoLiquidoGuardar);
                    impostoSobreRendimento.innerHTML = currencyFormat(impostoSobreRendimentoValor);
                    // contaPassivoid.innerHTML = currencyFormat(passivo);
                    contaPassivoCirculanteid.innerHTML = currencyFormat(resultadosFinanceiros);
                    contaPassivoNaoCirculanteid.innerHTML = currencyFormat(gastosPerdasFinanceirosValor);
                    patrimonioLiquidoid.innerHTML = currencyFormat(resultadosOperacionais);
                    // totalGeral.innerHTML = currencyFormat(ativo + passivo)
                    console.log(obj2);
                    console.log(ativoCirculante);
                    for (var i = 0; i < rendimentosGanhosLista.length; i++) {
                        var newRow = myRecruta.insertRow();
                        var newCell1 = newRow.insertCell(0);
                        var newCell2 = newRow.insertCell(1);
                        newCell1.innerHTML = `<div class="total">${rendimentosGanhosLista[i]['nome']}</div>`;
                        newCell2.innerHTML = `<div class="debito">${currencyFormat(parseInt(rendimentosGanhosLista[i]['value']))}</div>`;
                    }

                    for (var i = 0; i < gastosPerdasLista.length; i++) {
                        var newRow1 = myRecruta2.insertRow();
                        var newCell11 = newRow1.insertCell(0);
                        var newCell21 = newRow1.insertCell(1);
                        newCell11.innerHTML = `<div class="total">${gastosPerdasLista[i]['nome']}</div>`;
                        newCell21.innerHTML = `<div class="debito">${currencyFormat(parseInt(gastosPerdasLista[i]['value']))}</div>`;
                    }
                    let classe8r = classe7 - classe6;

                    for (var i = 0; i < rendimentosGanhosFinanceirosLista.length; i++) {
                        var newRow2 = myRecruta3.insertRow();
                        var newCell111 = newRow2.insertCell(0);
                        var newCell112 = newRow2.insertCell(1);
                        newCell111.innerHTML = `<div class="total">${rendimentosGanhosFinanceirosLista[i]['nome']}</div>`;
                        newCell112.innerHTML = `<div class="total">${currencyFormat(parseInt(rendimentosGanhosFinanceirosLista[i]['value']))}</div>`;
                    }

                    for (var i = 0; i < gastosPerdasFinanceirosLista.length; i++) {
                        var newRow3 = myRecruta4.insertRow();
                        var newCell1111 = newRow3.insertCell(0);
                        var newCell1122 = newRow3.insertCell(1);
                        newCell1111.innerHTML = `<div class="total">${gastosPerdasFinanceirosLista[i]['nome']}</div>`;
                        newCell1122.innerHTML = `<div class="total">${currencyFormat(parseInt(gastosPerdasFinanceirosLista[i]['value']))}</div>`;
                    }

                    for (var i = 0; i < impostoSobreRendimentoLista.length; i++) {
                        var newRow3 = myRecruta5.insertRow();
                        var newCell11111 = newRow3.insertCell(0);
                        var newCell11222 = newRow3.insertCell(1);
                        newCell11111.innerHTML = `<div class="total">${impostoSobreRendimentoLista[i]['nome']}</div>`;
                        newCell11222.innerHTML = `<div class="total">${currencyFormat(parseInt(impostoSobreRendimentoLista[i]['value']))}</div>`;
                    }

                    $(document).ready(function () {
                        $('#tabbb').DataTable({
                            "scrollX": true,
                            "scrollY": 200,
                        });
                    });
                    $(document).ready(function () {
                        $('#tabbb2').DataTable({
                            "scrollX": true,
                            "scrollY": 200,
                        });
                    });
                    $(document).ready(function () {
                        $('#tabbb3').DataTable({
                            "scrollX": true,
                            "scrollY": 200,
                        });
                    });
                    $(document).ready(function () {
                        $('#tabbb4').DataTable({
                            "scrollX": true,
                            "scrollY": 200,
                        });
                    });
                    $(document).ready(function () {
                        $('#tabbb5').DataTable({
                            "scrollX": true,
                            "scrollY": 200,
                        });
                    });

                    $("#gerarPDF").on("click", function () {
                        $("#tabbb").tableHTMLExport({ type: "pdf", filename: "sample.pdf" });
                    });
                });

        }
        demostracaoResultados();
    }


    console.log(e.target.id);

});